{"version":3,"sources":["webpack://VueTreeselect/webpack/bootstrap","webpack://VueTreeselect/external \"@babel/runtime/helpers/defineProperty\"","webpack://VueTreeselect/external \"babel-helper-vue-jsx-merge-props\"","webpack://VueTreeselect/external \"@babel/runtime/helpers/toConsumableArray\"","webpack://VueTreeselect/external \"lodash/noop\"","webpack://VueTreeselect/external \"lodash/debounce\"","webpack://VueTreeselect/external \"is-promise\"","webpack://VueTreeselect/external \"lodash/once\"","webpack://VueTreeselect/external \"lodash/identity\"","webpack://VueTreeselect/external \"lodash/constant\"","webpack://VueTreeselect/external \"lodash/last\"","webpack://VueTreeselect/external \"@babel/runtime/helpers/slicedToArray\"","webpack://VueTreeselect/external \"fuzzysearch\"","webpack://VueTreeselect/external \"watch-size\"","webpack://VueTreeselect/external \"@babel/runtime/helpers/typeof\"","webpack://VueTreeselect/external \"vue\"","webpack://VueTreeselect/./src/utils/warning.js","webpack://VueTreeselect/./src/utils/onLeftClick.js","webpack://VueTreeselect/./src/utils/scrollIntoView.js","webpack://VueTreeselect/./src/utils/watchSize.js","webpack://VueTreeselect/./src/utils/removeFromArray.js","webpack://VueTreeselect/./src/utils/setupResizeAndScrollEventListeners.js","webpack://VueTreeselect/./src/utils/isNaN.js","webpack://VueTreeselect/./src/utils/createMap.js","webpack://VueTreeselect/./src/utils/deepExtend.js","webpack://VueTreeselect/./src/utils/includes.js","webpack://VueTreeselect/./src/utils/find.js","webpack://VueTreeselect/./src/utils/quickDiff.js","webpack://VueTreeselect/./src/constants.js","webpack://VueTreeselect/./src/mixins/treeselectMixin.js","webpack://VueTreeselect/src/components/HiddenFields.vue","webpack://VueTreeselect/./node_modules/vue-loader/lib/runtime/componentNormalizer.js","webpack://VueTreeselect/./src/components/HiddenFields.vue","webpack://VueTreeselect/src/components/Input.vue","webpack://VueTreeselect/./src/components/Input.vue","webpack://VueTreeselect/./src/components/Placeholder.vue","webpack://VueTreeselect/src/components/Placeholder.vue","webpack://VueTreeselect/./src/components/SingleValue.vue","webpack://VueTreeselect/src/components/SingleValue.vue","webpack://VueTreeselect/./src/components/icons/Delete.vue?9af8","webpack://VueTreeselect/src/components/icons/Delete.vue","webpack://VueTreeselect/./src/components/icons/Delete.vue","webpack://VueTreeselect/./src/components/MultiValueItem.vue","webpack://VueTreeselect/src/components/MultiValueItem.vue","webpack://VueTreeselect/./src/components/MultiValue.vue","webpack://VueTreeselect/src/components/MultiValue.vue","webpack://VueTreeselect/./src/components/icons/Arrow.vue?a3ef","webpack://VueTreeselect/src/components/icons/Arrow.vue","webpack://VueTreeselect/./src/components/icons/Arrow.vue","webpack://VueTreeselect/./src/components/Control.vue","webpack://VueTreeselect/src/components/Control.vue","webpack://VueTreeselect/./src/components/Tip.vue","webpack://VueTreeselect/src/components/Tip.vue","webpack://VueTreeselect/src/components/Option.vue","webpack://VueTreeselect/./src/components/Option.vue","webpack://VueTreeselect/src/components/Menu.vue","webpack://VueTreeselect/./src/components/Menu.vue","webpack://VueTreeselect/src/components/MenuPortal.vue","webpack://VueTreeselect/./src/components/MenuPortal.vue","webpack://VueTreeselect/./src/components/Treeselect.vue","webpack://VueTreeselect/src/components/Treeselect.vue","webpack://VueTreeselect/./src/index.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","require","warning","noop","onLeftClick","mouseDownHandler","evt","type","button","_len","arguments","length","args","Array","_key","apply","this","concat","scrollIntoView","$scrollingEl","$focusedEl","scrollingReact","getBoundingClientRect","focusedRect","overScroll","offsetHeight","bottom","scrollTop","Math","min","offsetTop","clientHeight","scrollHeight","top","max","intervalId","removeFromArray","arr","elem","idx","indexOf","splice","registered","test","item","$el","listener","lastWidth","lastHeight","width","offsetWidth","height","watchSizeForIE9","push","setInterval","forEach","clearInterval","watchSize","isIE9","document","documentMode","locked","removeSizeWatcher","watchSizeForBrowsersOtherThanIE9","isScrollElment","_getComputedStyle","getComputedStyle","overflow","overflowX","overflowY","setupResizeAndScrollEventListeners","$scrollParents","$parent","parentNode","nodeName","nodeType","ELEMENT_NODE","window","findScrollParents","addEventListener","passive","scrollParent","removeEventListener","$scrollParent","isNaN","x","createMap","isPlainObject","_typeof","getPrototypeOf","deepExtend","target","source","keys","len","obj","includes","arrOrStr","find","predicate","ctx","quickDiff","arrA","arrB","LOAD_ROOT_OPTIONS","LOAD_CHILDREN_OPTIONS","ASYNC_SEARCH","KEY_CODES","sortValueByIndex","a","b","level","index","match","enableFuzzyMatch","needle","haystack","fuzzysearch","getErrorMessage","err","message","String","instanceId","provide","instance","props","allowClearingDisabled","Boolean","default","allowSelectingDisabledDescendants","alwaysOpen","appendToBody","async","autoFocus","autoLoadRootOptions","autoDeselectAncestors","autoDeselectDescendants","autoSelectAncestors","autoSelectDescendants","backspaceRemoves","beforeClearAll","Function","constant","branchNodesFirst","cacheOptions","clearable","clearAllText","clearOnSelect","clearValueText","closeOnSelect","defaultExpandLevel","Number","defaultOptions","deleteRemoves","delimiter","disableBranchNodes","disabled","disableFuzzyMatching","expandParentsInMenuForSelected","flat","flattenSearchResults","joinValues","limit","Infinity","limitText","count","loadingText","loadOptions","matchKeys","maxExpandMatchesOnSearch","maxHeight","multiple","noChildrenText","noExpandOnSearch","noOptionsText","noResultsText","normalizer","identity","openDirection","validator","openOnClick","openOnFocus","options","placeholder","required","retryText","retryTitle","scrollPositionOnCenter","searchable","searchMinInputLength","searchNested","searchPromptText","showCount","showCountOf","showCountOnSearch","showNodeWhenNoSelection","sortValueBy","tabIndex","useOnlyIsDisabled","valueConsistsOf","valueFormat","zIndex","data","trigger","isFocused","searchQuery","menu","isOpen","current","lastScrollPosition","placement","forest","normalizedOptions","nodeMap","checkedStateMap","selectedNodeIds","extractCheckedNodeIdsFromValue","selectedNodeMap","rootOptionsStates","isLoaded","isLoading","loadingError","localSearch","active","noResults","countMap","remoteSearch","computed","selectedNodes","map","getNode","internalValue","_this","single","slice","filter","id","node","isRootNode","isSelected","isLeaf","children","_internalValue","indeterminateNodeIds","selectedNode","ancestors","ancestor","sort","sortValueByLevel","hasValue","visibleOptionIds","_this2","traverseAllNodesByIndex","shouldOptionBeIncludedInSearchResult","isBranch","shouldExpand","hasVisibleOptions","showCountOnSearchComputed","hasBranchNodes","some","rootNode","shouldFlattenOptions","watch","newValue","openMenu","closeMenu","initialize","oldValue","$emit","getValue","getInstanceId","buildForestState","handler","isArray","deep","immediate","handleRemoteSearch","handleLocalSearch","nodeIdsFromValue","fixSelectedNodeIds","expandParentNodesOfSelected","showDefaultNodeIfNoSelection","methods","verifyProps","_this3","propName","resetFlags","_blurOnSelect","getRemoteSearchEntry","prevNodeMap","keepDataOfSelectedNodes","normalize","$nextTick","_this4","rawNodes","raw","nodeId","createFallbackNode","extractNodeFromValue","fallbackNode","label","enhancedNormalizer","isFallbackNode","isDisabled","isNew","$set","_this5","_this6","defaultNode","nodeIdListOfPrevValue","_this7","nextSelectedNodeIds","traverseDescendantsBFS","descendant","queue","shift","_this8","_objectSpread","callback","currNode","_toConsumableArray","traverseDescendantsDFS","_this9","child","traverseAllNodesDFS","_this10","walk","toggleClickOutsideEvent","enabled","handleClickOutside","getValueContainer","$refs","control","getInput","input","focusInput","focus","blurInput","blur","handleMouseDown","preventDefault","stopPropagation","contains","wrapper","portal","portalTarget","_this11","done","resetHighlightedOptionWhenNecessary","isExpandedOnSearch","showAllChildrenOnSearch","isMatched","hasMatchedDescendants","_defineProperty","lowerCasedSearchQuery","trim","toLocaleLowerCase","splitSearchQuery","replace","split","every","filterValue","nestedSearchLabel","matchKey","lowerCased","_this12","entry","callLoadOptionsProp","action","isPending","start","succeed","fail","end","_this13","$watch","isExpanded","shouldShowOptionInMenu","getControl","getMenu","$menu","setCurrentHighlightedOption","_this14","scroll","undefined","prev","isHighlighted","scrollToOption","$option","querySelector","forceReset","highlightFirstOption","first","highlightPrevOption","highlightLastOption","highlightNextOption","next","last","getLast","resetSearchQuery","saveMenuScrollPosition","restoreMenuScrollPosition","loadRootOptions","scrollMenuOnCenter","toggleMenu","toggleExpanded","nextState","childrenStates","loadChildrenOptions","_this15","selectedNodeId","ancestorNode","nodes","_this16","_ref","_ref2","_slicedToArray","checkDuplication","verifyNodeShape","isDefaultExpanded","reduce","normalized","hasDisabledDescendants","branchNodes","option","leafNodes","_this17","_this18","_ref3","once","result","isPromise","then","catch","console","error","_this19","JSON","stringify","select","clear","_selectNode","_deselectNode","_this20","_this21","addValue","isFullyChecked","curr","_this22","removeValue","hasUncheckedSomeDescendants","bulk","removeLastValue","lastValue","lastSelectedNode","expandParentNodes","nodeIds","_step","_iterator","_createForOfIteratorHelper","_step2","_iterator2","e","f","scrollMenuToOption","position","_this23","created","mounted","destroyed","stringifyValue","normalizeComponent","scriptExports","render","staticRenderFns","functionalTemplate","injectStyles","scopeId","moduleIdentifier","shadowMode","hook","_compiled","functional","_scopeId","context","$vnode","ssrContext","parent","__VUE_SSR_CONTEXT__","_registeredComponents","add","_ssrRegister","$root","$options","shadowRoot","_injectStyles","originalRender","h","existing","beforeCreate","component","inject","_","injections","stringifiedValues","join","stringifiedValue","attrs","domProps","__file","keysThatRequireMenuBeingOpen","inputWidth","needAutoSize","inputStyle","updateInputWidth","debouncedCallback","debounce","updateSearchQuery","leading","trailing","onInput","onFocus","onBlur","activeElement","cancel","onKeyDown","which","keyCode","ctrlKey","shiftKey","altKey","metaKey","onMouseDown","renderInputContainer","$createElement","renderInput","renderSizer","on","keydown","ref","_mergeJSXProps","autocomplete","style","sizer","scrollWidth","placeholderClass","renderSingleValueLabel","customValueLabelRenderer","$scopedSlots","renderValueContainer","shouldShowValue","Placeholder","Input","_c","_self","xmlns","viewBox","_withStripped","itemClass","labelRenderer","DeleteIcon","renderMultiValueItems","MultiValueItem","renderExceedLimitTip","transitionGroupProps","tag","appear","shouldShowX","hasUndisabledValue","shouldShowArrow","renderX","title","handleMouseDownOnX","renderArrow","arrowClass","handleMouseDownOnArrow","ArrowIcon","shouldClear","setTimeout","previouslyFocused","ValueContainer","SingleValue","MultiValue","icon","arrowPlaceholder","checkMark","minusMark","Option","shouldShow","renderOption","handleMouseEnterOption","renderLabelContainer","renderCheckboxContainer","renderCheckbox","renderLabel","renderSubOptionsList","renderSubOptions","renderNoChildrenTip","renderLoadingChildrenTip","renderLoadingChildrenErrorTip","handleMouseDownOnLabelContainer","checkedState","checkboxClass","shouldShowCount","NaN","customLabelRenderer","labelClassName","countClassName","childNode","Tip","handleMouseDownOnRetry","currentTarget","indentLevel","listItemClass","transitionProps","directionMap","above","below","menuStyle","menuContainerStyle","display","onMenuOpen","onMenuClose","menuSizeWatcher","menuResizeAndScrollEventListeners","renderMenu","renderBeforeList","renderAsyncSearchMenuInner","renderLocalSearchMenuInner","renderNormalMenuInner","renderAfterList","beforeListRenderer","afterListRenderer","renderLoadingOptionsTip","renderLoadingRootOptionsErrorTip","renderNoAvailableOptionsTip","renderOptionList","renderNoResultsTip","shouldShowSearchPromptTip","shouldShowNoResultsTip","renderSearchPromptTip","renderAsyncSearchLoadingErrorTip","adjustMenuOpenDirection","setupMenuSizeWatcher","setupMenuResizeAndScrollEventListeners","removeMenuSizeWatcher","removeMenuResizeAndScrollEventListeners","$control","menuRect","controlRect","menuHeight","viewportHeight","innerHeight","spaceAbove","hasEnoughSpaceBelow","hasEnoughSpaceAbove","remove","PortalTarget","setupHandlers","removeHandlers","updateMenuContainerOffset","controlResizeAndScrollEventListeners","controlSizeWatcher","updateWidth","setupControlResizeAndScrollEventListeners","setupControlSizeWatcher","removeControlResizeAndScrollEventListeners","removeControlSizeWatcher","$portalTarget","portalTargetRect","offsetY","left","round","body","portalTargetClass","wrapperClass","portalTargetStyle","Menu","setup","teardown","el","createElement","appendChild","Vue","removeChild","innerHTML","$destroy","mixins","treeselectMixin","HiddenFields","Control","MenuPortal","VERSION","Treeselect","PKG_VERSION"],"mappings":"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","file":"vue-treeselect.cjs.min.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 16);\n","module.exports = require(\"@babel/runtime/helpers/defineProperty\");","module.exports = require(\"babel-helper-vue-jsx-merge-props\");","module.exports = require(\"@babel/runtime/helpers/toConsumableArray\");","module.exports = require(\"lodash/noop\");","module.exports = require(\"lodash/debounce\");","module.exports = require(\"is-promise\");","module.exports = require(\"lodash/once\");","module.exports = require(\"lodash/identity\");","module.exports = require(\"lodash/constant\");","module.exports = require(\"lodash/last\");","module.exports = require(\"@babel/runtime/helpers/slicedToArray\");","module.exports = require(\"fuzzysearch\");","module.exports = require(\"watch-size\");","module.exports = require(\"@babel/runtime/helpers/typeof\");","module.exports = require(\"vue\");","import { noop } from './noop'\n\nexport const warning = process.env.NODE_ENV === 'production'\n  ? /* istanbul ignore next */ noop\n  : function warning(checker, complainer) {\n    if (!checker()) {\n      const message = [ '[Vue-Treeselect Warning]' ].concat(complainer())\n      // eslint-disable-next-line no-console\n      console.error(...message)\n    }\n  }\n","export function onLeftClick(mouseDownHandler) {\n  return function onMouseDown(evt, ...args) {\n    if (evt.type === 'mousedown' && evt.button === 0) {\n      mouseDownHandler.call(this, evt, ...args)\n    }\n  }\n}\n","// from react-select\nexport function scrollIntoView($scrollingEl, $focusedEl) {\n  const scrollingReact = $scrollingEl.getBoundingClientRect()\n  const focusedRect = $focusedEl.getBoundingClientRect()\n  const overScroll = $focusedEl.offsetHeight / 3\n\n  if (focusedRect.bottom + overScroll > scrollingReact.bottom) {\n    $scrollingEl.scrollTop = Math.min(\n      $focusedEl.offsetTop + $focusedEl.clientHeight - $scrollingEl.offsetHeight + overScroll,\n      $scrollingEl.scrollHeight,\n    )\n  } else if (focusedRect.top - overScroll < scrollingReact.top) {\n    $scrollingEl.scrollTop = Math.max($focusedEl.offsetTop - overScroll, 0)\n  }\n}\n","import watchSizeForBrowsersOtherThanIE9 from 'watch-size'\nimport { removeFromArray } from './removeFromArray'\n\nlet intervalId\nconst registered = []\nconst INTERVAL_DURATION = 100\n\nfunction run() {\n  intervalId = setInterval(() => {\n    registered.forEach(test)\n  }, INTERVAL_DURATION)\n}\n\nfunction stop() {\n  clearInterval(intervalId)\n  intervalId = null\n}\n\nfunction test(item) {\n  const { $el, listener, lastWidth, lastHeight } = item\n  const width = $el.offsetWidth\n  const height = $el.offsetHeight\n\n  if (lastWidth !== width || lastHeight !== height) {\n    item.lastWidth = width\n    item.lastHeight = height\n\n    listener({ width, height })\n  }\n}\n\nfunction watchSizeForIE9($el, listener) {\n  const item = {\n    $el,\n    listener,\n    lastWidth: null,\n    lastHeight: null,\n  }\n  const unwatch = () => {\n    removeFromArray(registered, item)\n    if (!registered.length) stop()\n  }\n\n  registered.push(item)\n  // The original watch-size will call the listener on initialization.\n  // Keep the same behavior here.\n  test(item)\n  run()\n\n  return unwatch\n}\n\nexport function watchSize($el, listener) {\n  // See: https://stackoverflow.com/a/31293352\n  const isIE9 = document.documentMode === 9\n  // watch-size will call the listener on initialization.\n  // Disable this behavior with a lock to achieve a clearer code logic.\n  let locked = true\n  const wrappedListener = (...args) => locked || listener(...args)\n  const implementation = isIE9\n    ? watchSizeForIE9\n    : watchSizeForBrowsersOtherThanIE9\n  const removeSizeWatcher = implementation($el, wrappedListener)\n  locked = false // unlock after initialization\n\n  return removeSizeWatcher\n}\n","export function removeFromArray(arr, elem) {\n  const idx = arr.indexOf(elem)\n  if (idx !== -1) arr.splice(idx, 1)\n}\n","function findScrollParents($el) {\n  const $scrollParents = []\n  let $parent = $el.parentNode\n\n  while ($parent && $parent.nodeName !== 'BODY' && $parent.nodeType === document.ELEMENT_NODE) {\n    if (isScrollElment($parent)) $scrollParents.push($parent)\n    $parent = $parent.parentNode\n  }\n  $scrollParents.push(window)\n\n  return $scrollParents\n}\n\nfunction isScrollElment($el) {\n  // Firefox wants us to check `-x` and `-y` variations as well\n  const { overflow, overflowX, overflowY } = getComputedStyle($el)\n  return /(auto|scroll|overlay)/.test(overflow + overflowY + overflowX)\n}\n\nexport function setupResizeAndScrollEventListeners($el, listener) {\n  const $scrollParents = findScrollParents($el)\n\n  window.addEventListener('resize', listener, { passive: true })\n  $scrollParents.forEach(scrollParent => {\n    scrollParent.addEventListener('scroll', listener, { passive: true })\n  })\n\n  return function removeEventListeners() {\n    window.removeEventListener('resize', listener, { passive: true })\n    $scrollParents.forEach($scrollParent => {\n      $scrollParent.removeEventListener('scroll', listener, { passive: true })\n    })\n  }\n}\n","export function isNaN(x) {\n  return x !== x\n}\n","export const createMap = () => Object.create(null)\n","function isPlainObject(value) {\n  if (value == null || typeof value !== 'object') return false\n  return Object.getPrototypeOf(value) === Object.prototype\n}\n\nfunction copy(obj, key, value) {\n  if (isPlainObject(value)) {\n    obj[key] || (obj[key] = {})\n    deepExtend(obj[key], value)\n  } else {\n    obj[key] = value\n  }\n}\n\nexport function deepExtend(target, source) {\n  if (isPlainObject(source)) {\n    const keys = Object.keys(source)\n\n    for (let i = 0, len = keys.length; i < len; i++) {\n      copy(target, keys[i], source[keys[i]])\n    }\n  }\n\n  return target\n}\n","export function includes(arrOrStr, elem) {\n  return arrOrStr.indexOf(elem) !== -1\n}\n","export function find(arr, predicate, ctx) {\n  for (let i = 0, len = arr.length; i < len; i++) {\n    if (predicate.call(ctx, arr[i], i, arr)) return arr[i]\n  }\n  return undefined\n}\n","export function quickDiff(arrA, arrB) {\n  if (arrA.length !== arrB.length) return true\n\n  for (let i = 0; i < arrA.length; i++) {\n    if (arrA[i] !== arrB[i]) return true\n  }\n\n  return false\n}\n","// Magic value that indicates a root level node.\nexport const NO_PARENT_NODE = null\n\n// Types of checked state.\nexport const UNCHECKED = 0\nexport const INDETERMINATE = 1\nexport const CHECKED = 2\n\n// Types of count number.\nexport const ALL_CHILDREN = 'ALL_CHILDREN'\nexport const ALL_DESCENDANTS = 'ALL_DESCENDANTS'\nexport const LEAF_CHILDREN = 'LEAF_CHILDREN'\nexport const LEAF_DESCENDANTS = 'LEAF_DESCENDANTS'\n\n// Action types of delayed loading.\nexport const LOAD_ROOT_OPTIONS = 'LOAD_ROOT_OPTIONS'\nexport const LOAD_CHILDREN_OPTIONS = 'LOAD_CHILDREN_OPTIONS'\nexport const ASYNC_SEARCH = 'ASYNC_SEARCH'\n\n// Acceptable values of `valueConsistsOf` prop.\nexport const ALL = 'ALL'\nexport const BRANCH_PRIORITY = 'BRANCH_PRIORITY'\nexport const LEAF_PRIORITY = 'LEAF_PRIORITY'\nexport const ALL_WITH_INDETERMINATE = 'ALL_WITH_INDETERMINATE'\n\n// Acceptable values of `sortValueBy` prop.\nexport const ORDER_SELECTED = 'ORDER_SELECTED'\nexport const LEVEL = 'LEVEL'\nexport const INDEX = 'INDEX'\n\n// Key codes look-up table.\nexport const KEY_CODES = {\n  BACKSPACE: 8,\n  ENTER: 13,\n  ESCAPE: 27,\n  END: 35,\n  HOME: 36,\n  ARROW_LEFT: 37,\n  ARROW_UP: 38,\n  ARROW_RIGHT: 39,\n  ARROW_DOWN: 40,\n  DELETE: 46,\n}\n\n// Other constants.\nexport const INPUT_DEBOUNCE_DELAY = process.env.NODE_ENV === 'testing'\n  ? /* to speed up unit testing */ 10\n  : /* istanbul ignore next */ 200\nexport const MIN_INPUT_WIDTH = 5\nexport const MENU_BUFFER = 40\n","import fuzzysearch from 'fuzzysearch'\n\nimport {\n  warning,\n  onLeftClick, scrollIntoView,\n  isNaN, isPromise, once,\n  identity, constant, createMap,\n  quickDiff, last as getLast, includes, find, removeFromArray,\n} from '../utils'\n\nimport {\n  NO_PARENT_NODE,\n  UNCHECKED, INDETERMINATE, CHECKED,\n  LOAD_ROOT_OPTIONS, LOAD_CHILDREN_OPTIONS, ASYNC_SEARCH,\n  ALL, BRANCH_PRIORITY, LEAF_PRIORITY, ALL_WITH_INDETERMINATE,\n  ALL_CHILDREN, ALL_DESCENDANTS, LEAF_CHILDREN, LEAF_DESCENDANTS,\n  ORDER_SELECTED, LEVEL, INDEX,\n} from '../constants'\n\nfunction sortValueByIndex(a, b) {\n  let i = 0\n  do {\n    if (a.level < i) return -1\n    if (b.level < i) return 1\n    if (a.index[i] !== b.index[i]) return a.index[i] - b.index[i]\n    i++\n  } while (true)\n}\n\nfunction sortValueByLevel(a, b) {\n  return a.level === b.level\n    ? sortValueByIndex(a, b)\n    : a.level - b.level\n}\n\nfunction createAsyncOptionsStates() {\n  return {\n    isLoaded: false,\n    isLoading: false,\n    loadingError: '',\n  }\n}\n\nfunction stringifyOptionPropValue(value) {\n  if (typeof value === 'string') return value\n  if (typeof value === 'number' && !isNaN(value)) return value + ''\n  // istanbul ignore next\n  return ''\n}\n\nfunction match(enableFuzzyMatch, needle, haystack) {\n  return enableFuzzyMatch\n    ? fuzzysearch(needle, haystack)\n    : includes(haystack, needle)\n}\n\nfunction getErrorMessage(err) {\n  return err.message || /* istanbul ignore next */String(err)\n}\n\nlet instanceId = 0\n\nexport default {\n  provide() {\n    return {\n      // Enable access to the instance of root component of vue-treeselect\n      // across hierarchy.\n      instance: this,\n    }\n  },\n\n  props: {\n    /**\n     * Whether to allow resetting value even if there are disabled selected nodes.\n     */\n    allowClearingDisabled: {\n      type: Boolean,\n      default: false,\n    },\n\n    /**\n     * When an ancestor node is selected/deselected, whether its disabled descendants should be selected/deselected.\n     * You may want to use this in conjunction with `allowClearingDisabled` prop.\n     */\n    allowSelectingDisabledDescendants: {\n      type: Boolean,\n      default: false,\n    },\n\n    /**\n     * Whether the menu should be always open.\n     */\n    alwaysOpen: {\n      type: Boolean,\n      default: false,\n    },\n\n    /**\n     * Append the menu to <body />?\n     */\n    appendToBody: {\n      type: Boolean,\n      default: false,\n    },\n\n    /**\n     * Whether to enable async search mode.\n     */\n    async: {\n      type: Boolean,\n      default: false,\n    },\n\n    /**\n     * Automatically focus the component on mount?\n     */\n    autoFocus: {\n      type: Boolean,\n      default: false,\n    },\n\n    /**\n     * Automatically load root options on mount. When set to `false`, root options will be loaded when the menu is opened.\n     */\n    autoLoadRootOptions: {\n      type: Boolean,\n      default: true,\n    },\n\n    /**\n     * When user deselects a node, automatically deselect its ancestors. Applies to flat mode only.\n     */\n    autoDeselectAncestors: {\n      type: Boolean,\n      default: false,\n    },\n\n    /**\n     * When user deselects a node, automatically deselect its descendants. Applies to flat mode only.\n     */\n    autoDeselectDescendants: {\n      type: Boolean,\n      default: false,\n    },\n\n    /**\n     * When user selects a node, automatically select its ancestors. Applies to flat mode only.\n     */\n    autoSelectAncestors: {\n      type: Boolean,\n      default: false,\n    },\n\n    /**\n     * When user selects a node, automatically select its descendants. Applies to flat mode only.\n     */\n    autoSelectDescendants: {\n      type: Boolean,\n      default: false,\n    },\n\n    /**\n     * Whether pressing backspace key removes the last item if there is no text input.\n     */\n    backspaceRemoves: {\n      type: Boolean,\n      default: true,\n    },\n\n    /**\n     * Function that processes before clearing all input fields.\n     * Return `false` to prevent value from being cleared.\n     * @type {function(): (boolean|Promise<boolean>)}\n     */\n    beforeClearAll: {\n      type: Function,\n      default: constant(true),\n    },\n\n    /**\n     * Show branch nodes before leaf nodes?\n     */\n    branchNodesFirst: {\n      type: Boolean,\n      default: false,\n    },\n\n    /**\n     * Should cache results of every search request?\n     */\n    cacheOptions: {\n      type: Boolean,\n      default: true,\n    },\n\n    /**\n     * Show an \"×\" button that resets value?\n     */\n    clearable: {\n      type: Boolean,\n      default: true,\n    },\n\n    /**\n     * Title for the \"×\" button when `multiple: true`.\n     */\n    clearAllText: {\n      type: String,\n      default: 'Clear all',\n    },\n\n    /**\n     * Whether to clear the search input after selecting.\n     * Use only when `multiple` is `true`.\n     * For single-select mode, it **always** clears the input after selecting an option regardless of the prop value.\n     */\n    clearOnSelect: {\n      type: Boolean,\n      default: false,\n    },\n\n    /**\n     * Title for the \"×\" button.\n     */\n    clearValueText: {\n      type: String,\n      default: 'Clear value',\n    },\n\n    /**\n     * Whether to close the menu after selecting an option?\n     * Use only when `multiple` is `true`.\n     */\n    closeOnSelect: {\n      type: Boolean,\n      default: true,\n    },\n\n    /**\n     * How many levels of branch nodes should be automatically expanded when loaded.\n     * Set `Infinity` to make all branch nodes expanded by default.\n     */\n    defaultExpandLevel: {\n      type: Number,\n      default: 0,\n    },\n\n    /**\n     * The default set of options to show before the user starts searching. Used for async search mode.\n     * When set to `true`, the results for search query as a empty string will be autoloaded.\n     * @type {boolean|node[]}\n     */\n    defaultOptions: {\n      default: false,\n    },\n\n    /**\n     * Whether pressing delete key removes the last item if there is no text input.\n     */\n    deleteRemoves: {\n      type: Boolean,\n      default: true,\n    },\n\n    /**\n     * Delimiter to use to join multiple values for the hidden field value.\n     */\n    delimiter: {\n      type: String,\n      default: ',',\n    },\n\n    /**\n     * Prevent branch nodes from being selected?\n     */\n    disableBranchNodes: {\n      type: Boolean,\n      default: false,\n    },\n\n    /**\n     * Disable the control?\n     */\n    disabled: {\n      type: Boolean,\n      default: false,\n    },\n\n    /**\n     * Disable the fuzzy matching functionality?\n     */\n    disableFuzzyMatching: {\n      type: Boolean,\n      default: false,\n    },\n\n    /**\n     * If there are any selected node it should be visible so its parents should be expanded.\n     * Useful if you have initiate the control with at least one selected node.\n     */\n    expandParentsInMenuForSelected: {\n      type: Boolean,\n      default: false,\n    },\n\n    /**\n     * Whether to enable flat mode or not. Non-flat mode (default) means:\n     *   - Whenever a branch node gets checked, all its children will be checked too\n     *   - Whenever a branch node has all children checked, the branch node itself will be checked too\n     * Set `true` to disable this mechanism\n     */\n    flat: {\n      type: Boolean,\n      default: false,\n    },\n\n    /**\n     * Only show the nodes that match the search value directly, excluding its ancestors.\n     *\n     * @type {Object}\n     */\n    flattenSearchResults: {\n      type: Boolean,\n      default: false,\n    },\n\n    /**\n     * Will be passed with all events as the last param.\n     * Useful for identifying events origin.\n    */\n    instanceId: {\n      // Add two trailing \"$\" to distinguish from explictly specified ids.\n      default: () => `${instanceId++}$$`,\n      type: [ String, Number ],\n    },\n\n    /**\n     * Joins multiple values into a single form field with the `delimiter` (legacy mode).\n    */\n    joinValues: {\n      type: Boolean,\n      default: false,\n    },\n\n    /**\n     * Limit the display of selected options.\n     * The rest will be hidden within the limitText string.\n     */\n    limit: {\n      type: Number,\n      default: Infinity,\n    },\n\n    /**\n     * Function that processes the message shown when selected elements pass the defined limit.\n     * @type {function(number): string}\n     */\n    limitText: {\n      type: Function,\n      default: function limitTextDefault(count) { // eslint-disable-line func-name-matching\n        return `and ${count} more`\n      },\n    },\n\n    /**\n     * Text displayed when loading options.\n     */\n    loadingText: {\n      type: String,\n      default: 'Loading...',\n    },\n\n    /**\n     * Used for dynamically loading options.\n     * @type {function({action: string, callback: (function((Error|string)=): void), parentNode: node=, instanceId}): void}\n     */\n    loadOptions: {\n      type: Function,\n    },\n\n    /**\n     * Which node properties to filter on.\n     */\n    matchKeys: {\n      type: Array,\n      default: constant([ 'label' ]),\n    },\n\n    /**\n     * The maximum number of matched leaf/branch nodes which should be expanded during local search\n     */\n    maxExpandMatchesOnSearch: {\n      type: Number,\n      default: Infinity,\n    },\n\n    /**\n     * Sets `maxHeight` style value of the menu.\n     */\n    maxHeight: {\n      type: Number,\n      default: 300,\n    },\n\n    /**\n     * Set `true` to allow selecting multiple options (a.k.a., multi-select mode).\n     */\n    multiple: {\n      type: Boolean,\n      default: false,\n    },\n\n    /**\n     * Generates a hidden <input /> tag with this field name for html forms.\n     */\n    name: {\n      type: String,\n    },\n\n    /**\n     * Text displayed when a branch node has no children.\n     */\n    noChildrenText: {\n      type: String,\n      default: 'No sub-options.',\n    },\n\n    /**\n     * On search the options should not expand to show matched nodes at all\n     */\n    noExpandOnSearch: {\n      type: Boolean,\n      default: false,\n    },\n\n    /**\n     * Text displayed when there are no available options.\n     */\n    noOptionsText: {\n      type: String,\n      default: 'No options available.',\n    },\n\n    /**\n     * Text displayed when there are no matching search results.\n     */\n    noResultsText: {\n      type: String,\n      default: 'No results found...',\n    },\n\n    /**\n     * Used for normalizing source data.\n     * @type {function(node, instanceId): node}\n     */\n    normalizer: {\n      type: Function,\n      default: identity,\n    },\n\n    /**\n     * By default (`auto`), the menu will open below the control. If there is not\n     * enough space, vue-treeselect will automatically flip the menu.\n     * You can use one of other four options to force the menu to be always opened\n     * to specified direction.\n     * Acceptable values:\n     *   - `\"auto\"`\n     *   - `\"below\"`\n     *   - `\"bottom\"`\n     *   - `\"above\"`\n     *   - `\"top\"`\n     */\n    openDirection: {\n      type: String,\n      default: 'auto',\n      validator(value) {\n        const acceptableValues = [ 'auto', 'top', 'bottom', 'above', 'below' ]\n        return includes(acceptableValues, value)\n      },\n    },\n\n    /**\n     * Whether to automatically open the menu when the control is clicked.\n     */\n    openOnClick: {\n      type: Boolean,\n      default: true,\n    },\n\n    /**\n     * Whether to automatically open the menu when the control is focused.\n     */\n    openOnFocus: {\n      type: Boolean,\n      default: false,\n    },\n\n    /**\n     * Array of available options.\n     * @type {node[]}\n     */\n    options: {\n      type: Array,\n    },\n\n    /**\n     * Field placeholder, displayed when there's no value.\n     */\n    placeholder: {\n      type: String,\n      default: 'Select...',\n    },\n\n    /**\n     * Applies HTML5 required attribute when needed.\n     */\n    required: {\n      type: Boolean,\n      default: false,\n    },\n\n    /**\n     * Text displayed asking user whether to retry loading children options.\n     */\n    retryText: {\n      type: String,\n      default: 'Retry?',\n    },\n\n    /**\n     * Title for the retry button.\n     */\n    retryTitle: {\n      type: String,\n      default: 'Click to retry',\n    },\n\n    /**\n     * Set selected option to the center of the menu, if possible\n     *\n     * @remark If it is set than save scroll position won't work\n     */\n    scrollPositionOnCenter: {\n      type: Boolean,\n      default: false,\n    },\n\n    /**\n     * Enable searching feature?\n     */\n    searchable: {\n      type: Boolean,\n      default: true,\n    },\n\n    /**\n     * Minimum number of character after the search should be preformed\n     */\n    searchMinInputLength: {\n      type: Number,\n      default: 1,\n    },\n\n    /**\n     * Search in ancestor nodes too.\n     */\n    searchNested: {\n      type: Boolean,\n      default: false,\n    },\n\n    /**\n     * Text tip to prompt for async search.\n     */\n    searchPromptText: {\n      type: String,\n      default: 'Type to search...',\n    },\n\n    /**\n     * Whether to show a children count next to the label of each branch node.\n     */\n    showCount: {\n      type: Boolean,\n      default: false,\n    },\n\n    /**\n     * Used in conjunction with `showCount` to specify which type of count number should be displayed.\n     * Acceptable values:\n     *   - \"ALL_CHILDREN\"\n     *   - \"ALL_DESCENDANTS\"\n     *   - \"LEAF_CHILDREN\"\n     *   - \"LEAF_DESCENDANTS\"\n     */\n    showCountOf: {\n      type: String,\n      default: ALL_CHILDREN,\n      validator(value) {\n        const acceptableValues = [ ALL_CHILDREN, ALL_DESCENDANTS, LEAF_CHILDREN, LEAF_DESCENDANTS ]\n        return includes(acceptableValues, value)\n      },\n    },\n\n    /**\n     * Whether to show children count when searching.\n     * Fallbacks to the value of `showCount` when not specified.\n     * @type {boolean}\n     */\n    showCountOnSearch: null,\n\n    /**\n     * If there is no selection than this node will be shown in menu if you open it.\n     *\n     * @remark - If set than save scroll position won't work.\n     */\n    showNodeWhenNoSelection: {\n      type: String,\n      default: null,\n    },\n\n    /**\n     * In which order the selected options should be displayed in trigger & sorted in `value` array.\n     * Used for multi-select mode only.\n     * Acceptable values:\n     *   - \"ORDER_SELECTED\"\n     *   - \"LEVEL\"\n     *   - \"INDEX\"\n     */\n    sortValueBy: {\n      type: String,\n      default: ORDER_SELECTED,\n      validator(value) {\n        const acceptableValues = [ ORDER_SELECTED, LEVEL, INDEX ]\n        return includes(acceptableValues, value)\n      },\n    },\n\n    /**\n     * Tab index of the control.\n     */\n    tabIndex: {\n      type: Number,\n      default: 0,\n    },\n\n    /**\n     * For node disable state use only isDisabled property.\n     *\n     * This is useful when we are not in flat mode and want have selectable nodes of a disabled parent.\n     * By default in non-flat mode if a node has a disabled parent it will be disabled also.\n     */\n    useOnlyIsDisabled: {\n      type: Boolean,\n      default: false,\n    },\n\n    /**\n     * The value of the control.\n     * Should be `id` or `node` object for single-select mode, or an array of `id` or `node` object for multi-select mode.\n     * Its format depends on the `valueFormat` prop.\n     * For most cases, just use `v-model` instead.\n     * @type {?Array}\n     */\n    value: null,\n\n    /**\n     * Which kind of nodes should be included in the `value` array in multi-select mode.\n     * Acceptable values:\n     *   - \"ALL\" - Any node that is checked will be included in the `value` array\n     *   - \"BRANCH_PRIORITY\" (default) - If a branch node is checked, all its descendants will be excluded in the `value` array\n     *   - \"LEAF_PRIORITY\" - If a branch node is checked, this node itself and its branch descendants will be excluded from the `value` array but its leaf descendants will be included\n     *   - \"ALL_WITH_INDETERMINATE\" - Any node that is checked will be included in the `value` array, plus indeterminate nodes\n     */\n    valueConsistsOf: {\n      type: String,\n      default: BRANCH_PRIORITY,\n      validator(value) {\n        const acceptableValues = [ ALL, BRANCH_PRIORITY, LEAF_PRIORITY, ALL_WITH_INDETERMINATE ]\n        return includes(acceptableValues, value)\n      },\n    },\n\n    /**\n     * Format of `value` prop.\n     * Note that, when set to `\"object\"`, only `id` & `label` properties are required in each `node` object in `value` prop.\n     * Acceptable values:\n     *   - \"id\"\n     *   - \"object\"\n     */\n    valueFormat: {\n      type: String,\n      default: 'id',\n    },\n\n    /**\n     * z-index of the menu.\n     */\n    zIndex: {\n      type: [ Number, String ],\n      default: 999,\n    },\n  },\n\n  data() {\n    return {\n      trigger: {\n        // Is the control focused?\n        isFocused: false,\n        // User entered search query - value of the input.\n        searchQuery: '',\n      },\n\n      menu: {\n        // Is the menu opened?\n        isOpen: false,\n        // Id of current highlighted option.\n        current: null,\n        // The scroll position before last menu closing.\n        lastScrollPosition: 0,\n        // Which direction to open the menu.\n        placement: 'bottom',\n      },\n\n      forest: {\n        // Normalized options.\n        normalizedOptions: [],\n        // <id, node> map for quick look-up.\n        nodeMap: createMap(),\n        // <id, checkedState> map, used for multi-select mode.\n        checkedStateMap: createMap(),\n        // Id list of all selected options.\n        selectedNodeIds: this.extractCheckedNodeIdsFromValue(),\n        // <id, true> map for fast checking:\n        //   if (forest.selectedNodeIds.indexOf(id) !== -1) forest.selectedNodeMap[id] === true\n        selectedNodeMap: createMap(),\n      },\n\n      // States of root options.\n      rootOptionsStates: createAsyncOptionsStates(),\n\n      localSearch: {\n        // Has user entered any query to search local options?\n        active: false,\n        // Has any options matched the search query?\n        noResults: true,\n        // <id, countObject> map for counting matched children/descendants.\n        countMap: createMap(),\n      },\n\n      // <searchQuery, remoteSearchEntry> map.\n      remoteSearch: createMap(),\n    }\n  },\n\n  computed: {\n    /* eslint-disable valid-jsdoc */\n    /**\n     * Normalized nodes that have been selected.\n     * @type {node[]}\n     */\n    selectedNodes() {\n      return this.forest.selectedNodeIds.map(this.getNode)\n    },\n    /**\n     * Id list of selected nodes with `sortValueBy` prop applied.\n     * @type {nodeId[]}\n     */\n    internalValue() {\n      let internalValue\n\n      // istanbul ignore else\n      if (this.single || this.flat || this.disableBranchNodes || this.valueConsistsOf === ALL) {\n        internalValue = this.forest.selectedNodeIds.slice()\n      } else if (this.valueConsistsOf === BRANCH_PRIORITY) {\n        internalValue = this.forest.selectedNodeIds.filter(id => {\n          const node = this.getNode(id)\n          if (node.isRootNode) return true\n          return !this.isSelected(node.parentNode)\n        })\n      } else if (this.valueConsistsOf === LEAF_PRIORITY) {\n        internalValue = this.forest.selectedNodeIds.filter(id => {\n          const node = this.getNode(id)\n          if (node.isLeaf) return true\n          return node.children.length === 0\n        })\n      } else if (this.valueConsistsOf === ALL_WITH_INDETERMINATE) {\n        const indeterminateNodeIds = []\n        internalValue = this.forest.selectedNodeIds.slice()\n        this.selectedNodes.forEach(selectedNode => {\n          selectedNode.ancestors.forEach(ancestor => {\n            if (includes(indeterminateNodeIds, ancestor.id)) return\n            if (includes(internalValue, ancestor.id)) return\n            indeterminateNodeIds.push(ancestor.id)\n          })\n        })\n        internalValue.push(...indeterminateNodeIds)\n      }\n\n      if (this.sortValueBy === LEVEL) {\n        internalValue.sort((a, b) => sortValueByLevel(this.getNode(a), this.getNode(b)))\n      } else if (this.sortValueBy === INDEX) {\n        internalValue.sort((a, b) => sortValueByIndex(this.getNode(a), this.getNode(b)))\n      }\n\n      return internalValue\n    },\n    /**\n     * Has any option been selected?\n     * @type {boolean}\n     */\n    hasValue() {\n      return this.internalValue.length > 0\n    },\n    /**\n     * Single-select mode?\n     * @type {boolean}\n     */\n    single() {\n      return !this.multiple\n    },\n    /**\n     * Id list of nodes displayed in the menu. Nodes that are considered NOT visible:\n     *   - descendants of a collapsed branch node\n     *   - in local search mode, nodes that are not matched, unless\n     *       - it's a branch node and has matched descendants\n     *       - it's a leaf node and its parent node is explicitly set to show all children\n     * @type {id[]}\n     */\n    visibleOptionIds() {\n      const visibleOptionIds = []\n\n      this.traverseAllNodesByIndex(node => {\n        if (!this.localSearch.active || this.shouldOptionBeIncludedInSearchResult(node)) {\n          visibleOptionIds.push(node.id)\n        }\n        // Skip the traversal of descendants of a branch node if it's not expanded.\n        if (node.isBranch && !this.shouldExpand(node)) {\n          return false\n        }\n      })\n\n      return visibleOptionIds\n    },\n    /**\n     * Has any option should be displayed in the menu?\n     * @type {boolean}\n     */\n    hasVisibleOptions() {\n      return this.visibleOptionIds.length !== 0\n    },\n    /**\n     * Should show children count when searching?\n     * @type {boolean}\n     */\n    showCountOnSearchComputed() {\n      // Vue doesn't allow setting default prop value based on another prop value.\n      // So use computed property as a workaround.\n      // https://github.com/vuejs/vue/issues/6358\n      return typeof this.showCountOnSearch === 'boolean'\n        ? this.showCountOnSearch\n        : this.showCount\n    },\n    /**\n     * Is there any branch node?\n     * @type {boolean}\n     */\n    hasBranchNodes() {\n      return this.forest.normalizedOptions.some(rootNode => rootNode.isBranch)\n    },\n    shouldFlattenOptions() {\n      return this.localSearch.active && this.flattenSearchResults\n    },\n    /* eslint-enable valid-jsdoc */\n  },\n\n  watch: {\n    alwaysOpen(newValue) {\n      if (newValue) this.openMenu()\n      else this.closeMenu()\n    },\n\n    branchNodesFirst() {\n      this.initialize()\n    },\n\n    disabled(newValue) {\n      // force close the menu after disabling the control\n      if (newValue && this.menu.isOpen) this.closeMenu()\n      else if (!newValue && !this.menu.isOpen && this.alwaysOpen) this.openMenu()\n    },\n\n    flat() {\n      this.initialize()\n    },\n\n    internalValue(newValue, oldValue) {\n      const hasChanged = quickDiff(newValue, oldValue)\n      // #122\n      // Vue would trigger this watcher when `newValue` and `oldValue` are shallow-equal.\n      // We emit the `input` event only when the value actually changes.\n      if (hasChanged) this.$emit('input', this.getValue(), this.getInstanceId())\n    },\n\n    matchKeys() {\n      this.initialize()\n    },\n\n    multiple(newValue) {\n      // We need to rebuild the state when switching from single-select mode\n      // to multi-select mode.\n      // istanbul ignore else\n      if (newValue) this.buildForestState()\n    },\n\n    options: {\n      handler() {\n        if (this.async) return\n        // Re-initialize options when the `options` prop has changed.\n        this.initialize()\n        this.rootOptionsStates.isLoaded = Array.isArray(this.options)\n      },\n      deep: true,\n      immediate: true,\n    },\n\n    'trigger.searchQuery'() {\n      if (this.async) {\n        this.handleRemoteSearch()\n      } else {\n        this.handleLocalSearch()\n      }\n\n      this.$emit('search-change', this.trigger.searchQuery, this.getInstanceId())\n    },\n\n    useOnlyIsDisabled() {\n      this.initialize()\n    },\n\n    value() {\n      const nodeIdsFromValue = this.extractCheckedNodeIdsFromValue()\n      const hasChanged = quickDiff(nodeIdsFromValue, this.internalValue)\n      if (hasChanged) {\n        this.fixSelectedNodeIds(nodeIdsFromValue)\n        this.expandParentNodesOfSelected()\n      }\n      this.showDefaultNodeIfNoSelection()\n    },\n  },\n\n  methods: {\n    verifyProps() {\n      warning(\n        () => this.async ? this.searchable : true,\n        () => 'For async search mode, the value of \"searchable\" prop must be true.',\n      )\n\n      if (this.options == null && !this.loadOptions) {\n        warning(\n          () => false,\n          () => 'Are you meant to dynamically load options? You need to use \"loadOptions\" prop.',\n        )\n      }\n\n      if (this.flat) {\n        warning(\n          () => this.multiple,\n          () => 'You are using flat mode. But you forgot to add \"multiple=true\"?',\n        )\n      }\n\n      if (!this.flat) {\n        const propNames = [\n          'autoSelectAncestors',\n          'autoSelectDescendants',\n          'autoDeselectAncestors',\n          'autoDeselectDescendants',\n        ]\n\n        propNames.forEach(propName => {\n          warning(\n            () => !this[propName],\n            () => `\"${propName}\" only applies to flat mode.`,\n          )\n        })\n      }\n    },\n\n    resetFlags() {\n      this._blurOnSelect = false\n    },\n\n    initialize() {\n      const options = this.async\n        ? this.getRemoteSearchEntry().options\n        : this.options\n\n      if (Array.isArray(options)) {\n        // In case we are re-initializing options, keep the old state tree temporarily.\n        const prevNodeMap = this.forest.nodeMap\n        this.forest.nodeMap = createMap()\n        this.keepDataOfSelectedNodes(prevNodeMap)\n        this.forest.normalizedOptions = this.normalize(NO_PARENT_NODE, options, prevNodeMap)\n        // Cases that need fixing `selectedNodeIds`:\n        //   1) Children options of a checked node have been delayed loaded,\n        //      we should also mark these children as checked. (multi-select mode)\n        //   2) Root options have been delayed loaded, we need to initialize states\n        //      of these nodes. (multi-select mode)\n        //   3) Async search mode.\n        this.fixSelectedNodeIds(this.internalValue)\n      } else {\n        this.forest.normalizedOptions = []\n      }\n      this.expandParentNodesOfSelected()\n      this.$nextTick(this.showDefaultNodeIfNoSelection)\n    },\n\n    getInstanceId() {\n      return this.instanceId == null ? this.id : this.instanceId\n    },\n\n    getValue() {\n      if (this.valueFormat === 'id') {\n        return this.multiple\n          ? this.internalValue.slice()\n          : this.internalValue[0]\n      }\n\n      const rawNodes = this.internalValue.map(id => this.getNode(id).raw)\n      return this.multiple ? rawNodes : rawNodes[0]\n    },\n\n    getNode(nodeId) {\n      warning(\n        () => nodeId != null,\n        () => `Invalid node id: ${nodeId}`,\n      )\n\n      if (nodeId == null) return null\n\n      return nodeId in this.forest.nodeMap\n        ? this.forest.nodeMap[nodeId]\n        : this.createFallbackNode(nodeId)\n    },\n\n    createFallbackNode(id) {\n      // In case there is a default selected node that is not loaded into the tree yet,\n      // we create a fallback node to keep the component working.\n      // When the real data is loaded, we'll override this fake node.\n\n      const raw = this.extractNodeFromValue(id)\n      const label = this.enhancedNormalizer(raw).label || `${id} (unknown)`\n      const fallbackNode = {\n        id,\n        label,\n        ancestors: [],\n        parentNode: NO_PARENT_NODE,\n        isFallbackNode: true,\n        isRootNode: true,\n        isLeaf: true,\n        isBranch: false,\n        isDisabled: false,\n        isNew: false,\n        index: [ -1 ],\n        level: 0,\n        raw,\n      }\n\n      return this.$set(this.forest.nodeMap, id, fallbackNode)\n    },\n\n    extractCheckedNodeIdsFromValue() {\n      if (this.value == null) return []\n\n      if (this.valueFormat === 'id') {\n        return this.multiple\n          ? this.value.slice()\n          : [ this.value ]\n      }\n\n      return (this.multiple ? this.value : [ this.value ])\n        .map(node => this.enhancedNormalizer(node))\n        .map(node => node.id)\n    },\n\n    extractNodeFromValue(id) {\n      const defaultNode = { id }\n\n      if (this.valueFormat === 'id') {\n        return defaultNode\n      }\n\n      const valueArray = this.multiple\n        ? Array.isArray(this.value) ? this.value : []\n        : this.value ? [ this.value ] : []\n      const matched = find(\n        valueArray,\n        node => node && this.enhancedNormalizer(node).id === id,\n      )\n\n      return matched || defaultNode\n    },\n\n    fixSelectedNodeIds(nodeIdListOfPrevValue) {\n      let nextSelectedNodeIds = []\n\n      // istanbul ignore else\n      if (this.single || this.flat || this.disableBranchNodes || this.valueConsistsOf === ALL) {\n        nextSelectedNodeIds = nodeIdListOfPrevValue\n      } else if (this.valueConsistsOf === BRANCH_PRIORITY) {\n        nodeIdListOfPrevValue.forEach(nodeId => {\n          nextSelectedNodeIds.push(nodeId)\n          const node = this.getNode(nodeId)\n          if (node.isBranch) this.traverseDescendantsBFS(node, descendant => {\n            nextSelectedNodeIds.push(descendant.id)\n          })\n        })\n      } else if (this.valueConsistsOf === LEAF_PRIORITY) {\n        const map = createMap()\n        const queue = nodeIdListOfPrevValue.slice()\n        while (queue.length) {\n          const nodeId = queue.shift()\n          const node = this.getNode(nodeId)\n          nextSelectedNodeIds.push(nodeId)\n          if (node.isRootNode) continue\n          if (!(node.parentNode.id in map)) map[node.parentNode.id] = node.parentNode.children.length\n          if (--map[node.parentNode.id] === 0) queue.push(node.parentNode.id)\n        }\n      } else if (this.valueConsistsOf === ALL_WITH_INDETERMINATE) {\n        const map = createMap()\n        const queue = nodeIdListOfPrevValue.filter(nodeId => {\n          const node = this.getNode(nodeId)\n          return node.isLeaf || node.children.length === 0\n        })\n        while (queue.length) {\n          const nodeId = queue.shift()\n          const node = this.getNode(nodeId)\n          nextSelectedNodeIds.push(nodeId)\n          if (node.isRootNode) continue\n          if (!(node.parentNode.id in map)) map[node.parentNode.id] = node.parentNode.children.length\n          if (--map[node.parentNode.id] === 0) queue.push(node.parentNode.id)\n        }\n      }\n\n      const hasChanged = quickDiff(this.forest.selectedNodeIds, nextSelectedNodeIds)\n      // If `nextSelectedNodeIds` doesn't actually differ from old `selectedNodeIds`,\n      // we don't make the assignment to avoid triggering its watchers which may cause\n      // unnecessary calculations.\n      if (hasChanged) this.forest.selectedNodeIds = nextSelectedNodeIds\n\n      this.buildForestState()\n    },\n\n    keepDataOfSelectedNodes(prevNodeMap) {\n      // In case there is any selected node that is not present in the new `options` array.\n      // It could be useful for async search mode.\n      this.forest.selectedNodeIds.forEach(id => {\n        if (!prevNodeMap[id]) return\n        const node = {\n          ...prevNodeMap[id],\n          isFallbackNode: true,\n        }\n        this.$set(this.forest.nodeMap, id, node)\n      })\n    },\n\n    isSelected(node) {\n      // whether a node is selected (single-select mode) or fully-checked (multi-select mode)\n      return this.forest.selectedNodeMap[node.id] === true\n    },\n\n    traverseDescendantsBFS(parentNode, callback) {\n      // istanbul ignore if\n      if (!parentNode.isBranch) return\n      const queue = parentNode.children.slice()\n      while (queue.length) {\n        const currNode = queue[0]\n        if (currNode.isBranch) queue.push(...currNode.children)\n        callback(currNode)\n        queue.shift()\n      }\n    },\n\n    traverseDescendantsDFS(parentNode, callback) {\n      if (!parentNode.isBranch) return\n      parentNode.children.forEach(child => {\n        // deep-level node first\n        this.traverseDescendantsDFS(child, callback)\n        callback(child)\n      })\n    },\n\n    traverseAllNodesDFS(callback) {\n      this.forest.normalizedOptions.forEach(rootNode => {\n        // deep-level node first\n        this.traverseDescendantsDFS(rootNode, callback)\n        callback(rootNode)\n      })\n    },\n\n    traverseAllNodesByIndex(callback) {\n      const walk = parentNode => {\n        parentNode.children.forEach(child => {\n          if (callback(child) !== false && child.isBranch) {\n            walk(child)\n          }\n        })\n      }\n\n      // To simplify the code logic of traversal,\n      // we create a fake root node that holds all the root options.\n      walk({ children: this.forest.normalizedOptions })\n    },\n\n    toggleClickOutsideEvent(enabled) {\n      if (enabled) {\n        document.addEventListener('mousedown', this.handleClickOutside, false)\n      } else {\n        document.removeEventListener('mousedown', this.handleClickOutside, false)\n      }\n    },\n\n    getValueContainer() {\n      return this.$refs.control.$refs['value-container']\n    },\n\n    getInput() {\n      return this.getValueContainer().$refs.input\n    },\n\n    focusInput() {\n      this.getInput().focus()\n    },\n\n    blurInput() {\n      this.getInput().blur()\n    },\n\n    handleMouseDown: onLeftClick(function handleMouseDown(evt) {\n      evt.preventDefault()\n      evt.stopPropagation()\n\n      if (this.disabled) return\n\n      const isClickedOnValueContainer = this.getValueContainer().$el.contains(evt.target)\n      if (isClickedOnValueContainer && !this.menu.isOpen && (this.openOnClick || this.trigger.isFocused)) {\n        this.openMenu()\n      }\n\n      if (this._blurOnSelect) {\n        this.blurInput()\n      } else {\n        // Focus the input or prevent blurring.\n        this.focusInput()\n      }\n\n      this.resetFlags()\n    }),\n\n    handleClickOutside(evt) {\n      // istanbul ignore else\n      if (\n        this.$refs.wrapper && !this.$refs.wrapper.contains(evt.target)\n        && (!this.$refs.portal || !this.$refs.portal.portalTarget || !this.$refs.portal.portalTarget.$el.contains(evt.target))\n      ) {\n        this.blurInput()\n        this.closeMenu()\n      }\n    },\n\n    handleLocalSearch() {\n      const { searchQuery } = this.trigger\n      const done = () => this.resetHighlightedOptionWhenNecessary(true)\n\n      if (!searchQuery || searchQuery.length < this.searchMinInputLength) {\n        // Exit sync search mode.\n        this.localSearch.active = false\n        return done()\n      }\n\n      // Enter sync search mode.\n      this.localSearch.active = true\n\n      // Reset states.\n      this.localSearch.noResults = true\n      this.traverseAllNodesDFS(node => {\n        if (node.isBranch) {\n          node.isExpandedOnSearch = false\n          node.showAllChildrenOnSearch = false\n          node.isMatched = false\n          node.hasMatchedDescendants = false\n          this.$set(this.localSearch.countMap, node.id, {\n            [ALL_CHILDREN]: 0,\n            [ALL_DESCENDANTS]: 0,\n            [LEAF_CHILDREN]: 0,\n            [LEAF_DESCENDANTS]: 0,\n          })\n        }\n      })\n\n      const lowerCasedSearchQuery = searchQuery.trim().toLocaleLowerCase()\n      const splitSearchQuery = lowerCasedSearchQuery.replace(/\\s+/g, ' ').split(' ')\n      let maxExpandMatchesOnSearch = this.maxExpandMatchesOnSearch\n      this.traverseAllNodesDFS(node => {\n        if (this.searchNested && splitSearchQuery.length > 1) {\n          node.isMatched = splitSearchQuery.every(filterValue =>\n            match(false, filterValue, node.nestedSearchLabel),\n          )\n        } else {\n          node.isMatched = this.matchKeys.some(matchKey =>\n            match(!this.disableFuzzyMatching, lowerCasedSearchQuery, node.lowerCased[matchKey]),\n          )\n        }\n\n        if (node.isMatched) {\n          this.localSearch.noResults = false\n          node.ancestors.forEach(ancestor => this.localSearch.countMap[ancestor.id][ALL_DESCENDANTS]++)\n          if (node.isLeaf) node.ancestors.forEach(ancestor => this.localSearch.countMap[ancestor.id][LEAF_DESCENDANTS]++)\n          if (node.parentNode !== NO_PARENT_NODE) {\n            this.localSearch.countMap[node.parentNode.id][ALL_CHILDREN] += 1\n            // istanbul ignore else\n            if (node.isLeaf) this.localSearch.countMap[node.parentNode.id][LEAF_CHILDREN] += 1\n          }\n        }\n\n        if (\n          (node.isMatched || (node.isBranch && node.hasMatchedDescendants)) &&\n          node.parentNode !== NO_PARENT_NODE\n        ) {\n          if (!this.noExpandOnSearch) {\n            if (node.isMatched && maxExpandMatchesOnSearch) {\n              node.parentNode.isExpandedOnSearch = true\n              if (maxExpandMatchesOnSearch !== Infinity) {\n                --maxExpandMatchesOnSearch\n              }\n            } else if (node.isBranch && node.isExpandedOnSearch) {\n              node.parentNode.isExpandedOnSearch = true\n            }\n          }\n\n          node.parentNode.hasMatchedDescendants = true\n        }\n      })\n\n      done()\n    },\n\n    handleRemoteSearch() {\n      const { searchQuery } = this.trigger\n      const entry = this.getRemoteSearchEntry()\n      const done = () => {\n        this.initialize()\n        this.resetHighlightedOptionWhenNecessary(true)\n      }\n\n      if ((searchQuery === '' || this.cacheOptions) && entry.isLoaded) {\n        return done()\n      }\n\n      this.callLoadOptionsProp({\n        action: ASYNC_SEARCH,\n        args: { searchQuery },\n        isPending() {\n          return entry.isLoading\n        },\n        start: () => {\n          entry.isLoading = true\n          entry.isLoaded = false\n          entry.loadingError = ''\n        },\n        succeed: options => {\n          entry.isLoaded = true\n          entry.options = options\n          // When the request completes, the search query may have changed.\n          // We only show these options if they are for the current search query.\n          if (this.trigger.searchQuery === searchQuery) done()\n        },\n        fail: err => {\n          entry.loadingError = getErrorMessage(err)\n        },\n        end: () => {\n          entry.isLoading = false\n        },\n      })\n    },\n\n    getRemoteSearchEntry() {\n      const { searchQuery } = this.trigger\n      const entry = this.remoteSearch[searchQuery] || {\n        ...createAsyncOptionsStates(),\n        options: [],\n      }\n\n      // Vue doesn't support directly watching on objects.\n      this.$watch(\n        () => entry.options,\n        () => {\n          // TODO: potential redundant re-initialization.\n          if (this.trigger.searchQuery === searchQuery) this.initialize()\n        },\n        { deep: true },\n      )\n\n      if (searchQuery === '') {\n        if (Array.isArray(this.defaultOptions)) {\n          entry.options = this.defaultOptions\n          entry.isLoaded = true\n          return entry\n        } else if (this.defaultOptions !== true) {\n          entry.isLoaded = true\n          return entry\n        }\n      }\n\n      if (!this.remoteSearch[searchQuery]) {\n        this.$set(this.remoteSearch, searchQuery, entry)\n      }\n\n      return entry\n    },\n\n    shouldExpand(node) {\n      return this.localSearch.active ? node.isExpandedOnSearch : node.isExpanded\n    },\n\n    shouldOptionBeIncludedInSearchResult(node) {\n      // 1) This option is matched.\n      if (node.isMatched) return true\n      // 2) This option is not matched, but has matched descendant(s).\n      if (node.isBranch && node.hasMatchedDescendants && !this.flattenSearchResults) return true\n      // 3) This option's parent has no matched descendants,\n      //    but after being expanded, all its children should be shown.\n      if (!node.isRootNode && node.parentNode.showAllChildrenOnSearch) return true\n      // 4) The default case.\n      return false\n    },\n\n    shouldShowOptionInMenu(node) {\n      if (this.localSearch.active && !this.shouldOptionBeIncludedInSearchResult(node)) {\n        return false\n      }\n      return true\n    },\n\n    getControl() {\n      return this.$refs.control.$el\n    },\n\n    getMenu() {\n      const ref = this.appendToBody ? this.$refs.portal.portalTarget : this\n      const $menu = ref.$refs.menu.$refs.menu\n      return $menu && $menu.nodeName !== '#comment' ? $menu : null\n    },\n\n    setCurrentHighlightedOption(node, scroll = true) {\n      const prev = this.menu.current\n      if (prev != null && prev in this.forest.nodeMap) {\n        this.forest.nodeMap[prev].isHighlighted = false\n      }\n\n      this.menu.current = node.id\n      node.isHighlighted = true\n\n      if (this.menu.isOpen && scroll) {\n        const scrollToOption = () => {\n          const $menu = this.getMenu()\n          const $option = $menu.querySelector(`.vue-treeselect__option[data-id=\"${node.id}\"]`)\n          if ($option) scrollIntoView($menu, $option)\n        }\n\n        // In case `openMenu()` is just called and the menu is not rendered yet.\n        if (this.getMenu()) {\n          scrollToOption()\n        } else {\n          // istanbul ignore next\n          this.$nextTick(scrollToOption)\n        }\n      }\n    },\n\n    resetHighlightedOptionWhenNecessary(forceReset = false) {\n      const { current } = this.menu\n\n      if (\n        forceReset || current == null ||\n        !(current in this.forest.nodeMap) ||\n        !this.shouldShowOptionInMenu(this.getNode(current))\n      ) {\n        this.highlightFirstOption()\n      }\n    },\n\n    highlightFirstOption() {\n      if (!this.hasVisibleOptions) return\n\n      const first = this.visibleOptionIds[0]\n      this.setCurrentHighlightedOption(this.getNode(first))\n    },\n\n    highlightPrevOption() {\n      if (!this.hasVisibleOptions) return\n\n      const prev = this.visibleOptionIds.indexOf(this.menu.current) - 1\n      if (prev === -1) return this.highlightLastOption()\n      this.setCurrentHighlightedOption(this.getNode(this.visibleOptionIds[prev]))\n    },\n\n    highlightNextOption() {\n      if (!this.hasVisibleOptions) return\n\n      const next = this.visibleOptionIds.indexOf(this.menu.current) + 1\n      if (next === this.visibleOptionIds.length) return this.highlightFirstOption()\n      this.setCurrentHighlightedOption(this.getNode(this.visibleOptionIds[next]))\n    },\n\n    highlightLastOption() {\n      if (!this.hasVisibleOptions) return\n\n      const last = getLast(this.visibleOptionIds)\n      this.setCurrentHighlightedOption(this.getNode(last))\n    },\n\n    resetSearchQuery() {\n      this.trigger.searchQuery = ''\n    },\n\n    closeMenu() {\n      if (!this.menu.isOpen || (!this.disabled && this.alwaysOpen)) return\n      this.saveMenuScrollPosition()\n      this.menu.isOpen = false\n      this.toggleClickOutsideEvent(false)\n      this.resetSearchQuery()\n      this.$emit('close', this.getValue(), this.getInstanceId())\n    },\n\n    openMenu() {\n      if (this.disabled || this.menu.isOpen) return\n      this.menu.isOpen = true\n      this.$nextTick(this.resetHighlightedOptionWhenNecessary)\n      this.$nextTick(this.restoreMenuScrollPosition)\n      if (!this.options && !this.async) this.loadRootOptions()\n      this.toggleClickOutsideEvent(true)\n      if (this.scrollPositionOnCenter) {\n        this.$nextTick(this.scrollMenuOnCenter)\n      }\n      this.$emit('open', this.getInstanceId())\n    },\n\n    toggleMenu() {\n      if (this.menu.isOpen) {\n        this.closeMenu()\n      } else {\n        this.openMenu()\n      }\n    },\n\n    toggleExpanded(node) {\n      let nextState\n\n      if (this.localSearch.active) {\n        nextState = node.isExpandedOnSearch = !node.isExpandedOnSearch\n        if (nextState) node.showAllChildrenOnSearch = true\n      } else {\n        nextState = node.isExpanded = !node.isExpanded\n      }\n\n      if (nextState && !node.childrenStates.isLoaded) {\n        this.loadChildrenOptions(node)\n      }\n    },\n\n    buildForestState() {\n      const selectedNodeMap = createMap()\n      this.forest.selectedNodeIds.forEach(selectedNodeId => {\n        selectedNodeMap[selectedNodeId] = true\n      })\n      this.forest.selectedNodeMap = selectedNodeMap\n\n      const checkedStateMap = createMap()\n      if (this.multiple) {\n        this.traverseAllNodesByIndex(node => {\n          checkedStateMap[node.id] = UNCHECKED\n        })\n\n        this.selectedNodes.forEach(selectedNode => {\n          checkedStateMap[selectedNode.id] = CHECKED\n\n          if (!this.flat && !this.disableBranchNodes) {\n            selectedNode.ancestors.forEach(ancestorNode => {\n              if (!this.isSelected(ancestorNode)) {\n                checkedStateMap[ancestorNode.id] = INDETERMINATE\n              }\n            })\n          }\n        })\n      }\n      this.forest.checkedStateMap = checkedStateMap\n    },\n\n    enhancedNormalizer(raw) {\n      return {\n        ...raw,\n        ...this.normalizer(raw, this.getInstanceId()),\n      }\n    },\n\n    normalize(parentNode, nodes, prevNodeMap) {\n      let normalizedOptions = nodes\n        .map(node => [ this.enhancedNormalizer(node), node ])\n        .map(([ node, raw ], index) => {\n          this.checkDuplication(node)\n          this.verifyNodeShape(node)\n\n          const { id, label, children, isDefaultExpanded } = node\n          const isRootNode = parentNode === NO_PARENT_NODE\n          const level = isRootNode ? 0 : parentNode.level + 1\n          const isBranch = Array.isArray(children) || children === null\n          const isLeaf = !isBranch\n          const isDisabled = this.useOnlyIsDisabled ? !!node.isDisabled : !!node.isDisabled || (!this.flat && !isRootNode && parentNode.isDisabled)\n          const isNew = !!node.isNew\n          const lowerCased = this.matchKeys.reduce((prev, key) => ({\n            ...prev,\n            [key]: stringifyOptionPropValue(node[key]).toLocaleLowerCase(),\n          }), {})\n          const nestedSearchLabel = isRootNode\n            ? lowerCased.label\n            : parentNode.nestedSearchLabel + ' ' + lowerCased.label\n\n          const normalized = this.$set(this.forest.nodeMap, id, createMap())\n          this.$set(normalized, 'id', id)\n          this.$set(normalized, 'label', label)\n          this.$set(normalized, 'level', level)\n          this.$set(normalized, 'ancestors', isRootNode ? [] : [ parentNode ].concat(parentNode.ancestors))\n          this.$set(normalized, 'index', (isRootNode ? [] : parentNode.index).concat(index))\n          this.$set(normalized, 'parentNode', parentNode)\n          this.$set(normalized, 'lowerCased', lowerCased)\n          this.$set(normalized, 'nestedSearchLabel', nestedSearchLabel)\n          this.$set(normalized, 'isDisabled', isDisabled)\n          this.$set(normalized, 'isNew', isNew)\n          this.$set(normalized, 'isMatched', false)\n          this.$set(normalized, 'isHighlighted', false)\n          this.$set(normalized, 'isBranch', isBranch)\n          this.$set(normalized, 'isLeaf', isLeaf)\n          this.$set(normalized, 'isRootNode', isRootNode)\n          this.$set(normalized, 'raw', raw)\n\n          if (isBranch) {\n            const isLoaded = Array.isArray(children)\n\n            this.$set(normalized, 'childrenStates', {\n              ...createAsyncOptionsStates(),\n              isLoaded,\n            })\n            this.$set(normalized, 'isExpanded', typeof isDefaultExpanded === 'boolean'\n              ? isDefaultExpanded\n              : level < this.defaultExpandLevel)\n            this.$set(normalized, 'hasMatchedDescendants', false)\n            this.$set(normalized, 'hasDisabledDescendants', false)\n            this.$set(normalized, 'isExpandedOnSearch', false)\n            this.$set(normalized, 'showAllChildrenOnSearch', false)\n            this.$set(normalized, 'count', {\n              [ALL_CHILDREN]: 0,\n              [ALL_DESCENDANTS]: 0,\n              [LEAF_CHILDREN]: 0,\n              [LEAF_DESCENDANTS]: 0,\n            })\n            this.$set(normalized, 'children', isLoaded\n              ? this.normalize(normalized, children, prevNodeMap)\n              : [])\n\n            if (isDefaultExpanded === true) normalized.ancestors.forEach(ancestor => {\n              ancestor.isExpanded = true\n            })\n\n            if (!isLoaded && typeof this.loadOptions !== 'function') {\n              warning(\n                () => false,\n                () => 'Unloaded branch node detected. \"loadOptions\" prop is required to load its children.',\n              )\n            } else if (!isLoaded && normalized.isExpanded) {\n              this.loadChildrenOptions(normalized)\n            }\n          }\n\n          normalized.ancestors.forEach(ancestor => ancestor.count[ALL_DESCENDANTS]++)\n          if (isLeaf) normalized.ancestors.forEach(ancestor => ancestor.count[LEAF_DESCENDANTS]++)\n          if (!isRootNode) {\n            parentNode.count[ALL_CHILDREN] += 1\n            if (isLeaf) parentNode.count[LEAF_CHILDREN] += 1\n            if (isDisabled) parentNode.hasDisabledDescendants = true\n          }\n\n          // Preserve previous states.\n          if (prevNodeMap && prevNodeMap[id]) {\n            const prev = prevNodeMap[id]\n\n            normalized.isMatched = prev.isMatched\n            normalized.showAllChildrenOnSearch = prev.showAllChildrenOnSearch\n            normalized.isHighlighted = prev.isHighlighted\n\n            if (prev.isBranch && normalized.isBranch) {\n              normalized.isExpanded = prev.isExpanded\n              normalized.isExpandedOnSearch = prev.isExpandedOnSearch\n              // #97\n              // If `isLoaded` was true, but IS NOT now, we consider this branch node\n              // to be reset to unloaded state by the user of this component.\n              if (prev.childrenStates.isLoaded && !normalized.childrenStates.isLoaded) {\n                // Make sure the node is collapsed, then the user can load its\n                // children again (by expanding).\n                normalized.isExpanded = false\n                // We have reset `childrenStates` and don't want to preserve states here.\n              } else {\n                normalized.childrenStates = { ...prev.childrenStates }\n              }\n            }\n          }\n\n          return normalized\n        })\n\n      if (this.branchNodesFirst) {\n        const branchNodes = normalizedOptions.filter(option => option.isBranch)\n        const leafNodes = normalizedOptions.filter(option => option.isLeaf)\n        normalizedOptions = branchNodes.concat(leafNodes)\n      }\n\n      return normalizedOptions\n    },\n\n    loadRootOptions() {\n      this.callLoadOptionsProp({\n        action: LOAD_ROOT_OPTIONS,\n        isPending: () => {\n          return this.rootOptionsStates.isLoading\n        },\n        start: () => {\n          this.rootOptionsStates.isLoading = true\n          this.rootOptionsStates.loadingError = ''\n        },\n        succeed: () => {\n          this.rootOptionsStates.isLoaded = true\n          // Wait for `options` being re-initialized.\n          this.$nextTick(() => {\n            this.resetHighlightedOptionWhenNecessary(true)\n          })\n        },\n        fail: err => {\n          this.rootOptionsStates.loadingError = getErrorMessage(err)\n        },\n        end: () => {\n          this.rootOptionsStates.isLoading = false\n        },\n      })\n    },\n\n    loadChildrenOptions(parentNode) {\n      // The options may be re-initialized anytime during the loading process.\n      // So `parentNode` can be stale and we use `getNode()` to avoid that.\n\n      const { id, raw } = parentNode\n\n      this.callLoadOptionsProp({\n        action: LOAD_CHILDREN_OPTIONS,\n        args: {\n          // We always pass the raw node instead of the normalized node to any\n          // callback provided by the user of this component.\n          // Because the shape of the raw node is more likely to be closing to\n          // what the back-end API service of the application needs.\n          parentNode: raw,\n        },\n        isPending: () => {\n          return this.getNode(id).childrenStates.isLoading\n        },\n        start: () => {\n          this.getNode(id).childrenStates.isLoading = true\n          this.getNode(id).childrenStates.loadingError = ''\n        },\n        succeed: () => {\n          this.getNode(id).childrenStates.isLoaded = true\n        },\n        fail: err => {\n          this.getNode(id).childrenStates.loadingError = getErrorMessage(err)\n        },\n        end: () => {\n          this.getNode(id).childrenStates.isLoading = false\n        },\n      })\n    },\n\n    callLoadOptionsProp({ action, args, isPending, start, succeed, fail, end }) {\n      if (!this.loadOptions || isPending()) {\n        return\n      }\n\n      start()\n\n      const callback = once((err, result) => {\n        if (err) {\n          fail(err)\n        } else {\n          succeed(result)\n        }\n\n        end()\n      })\n      const result = this.loadOptions({\n        id: this.getInstanceId(),\n        instanceId: this.getInstanceId(),\n        action,\n        ...args,\n        callback,\n      })\n\n      if (isPromise(result)) {\n        result.then(() => {\n          callback()\n        }, err => {\n          callback(err)\n        }).catch(err => {\n          // istanbul ignore next\n          console.error(err)\n        })\n      }\n    },\n\n    checkDuplication(node) {\n      warning(\n        () => !((node.id in this.forest.nodeMap) && !this.forest.nodeMap[node.id].isFallbackNode),\n        () => `Detected duplicate presence of node id ${JSON.stringify(node.id)}. ` +\n          `Their labels are \"${this.forest.nodeMap[node.id].label}\" and \"${node.label}\" respectively.`,\n      )\n    },\n\n    verifyNodeShape(node) {\n      warning(\n        () => !(node.children === undefined && node.isBranch === true),\n        () => 'Are you meant to declare an unloaded branch node? ' +\n          '`isBranch: true` is no longer supported, please use `children: null` instead.',\n      )\n    },\n\n    select(node) {\n      if (this.disabled || node.isDisabled) {\n        return\n      }\n\n      if (this.single) {\n        this.clear()\n      }\n\n      const nextState = this.multiple && !this.flat\n        ? this.forest.checkedStateMap[node.id] === UNCHECKED\n        : !this.isSelected(node)\n\n      if (nextState) {\n        this._selectNode(node)\n      } else {\n        this._deselectNode(node)\n      }\n\n      this.buildForestState()\n\n      if (nextState) {\n        this.expandParentNodesOfSelected()\n        this.$emit('select', node.raw, this.getInstanceId())\n      } else {\n        this.$emit('deselect', node.raw, this.getInstanceId())\n      }\n\n      if (this.localSearch.active && nextState && (this.single || this.clearOnSelect)) {\n        if (this.scrollPositionOnCenter) {\n          this.$nextTick(this.scrollMenuOnCenter)\n        }\n        this.resetSearchQuery()\n      }\n\n      if (this.single && this.closeOnSelect) {\n        this.closeMenu()\n\n        // istanbul ignore else\n        if (this.searchable) {\n          this._blurOnSelect = true\n        }\n      }\n    },\n\n    clear() {\n      if (this.hasValue) {\n        if (this.single || this.allowClearingDisabled) {\n          this.forest.selectedNodeIds = []\n        } else /* if (this.multiple && !this.allowClearingDisabled) */ {\n          this.forest.selectedNodeIds = this.forest.selectedNodeIds.filter(nodeId =>\n            this.getNode(nodeId).isDisabled,\n          )\n        }\n\n        this.buildForestState()\n      }\n    },\n\n    // This is meant to be called only by `select()`.\n    _selectNode(node) {\n      if (this.single || this.disableBranchNodes) {\n        return this.addValue(node)\n      }\n\n      if (this.flat) {\n        this.addValue(node)\n\n        if (this.autoSelectAncestors) {\n          node.ancestors.forEach(ancestor => {\n            if (!this.isSelected(ancestor) && !ancestor.isDisabled) this.addValue(ancestor)\n          })\n        } else if (this.autoSelectDescendants) {\n          this.traverseDescendantsBFS(node, descendant => {\n            if (!this.isSelected(descendant) && !descendant.isDisabled) this.addValue(descendant)\n          })\n        }\n\n        return\n      }\n\n      const isFullyChecked = (\n        node.isLeaf ||\n        (/* node.isBranch && */!node.hasDisabledDescendants) ||\n        (/* node.isBranch && */this.allowSelectingDisabledDescendants)\n      )\n      if (isFullyChecked) {\n        this.addValue(node)\n      }\n\n      if (node.isBranch) {\n        this.traverseDescendantsBFS(node, descendant => {\n          if (!descendant.isDisabled || this.allowSelectingDisabledDescendants) {\n            this.addValue(descendant)\n          }\n        })\n      }\n\n      if (isFullyChecked) {\n        let curr = node\n        while ((curr = curr.parentNode) !== NO_PARENT_NODE) {\n          if (curr.children.every(this.isSelected)) this.addValue(curr)\n          else break\n        }\n      }\n    },\n\n    // This is meant to be called only by `select()`.\n    _deselectNode(node) {\n      if (this.disableBranchNodes) {\n        return this.removeValue(node)\n      }\n\n      if (this.flat) {\n        this.removeValue(node)\n\n        if (this.autoDeselectAncestors) {\n          node.ancestors.forEach(ancestor => {\n            if (this.isSelected(ancestor) && !ancestor.isDisabled) this.removeValue(ancestor)\n          })\n        } else if (this.autoDeselectDescendants) {\n          this.traverseDescendantsBFS(node, descendant => {\n            if (this.isSelected(descendant) && !descendant.isDisabled) this.removeValue(descendant)\n          })\n        }\n\n        return\n      }\n\n      let hasUncheckedSomeDescendants = false\n      if (node.isBranch) {\n        this.traverseDescendantsDFS(node, descendant => {\n          if (!descendant.isDisabled || this.allowSelectingDisabledDescendants) {\n            this.removeValue(descendant, true)\n            hasUncheckedSomeDescendants = true\n          }\n        })\n        this.forest.selectedNodeIds = Object.keys(this.forest.selectedNodeMap)\n      }\n\n      if (\n        node.isLeaf ||\n        /* node.isBranch && */hasUncheckedSomeDescendants ||\n        /* node.isBranch && */node.children.length === 0\n      ) {\n        this.removeValue(node)\n\n        let curr = node\n        while ((curr = curr.parentNode) !== NO_PARENT_NODE) {\n          if (this.isSelected(curr)) this.removeValue(curr)\n          else break\n        }\n      }\n    },\n\n    addValue(node) {\n      this.forest.selectedNodeIds.push(node.id)\n      this.forest.selectedNodeMap[node.id] = true\n    },\n\n    removeValue(node, bulk) {\n      if (!bulk) removeFromArray(this.forest.selectedNodeIds, node.id)\n      delete this.forest.selectedNodeMap[node.id]\n    },\n\n    removeLastValue() {\n      if (!this.hasValue) return\n      if (this.single) return this.clear()\n      const lastValue = getLast(this.internalValue)\n      const lastSelectedNode = this.getNode(lastValue)\n      this.select(lastSelectedNode) // deselect\n    },\n\n    saveMenuScrollPosition() {\n      if (this.scrollPositionOnCenter) {\n        return\n      }\n      const $menu = this.getMenu()\n      // istanbul ignore else\n      if ($menu) this.menu.lastScrollPosition = $menu.scrollTop\n    },\n\n    restoreMenuScrollPosition() {\n      if (this.scrollPositionOnCenter) {\n        return\n      }\n      const $menu = this.getMenu()\n      // istanbul ignore else\n      if ($menu) $menu.scrollTop = this.menu.lastScrollPosition\n    },\n\n    expandParentNodesOfSelected() {\n      if (!this.expandParentsInMenuForSelected) {\n        return\n      }\n      this.expandParentNodes(this.forest.selectedNodeIds)\n    },\n\n    /**\n     * @param nodeIds - an array containing the node(s)'s id(s) whom parent(s) should be expanded\n     */\n    expandParentNodes(nodeIds) {\n      for (const id of nodeIds) {\n        if (this.forest.nodeMap[id]) {\n          for (const ancestor of this.forest.nodeMap[id].ancestors) {\n            ancestor.isExpanded = true\n          }\n        }\n      }\n    },\n\n    scrollMenuToOption($option) {\n      const $menu = this.getMenu()\n      if ($option && $menu) {\n        const position = Math.max($option.offsetTop - (($menu.offsetHeight - $option.offsetHeight) / 2), 0)\n        $menu.scrollTop = position\n      }\n    },\n\n    scrollMenuOnCenter() {\n      const $option = document.querySelector('.vue-treeselect__option--selected')\n      this.scrollMenuToOption($option)\n    },\n\n    showDefaultNodeIfNoSelection() {\n      if (this.forest.selectedNodeIds.length > 0\n        || !this.showNodeWhenNoSelection\n        || !this.forest.nodeMap[this.showNodeWhenNoSelection]) {\n        return\n      }\n\n      this.expandParentNodes([ this.showNodeWhenNoSelection ])\n\n      this.$nextTick(() => {\n        const $option = document.querySelector(`.vue-treeselect__option[data-id=\"${this.showNodeWhenNoSelection}\"]`)\n        this.scrollMenuToOption($option)\n      })\n    },\n  },\n\n  created() {\n    this.verifyProps()\n    this.resetFlags()\n  },\n\n  mounted() {\n    if (this.autoFocus) this.focusInput()\n    if (!this.options && !this.async && this.autoLoadRootOptions) this.loadRootOptions()\n    if (this.alwaysOpen) this.openMenu()\n    if (this.async && this.defaultOptions) this.handleRemoteSearch()\n  },\n\n  destroyed() {\n    // istanbul ignore next\n    this.toggleClickOutsideEvent(false)\n  },\n}\n","<script>\n  import { isNaN } from '../utils'\n\n  function stringifyValue(value) {\n    if (typeof value === 'string') return value\n    // istanbul ignore else\n    if (value != null && !isNaN(value)) return JSON.stringify(value)\n    // istanbul ignore next\n    return ''\n  }\n\n  export default {\n    name: 'vue-treeselect--hidden-fields',\n    inject: [ 'instance' ],\n    functional: true,\n\n    render(_, context) {\n      const { instance } = context.injections\n\n      if (!instance.name || instance.disabled || !instance.hasValue) return null\n\n      let stringifiedValues = instance.internalValue.map(stringifyValue)\n\n      if (instance.multiple && instance.joinValues) stringifiedValues = [\n        stringifiedValues.join(instance.delimiter),\n      ]\n\n      return stringifiedValues.map((stringifiedValue, i) => (\n        <input type=\"hidden\"\n          name={instance.name}\n          value={stringifiedValue}\n          key={'hidden-field-' + i}\n        />\n      ))\n    },\n  }\n</script>\n","/* globals __VUE_SSR_CONTEXT__ */\n\n// IMPORTANT: Do NOT use ES2015 features in this file (except for modules).\n// This module is a runtime utility for cleaner component module output and will\n// be included in the final webpack user bundle.\n\nexport default function normalizeComponent(\n  scriptExports,\n  render,\n  staticRenderFns,\n  functionalTemplate,\n  injectStyles,\n  scopeId,\n  moduleIdentifier /* server only */,\n  shadowMode /* vue-cli only */\n) {\n  // Vue.extend constructor export interop\n  var options =\n    typeof scriptExports === 'function' ? scriptExports.options : scriptExports\n\n  // render functions\n  if (render) {\n    options.render = render\n    options.staticRenderFns = staticRenderFns\n    options._compiled = true\n  }\n\n  // functional template\n  if (functionalTemplate) {\n    options.functional = true\n  }\n\n  // scopedId\n  if (scopeId) {\n    options._scopeId = 'data-v-' + scopeId\n  }\n\n  var hook\n  if (moduleIdentifier) {\n    // server build\n    hook = function (context) {\n      // 2.3 injection\n      context =\n        context || // cached call\n        (this.$vnode && this.$vnode.ssrContext) || // stateful\n        (this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext) // functional\n      // 2.2 with runInNewContext: true\n      if (!context && typeof __VUE_SSR_CONTEXT__ !== 'undefined') {\n        context = __VUE_SSR_CONTEXT__\n      }\n      // inject component styles\n      if (injectStyles) {\n        injectStyles.call(this, context)\n      }\n      // register component module identifier for async chunk inferrence\n      if (context && context._registeredComponents) {\n        context._registeredComponents.add(moduleIdentifier)\n      }\n    }\n    // used by ssr in case component is cached and beforeCreate\n    // never gets called\n    options._ssrRegister = hook\n  } else if (injectStyles) {\n    hook = shadowMode\n      ? function () {\n          injectStyles.call(\n            this,\n            (options.functional ? this.parent : this).$root.$options.shadowRoot\n          )\n        }\n      : injectStyles\n  }\n\n  if (hook) {\n    if (options.functional) {\n      // for template-only hot-reload because in that case the render fn doesn't\n      // go through the normalizer\n      options._injectStyles = hook\n      // register for functional component in vue file\n      var originalRender = options.render\n      options.render = function renderWithStyleInjection(h, context) {\n        hook.call(context)\n        return originalRender(h, context)\n      }\n    } else {\n      // inject component registration as beforeCreate hook\n      var existing = options.beforeCreate\n      options.beforeCreate = existing ? [].concat(existing, hook) : [hook]\n    }\n  }\n\n  return {\n    exports: scriptExports,\n    options: options\n  }\n}\n","var render, staticRenderFns\nimport script from \"./HiddenFields.vue?vue&type=script&lang=js\"\nexport * from \"./HiddenFields.vue?vue&type=script&lang=js\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* hot reload */\nif (module.hot) {\n  var api = require(\"/Users/radicsla/workspace/vue-treeselect/node_modules/vue-hot-reload-api/dist/index.js\")\n  api.install(require('vue'))\n  if (api.compatible) {\n    module.hot.accept()\n    if (!api.isRecorded('4d48089a')) {\n      api.createRecord('4d48089a', component.options)\n    } else {\n      api.reload('4d48089a', component.options)\n    }\n    \n  }\n}\ncomponent.options.__file = \"src/components/HiddenFields.vue\"\nexport default component.exports","<script>\n  import { debounce, deepExtend, includes } from '../utils'\n  import { MIN_INPUT_WIDTH, KEY_CODES, INPUT_DEBOUNCE_DELAY } from '../constants'\n\n  const keysThatRequireMenuBeingOpen = [\n    KEY_CODES.ENTER,\n    KEY_CODES.END,\n    KEY_CODES.HOME,\n    KEY_CODES.ARROW_LEFT,\n    KEY_CODES.ARROW_UP,\n    KEY_CODES.ARROW_RIGHT,\n    KEY_CODES.ARROW_DOWN,\n  ]\n\n  export default {\n    name: 'vue-treeselect--input',\n    inject: [ 'instance' ],\n\n    data: () => ({\n      inputWidth: MIN_INPUT_WIDTH,\n      value: '',\n    }),\n\n    computed: {\n      needAutoSize() {\n        const { instance } = this\n\n        return (\n          instance.searchable &&\n          !instance.disabled &&\n          instance.multiple\n        )\n      },\n\n      inputStyle() {\n        return {\n          width: this.needAutoSize ? `${this.inputWidth}px` : null,\n        }\n      },\n    },\n\n    watch: {\n      'instance.trigger.searchQuery'(newValue) {\n        this.value = newValue\n      },\n\n      value() {\n        // istanbul ignore else\n        if (this.needAutoSize) this.$nextTick(this.updateInputWidth)\n      },\n    },\n\n    created() {\n      this.debouncedCallback = debounce(\n        this.updateSearchQuery,\n        INPUT_DEBOUNCE_DELAY,\n        { leading: true, trailing: true },\n      )\n    },\n\n    methods: {\n      clear() {\n        this.onInput({\n          target: { value: '' },\n        })\n      },\n\n      focus() {\n        const { instance } = this\n\n        if (!instance.disabled) {\n          this.$refs.input && this.$refs.input.focus()\n        }\n      },\n\n      blur() {\n        this.$refs.input && this.$refs.input.blur()\n      },\n\n      onFocus() {\n        const { instance } = this\n\n        instance.trigger.isFocused = true\n        // istanbul ignore else\n        if (instance.openOnFocus) instance.openMenu()\n      },\n\n      onBlur() {\n        const { instance } = this\n        const menu = instance.getMenu()\n\n        // #15\n        // istanbul ignore next\n        if (menu && document.activeElement === menu) {\n          return this.focus()\n        }\n\n        instance.trigger.isFocused = false\n        instance.closeMenu()\n      },\n\n      onInput(evt) {\n        const { value } = evt.target\n\n        this.value = value\n\n        if (value) {\n          this.debouncedCallback()\n        } else {\n          this.debouncedCallback.cancel()\n          this.updateSearchQuery()\n        }\n      },\n\n      // 用 keyUp 事件存在一个问题，删除输入框最后一个字符也会导致取消选中最后一项\n      onKeyDown(evt) {\n        const { instance } = this\n        // https://css-tricks.com/snippets/javascript/javascript-keycodes/\n        // https://stackoverflow.com/questions/4471582/javascript-keycode-vs-which\n        const key = 'which' in evt ? evt.which : /* istanbul ignore next */ evt.keyCode\n\n        if (evt.ctrlKey || evt.shiftKey || evt.altKey || evt.metaKey)\n          return\n\n        if (!instance.menu.isOpen && includes(keysThatRequireMenuBeingOpen, key)) {\n          evt.preventDefault()\n          return instance.openMenu()\n        }\n\n        switch (key) {\n        case KEY_CODES.BACKSPACE: {\n          if (instance.backspaceRemoves && !this.value.length) {\n            instance.removeLastValue()\n          }\n          break\n        }\n        case KEY_CODES.ENTER: {\n          evt.preventDefault()\n          if (instance.menu.current === null) return\n          const current = instance.getNode(instance.menu.current)\n          if (current.isBranch && instance.disableBranchNodes) return\n          instance.select(current)\n          break\n        }\n        case KEY_CODES.ESCAPE: {\n          if (this.value.length) {\n            this.clear()\n          } else if (instance.menu.isOpen) {\n            instance.closeMenu()\n          }\n          break\n        }\n        case KEY_CODES.END: {\n          evt.preventDefault()\n          instance.highlightLastOption()\n          break\n        }\n        case KEY_CODES.HOME: {\n          evt.preventDefault()\n          instance.highlightFirstOption()\n          break\n        }\n        case KEY_CODES.ARROW_LEFT: {\n          const current = instance.getNode(instance.menu.current)\n          if (current.isBranch && instance.shouldExpand(current)) {\n            evt.preventDefault()\n            instance.toggleExpanded(current)\n          } else if (!current.isRootNode && (current.isLeaf || (current.isBranch && !(instance.shouldExpand(current))))) {\n            evt.preventDefault()\n            instance.setCurrentHighlightedOption(current.parentNode)\n          }\n          break\n        }\n        case KEY_CODES.ARROW_UP: {\n          evt.preventDefault()\n          instance.highlightPrevOption()\n          break\n        }\n        case KEY_CODES.ARROW_RIGHT: {\n          const current = instance.getNode(instance.menu.current)\n          if (current.isBranch && !instance.shouldExpand(current)) {\n            evt.preventDefault()\n            instance.toggleExpanded(current)\n          }\n          break\n        }\n        case KEY_CODES.ARROW_DOWN: {\n          evt.preventDefault()\n          instance.highlightNextOption()\n          break\n        }\n        case KEY_CODES.DELETE: {\n          if (instance.deleteRemoves && !this.value.length) {\n            instance.removeLastValue()\n          }\n          break\n        }\n        default: {\n          // istanbul ignore else\n          instance.openMenu()\n        }\n        }\n      },\n\n      onMouseDown(evt) {\n        // istanbul ignore next\n        if (this.value.length) {\n          // Prevent it from bubbling to the top level and triggering `preventDefault()`\n          // to make the textbox unselectable\n          evt.stopPropagation()\n        }\n      },\n\n      renderInputContainer() {\n        const { instance } = this\n        const props = {}\n        const children = []\n\n        if (instance.searchable && !instance.disabled) {\n          children.push(this.renderInput())\n          if (this.needAutoSize) children.push(this.renderSizer())\n        }\n\n        if (!instance.searchable) {\n          deepExtend(props, {\n            on: {\n              focus: this.onFocus,\n              blur: this.onBlur,\n              keydown: this.onKeyDown,\n            },\n            ref: 'input',\n          })\n        }\n\n        if (!instance.searchable && !instance.disabled) {\n          deepExtend(props, {\n            attrs: {\n              tabIndex: instance.tabIndex,\n            },\n          })\n        }\n\n        return (\n          <div class=\"vue-treeselect__input-container\" {...props}>\n            {children}\n          </div>\n        )\n      },\n\n      renderInput() {\n        const { instance } = this\n\n        return (\n          <input ref=\"input\"\n            class=\"vue-treeselect__input\"\n            type=\"text\"\n            autocomplete=\"off\"\n            tabIndex={instance.tabIndex}\n            required={instance.required && !instance.hasValue}\n            value={this.value}\n            style={this.inputStyle}\n            onFocus={this.onFocus}\n            onInput={this.onInput}\n            onBlur={this.onBlur}\n            onKeydown={this.onKeyDown}\n            onMousedown={this.onMouseDown}\n          />\n        )\n      },\n\n      renderSizer() {\n        return (\n          <div ref=\"sizer\" class=\"vue-treeselect__sizer\">{this.value}</div>\n        )\n      },\n\n      updateInputWidth() {\n        this.inputWidth = Math.max(\n          MIN_INPUT_WIDTH,\n          this.$refs.sizer.scrollWidth + 15,\n        )\n      },\n\n      updateSearchQuery() {\n        const { instance } = this\n\n        instance.trigger.searchQuery = this.value\n      },\n    },\n\n    render() {\n      return this.renderInputContainer()\n    },\n  }\n</script>\n","var render, staticRenderFns\nimport script from \"./Input.vue?vue&type=script&lang=js\"\nexport * from \"./Input.vue?vue&type=script&lang=js\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var render, staticRenderFns\nimport script from \"./Placeholder.vue?vue&type=script&lang=js\"\nexport * from \"./Placeholder.vue?vue&type=script&lang=js\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* hot reload */\nif (module.hot) {\n  var api = require(\"/Users/radicsla/workspace/vue-treeselect/node_modules/vue-hot-reload-api/dist/index.js\")\n  api.install(require('vue'))\n  if (api.compatible) {\n    module.hot.accept()\n    if (!api.isRecorded('5a99d1f3')) {\n      api.createRecord('5a99d1f3', component.options)\n    } else {\n      api.reload('5a99d1f3', component.options)\n    }\n    \n  }\n}\ncomponent.options.__file = \"src/components/Placeholder.vue\"\nexport default component.exports","<script>\n  export default {\n    name: 'vue-treeselect--placeholder',\n    inject: [ 'instance' ],\n\n    render() {\n      const { instance } = this\n      const placeholderClass = {\n        'vue-treeselect__placeholder': true,\n        'vue-treeselect-helper-zoom-effect-off': true,\n        'vue-treeselect-helper-hide': instance.hasValue || instance.trigger.searchQuery,\n      }\n\n      return (\n        <div class={placeholderClass}>\n          { instance.placeholder }\n        </div>\n      )\n    },\n  }\n</script>\n","var render, staticRenderFns\nimport script from \"./SingleValue.vue?vue&type=script&lang=js\"\nexport * from \"./SingleValue.vue?vue&type=script&lang=js\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* hot reload */\nif (module.hot) {\n  var api = require(\"/Users/radicsla/workspace/vue-treeselect/node_modules/vue-hot-reload-api/dist/index.js\")\n  api.install(require('vue'))\n  if (api.compatible) {\n    module.hot.accept()\n    if (!api.isRecorded('03d19b89')) {\n      api.createRecord('03d19b89', component.options)\n    } else {\n      api.reload('03d19b89', component.options)\n    }\n    \n  }\n}\ncomponent.options.__file = \"src/components/SingleValue.vue\"\nexport default component.exports","<script>\n  import Input from './Input'\n  import Placeholder from './Placeholder'\n\n  export default {\n    name: 'vue-treeselect--single-value',\n    inject: [ 'instance' ],\n    methods: {\n      renderSingleValueLabel() {\n        const { instance } = this\n        const node = instance.selectedNodes[0]\n\n        const customValueLabelRenderer = instance.$scopedSlots['value-label']\n        return customValueLabelRenderer\n          ? customValueLabelRenderer({ node })\n          : node.label\n      },\n    },\n    render() {\n      const { instance, $parent: { renderValueContainer } } = this\n      const shouldShowValue = instance.hasValue && !instance.trigger.searchQuery\n\n      return renderValueContainer([\n        shouldShowValue && (\n          <div class=\"vue-treeselect__single-value\">\n            { this.renderSingleValueLabel() }\n          </div>\n        ),\n        <Placeholder />,\n        <Input ref=\"input\" />,\n      ])\n    },\n  }\n</script>\n","var render = function render() {\n  var _vm = this,\n    _c = _vm._self._c\n  return _c(\n    \"svg\",\n    {\n      attrs: {\n        xmlns: \"http://www.w3.org/2000/svg\",\n        viewBox: \"0 0 348.333 348.333\",\n      },\n    },\n    [\n      _c(\"path\", {\n        attrs: {\n          d: \"M336.559 68.611L231.016 174.165l105.543 105.549c15.699 15.705 15.699 41.145 0 56.85-7.844 7.844-18.128 11.769-28.407 11.769-10.296 0-20.581-3.919-28.419-11.769L174.167 231.003 68.609 336.563c-7.843 7.844-18.128 11.769-28.416 11.769-10.285 0-20.563-3.919-28.413-11.769-15.699-15.698-15.699-41.139 0-56.85l105.54-105.549L11.774 68.611c-15.699-15.699-15.699-41.145 0-56.844 15.696-15.687 41.127-15.687 56.829 0l105.563 105.554L279.721 11.767c15.705-15.687 41.139-15.687 56.832 0 15.705 15.699 15.705 41.145.006 56.844z\",\n        },\n      }),\n    ]\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }","<template>\n  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 348.333 348.333\">\n    <path d=\"M336.559 68.611L231.016 174.165l105.543 105.549c15.699 15.705 15.699 41.145 0 56.85-7.844 7.844-18.128 11.769-28.407 11.769-10.296 0-20.581-3.919-28.419-11.769L174.167 231.003 68.609 336.563c-7.843 7.844-18.128 11.769-28.416 11.769-10.285 0-20.563-3.919-28.413-11.769-15.699-15.698-15.699-41.139 0-56.85l105.54-105.549L11.774 68.611c-15.699-15.699-15.699-41.145 0-56.844 15.696-15.687 41.127-15.687 56.829 0l105.563 105.554L279.721 11.767c15.705-15.687 41.139-15.687 56.832 0 15.705 15.699 15.705 41.145.006 56.844z\" />\n  </svg>\n</template>\n\n<script>\n  export default {\n    name: 'vue-treeselect--x',\n  }\n</script>\n","import { render, staticRenderFns } from \"./Delete.vue?vue&type=template&id=364b6320\"\nimport script from \"./Delete.vue?vue&type=script&lang=js\"\nexport * from \"./Delete.vue?vue&type=script&lang=js\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* hot reload */\nif (module.hot) {\n  var api = require(\"/Users/radicsla/workspace/vue-treeselect/node_modules/vue-hot-reload-api/dist/index.js\")\n  api.install(require('vue'))\n  if (api.compatible) {\n    module.hot.accept()\n    if (!api.isRecorded('364b6320')) {\n      api.createRecord('364b6320', component.options)\n    } else {\n      api.reload('364b6320', component.options)\n    }\n    module.hot.accept(\"./Delete.vue?vue&type=template&id=364b6320\", function () {\n      api.rerender('364b6320', {\n        render: render,\n        staticRenderFns: staticRenderFns\n      })\n    })\n  }\n}\ncomponent.options.__file = \"src/components/icons/Delete.vue\"\nexport default component.exports","var render, staticRenderFns\nimport script from \"./MultiValueItem.vue?vue&type=script&lang=js\"\nexport * from \"./MultiValueItem.vue?vue&type=script&lang=js\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* hot reload */\nif (module.hot) {\n  var api = require(\"/Users/radicsla/workspace/vue-treeselect/node_modules/vue-hot-reload-api/dist/index.js\")\n  api.install(require('vue'))\n  if (api.compatible) {\n    module.hot.accept()\n    if (!api.isRecorded('6dd6c8ca')) {\n      api.createRecord('6dd6c8ca', component.options)\n    } else {\n      api.reload('6dd6c8ca', component.options)\n    }\n    \n  }\n}\ncomponent.options.__file = \"src/components/MultiValueItem.vue\"\nexport default component.exports","<script>\n  import { onLeftClick } from '../utils'\n  import DeleteIcon from './icons/Delete'\n\n  export default {\n    name: 'vue-treeselect--multi-value-item',\n    inject: [ 'instance' ],\n\n    props: {\n      node: {\n        type: Object,\n        required: true,\n      },\n    },\n\n    methods: {\n      handleMouseDown: onLeftClick(function handleMouseDown() {\n        const { instance, node } = this\n\n        // Deselect this node.\n        instance.select(node)\n      }),\n    },\n\n    render() {\n      const { instance, node } = this\n      const itemClass = {\n        'vue-treeselect__multi-value-item': true,\n        'vue-treeselect__multi-value-item-disabled': node.isDisabled,\n        'vue-treeselect__multi-value-item-new': node.isNew,\n      }\n      const customValueLabelRenderer = instance.$scopedSlots['value-label']\n      const labelRenderer = customValueLabelRenderer ? customValueLabelRenderer({ node }) : node.label\n\n      return (\n        <div class=\"vue-treeselect__multi-value-item-container\">\n          <div class={itemClass} onMousedown={this.handleMouseDown}>\n            <span class=\"vue-treeselect__multi-value-label\">{ labelRenderer }</span>\n            <span class=\"vue-treeselect__icon vue-treeselect__value-remove\"><DeleteIcon /></span>\n          </div>\n        </div>\n      )\n    },\n  }\n</script>\n","var render, staticRenderFns\nimport script from \"./MultiValue.vue?vue&type=script&lang=js\"\nexport * from \"./MultiValue.vue?vue&type=script&lang=js\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* hot reload */\nif (module.hot) {\n  var api = require(\"/Users/radicsla/workspace/vue-treeselect/node_modules/vue-hot-reload-api/dist/index.js\")\n  api.install(require('vue'))\n  if (api.compatible) {\n    module.hot.accept()\n    if (!api.isRecorded('14fca5e8')) {\n      api.createRecord('14fca5e8', component.options)\n    } else {\n      api.reload('14fca5e8', component.options)\n    }\n    \n  }\n}\ncomponent.options.__file = \"src/components/MultiValue.vue\"\nexport default component.exports","<script>\n  import MultiValueItem from './MultiValueItem'\n  import Input from './Input'\n  import Placeholder from './Placeholder'\n\n  export default {\n    name: 'vue-treeselect--multi-value',\n    inject: [ 'instance' ],\n\n    methods: {\n      renderMultiValueItems() {\n        const { instance } = this\n\n        return instance.internalValue\n          .slice(0, instance.limit)\n          .map(instance.getNode)\n          .map(node => (\n            <MultiValueItem key={`multi-value-item-${node.id}`} node={node} />\n          ))\n      },\n\n      renderExceedLimitTip() {\n        const { instance } = this\n        const count = instance.internalValue.length - instance.limit\n\n        if (count <= 0) return null\n\n        return (\n          <div class=\"vue-treeselect__limit-tip vue-treeselect-helper-zoom-effect-off\" key=\"exceed-limit-tip\">\n            <span class=\"vue-treeselect__limit-tip-text\">{ instance.limitText(count) }</span>\n          </div>\n        )\n      },\n    },\n\n    render() {\n      const { renderValueContainer } = this.$parent\n      const transitionGroupProps = {\n        props: {\n          tag: 'div',\n          name: 'vue-treeselect__multi-value-item--transition',\n          appear: true,\n        },\n      }\n\n      return renderValueContainer(\n        <transition-group class=\"vue-treeselect__multi-value\" {...transitionGroupProps}>\n          {this.renderMultiValueItems()}\n          {this.renderExceedLimitTip()}\n          <Placeholder key=\"placeholder\" />\n          <Input ref=\"input\" key=\"input\" />\n        </transition-group>,\n      )\n    },\n  }\n</script>\n","var render = function render() {\n  var _vm = this,\n    _c = _vm._self._c\n  return _c(\n    \"svg\",\n    {\n      attrs: {\n        xmlns: \"http://www.w3.org/2000/svg\",\n        viewBox: \"0 0 292.362 292.362\",\n      },\n    },\n    [\n      _c(\"path\", {\n        attrs: {\n          d: \"M286.935 69.377c-3.614-3.617-7.898-5.424-12.848-5.424H18.274c-4.952 0-9.233 1.807-12.85 5.424C1.807 72.998 0 77.279 0 82.228c0 4.948 1.807 9.229 5.424 12.847l127.907 127.907c3.621 3.617 7.902 5.428 12.85 5.428s9.233-1.811 12.847-5.428L286.935 95.074c3.613-3.617 5.427-7.898 5.427-12.847 0-4.948-1.814-9.229-5.427-12.85z\",\n        },\n      }),\n    ]\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }","<template>\n  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 292.362 292.362\">\n    <path d=\"M286.935 69.377c-3.614-3.617-7.898-5.424-12.848-5.424H18.274c-4.952 0-9.233 1.807-12.85 5.424C1.807 72.998 0 77.279 0 82.228c0 4.948 1.807 9.229 5.424 12.847l127.907 127.907c3.621 3.617 7.902 5.428 12.85 5.428s9.233-1.811 12.847-5.428L286.935 95.074c3.613-3.617 5.427-7.898 5.427-12.847 0-4.948-1.814-9.229-5.427-12.85z\" />\n  </svg>\n</template>\n\n<script>\n  export default {\n    name: 'vue-treeselect--arrow',\n  }\n</script>\n","import { render, staticRenderFns } from \"./Arrow.vue?vue&type=template&id=11186cd4\"\nimport script from \"./Arrow.vue?vue&type=script&lang=js\"\nexport * from \"./Arrow.vue?vue&type=script&lang=js\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* hot reload */\nif (module.hot) {\n  var api = require(\"/Users/radicsla/workspace/vue-treeselect/node_modules/vue-hot-reload-api/dist/index.js\")\n  api.install(require('vue'))\n  if (api.compatible) {\n    module.hot.accept()\n    if (!api.isRecorded('11186cd4')) {\n      api.createRecord('11186cd4', component.options)\n    } else {\n      api.reload('11186cd4', component.options)\n    }\n    module.hot.accept(\"./Arrow.vue?vue&type=template&id=11186cd4\", function () {\n      api.rerender('11186cd4', {\n        render: render,\n        staticRenderFns: staticRenderFns\n      })\n    })\n  }\n}\ncomponent.options.__file = \"src/components/icons/Arrow.vue\"\nexport default component.exports","var render, staticRenderFns\nimport script from \"./Control.vue?vue&type=script&lang=js\"\nexport * from \"./Control.vue?vue&type=script&lang=js\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* hot reload */\nif (module.hot) {\n  var api = require(\"/Users/radicsla/workspace/vue-treeselect/node_modules/vue-hot-reload-api/dist/index.js\")\n  api.install(require('vue'))\n  if (api.compatible) {\n    module.hot.accept()\n    if (!api.isRecorded('2fa0a0dd')) {\n      api.createRecord('2fa0a0dd', component.options)\n    } else {\n      api.reload('2fa0a0dd', component.options)\n    }\n    \n  }\n}\ncomponent.options.__file = \"src/components/Control.vue\"\nexport default component.exports","<script>\n  import { onLeftClick, isPromise } from '../utils'\n  import SingleValue from './SingleValue'\n  import MultiValue from './MultiValue'\n  import DeleteIcon from './icons/Delete'\n  import ArrowIcon from './icons/Arrow'\n\n  export default {\n    name: 'vue-treeselect--control',\n    inject: [ 'instance' ],\n\n    computed: {\n      /* eslint-disable valid-jsdoc */\n      /**\n       * Should show the \"×\" button that resets value?\n       * @return {boolean}\n       */\n      shouldShowX() {\n        const { instance } = this\n\n        return (\n          instance.clearable &&\n          !instance.disabled &&\n          instance.hasValue &&\n          (this.hasUndisabledValue || instance.allowClearingDisabled)\n        )\n      },\n\n      /**\n       * Should show the arrow button that toggles menu?\n       * @return {boolean}\n       */\n      shouldShowArrow() {\n        const { instance } = this\n\n        if (!instance.alwaysOpen) return true\n        // Even with `alwaysOpen: true`, sometimes the menu is still closed,\n        // e.g. when the control is disabled.\n        return !instance.menu.isOpen\n      },\n\n      /**\n       * Has any undisabled option been selected?\n       * @type {boolean}\n       */\n      hasUndisabledValue() {\n        const { instance } = this\n\n        return (\n          instance.hasValue &&\n          instance.internalValue.some(id => !instance.getNode(id).isDisabled)\n        )\n      },\n      /* eslint-enable valid-jsdoc */\n    },\n\n    methods: {\n      renderX() {\n        const { instance } = this\n        const title = instance.multiple ? instance.clearAllText : instance.clearValueText\n\n        if (!this.shouldShowX) return null\n\n        return (\n          <div class=\"vue-treeselect__x-container\" title={title} onMousedown={this.handleMouseDownOnX}>\n            <DeleteIcon class=\"vue-treeselect__x\" />\n          </div>\n        )\n      },\n\n      renderArrow() {\n        const { instance } = this\n        const arrowClass = {\n          'vue-treeselect__control-arrow': true,\n          'vue-treeselect__control-arrow--rotated': instance.menu.isOpen,\n        }\n\n        if (!this.shouldShowArrow) return null\n\n        return (\n          <div class=\"vue-treeselect__control-arrow-container\" onMousedown={this.handleMouseDownOnArrow}>\n            <ArrowIcon class={arrowClass} />\n          </div>\n        )\n      },\n\n      handleMouseDownOnX: onLeftClick(function handleMouseDownOnX(evt) {\n        /**\n         * We don't use async/await here because we don't want\n         * to rely on Babel polyfill or regenerator runtime.\n         * See: https://babeljs.io/docs/plugins/transform-regenerator/\n         * We also don't want to assume there is a global `Promise`\n         * class, since we are targeting to support IE9 without the\n         * need of any polyfill.\n         */\n\n        evt.stopPropagation()\n        evt.preventDefault()\n\n        const { instance } = this\n        const result = instance.beforeClearAll()\n        const handler = shouldClear => {\n          if (shouldClear) instance.clear()\n        }\n\n        if (isPromise(result)) {\n          // The handler will be called async.\n          result.then(handler)\n        } else {\n          // Keep the same behavior here.\n          setTimeout(() => handler(result), 0)\n          // Also, note that IE9 requires:\n          //   setTimeout(() => fn(...args), delay)\n          // Instead of:\n          //   setTimeout(fn, delay, ...args)\n        }\n      }),\n\n      handleMouseDownOnArrow: onLeftClick(function handleMouseDownOnArrow(evt) {\n        evt.preventDefault()\n        evt.stopPropagation()\n\n        const { instance } = this\n\n        const previouslyFocused = instance.trigger.isFocused\n        // Focus the input or prevent blurring.\n        instance.focusInput()\n\n        // If on openOnFocus is set to true and we gained focus now than do not call toggleMenu as it would close the menu\n        if (previouslyFocused || !instance.openOnFocus) instance.toggleMenu()\n      }),\n\n      // This is meant to be called by child `<Value />` component.\n      renderValueContainer(children) {\n        return (\n          <div class=\"vue-treeselect__value-container\">\n            {children}\n          </div>\n        )\n      },\n    },\n\n    render() {\n      const { instance } = this\n      const ValueContainer = instance.single ? SingleValue : MultiValue\n\n      return (\n        <div class=\"vue-treeselect__control\" onMousedown={instance.handleMouseDown}>\n          <ValueContainer ref=\"value-container\" />\n          {this.renderX()}\n          {this.renderArrow()}\n        </div>\n      )\n    },\n  }\n</script>\n","var render, staticRenderFns\nimport script from \"./Tip.vue?vue&type=script&lang=js\"\nexport * from \"./Tip.vue?vue&type=script&lang=js\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* hot reload */\nif (module.hot) {\n  var api = require(\"/Users/radicsla/workspace/vue-treeselect/node_modules/vue-hot-reload-api/dist/index.js\")\n  api.install(require('vue'))\n  if (api.compatible) {\n    module.hot.accept()\n    if (!api.isRecorded('9f31bdca')) {\n      api.createRecord('9f31bdca', component.options)\n    } else {\n      api.reload('9f31bdca', component.options)\n    }\n    \n  }\n}\ncomponent.options.__file = \"src/components/Tip.vue\"\nexport default component.exports","<script>\n  export default {\n    name: 'vue-treeselect--tip',\n    functional: true,\n\n    props: {\n      type: {\n        type: String,\n        required: true,\n      },\n      icon: {\n        type: String,\n        required: true,\n      },\n    },\n\n    render(_, context) {\n      const { props, children } = context\n\n      return (\n        <div class={`vue-treeselect__tip vue-treeselect__${props.type}-tip`}>\n          <div class=\"vue-treeselect__icon-container\">\n            <span class={`vue-treeselect__icon-${props.icon}`} />\n          </div>\n          <span class={`vue-treeselect__tip-text vue-treeselect__${props.type}-tip-text`}>\n            {children}\n          </span>\n        </div>\n      )\n    },\n  }\n</script>\n","<script>\n  import { UNCHECKED, INDETERMINATE, CHECKED } from '../constants'\n  import { onLeftClick } from '../utils'\n  import Tip from './Tip'\n  import ArrowIcon from './icons/Arrow'\n\n  let arrowPlaceholder, checkMark, minusMark\n\n  const Option = {\n    name: 'vue-treeselect--option',\n    inject: [ 'instance' ],\n\n    props: {\n      node: {\n        type: Object,\n        required: true,\n      },\n    },\n\n    computed: {\n      shouldExpand() {\n        const { instance, node } = this\n\n        return node.isBranch && instance.shouldExpand(node)\n      },\n\n      shouldShow() {\n        const { instance, node } = this\n\n        return instance.shouldShowOptionInMenu(node)\n      },\n    },\n\n    methods: {\n      renderOption() {\n        const { instance, node } = this\n        const optionClass = {\n          'vue-treeselect__option': true,\n          'vue-treeselect__option--disabled': node.isDisabled,\n          'vue-treeselect__option--selected': instance.isSelected(node),\n          'vue-treeselect__option--highlight': node.isHighlighted,\n          'vue-treeselect__option--matched': instance.localSearch.active && node.isMatched,\n          'vue-treeselect__option--hide': !this.shouldShow,\n        }\n\n        return (\n          <div class={optionClass} onMouseenter={this.handleMouseEnterOption} data-id={node.id}>\n            {this.renderArrow()}\n            {this.renderLabelContainer([\n              this.renderCheckboxContainer([\n                this.renderCheckbox(),\n              ]),\n              this.renderLabel(),\n            ])}\n          </div>\n        )\n      },\n\n      renderSubOptionsList() {\n        if (!this.shouldExpand) return null\n\n        return (\n          <div class=\"vue-treeselect__list\">\n            {this.renderSubOptions()}\n            {this.renderNoChildrenTip()}\n            {this.renderLoadingChildrenTip()}\n            {this.renderLoadingChildrenErrorTip()}\n          </div>\n        )\n      },\n\n      renderArrow() {\n        const { instance, node } = this\n\n        if (instance.shouldFlattenOptions && this.shouldShow) return null\n\n        if (node.isBranch) {\n          const transitionProps = {\n            props: {\n              name: 'vue-treeselect__option-arrow--prepare',\n              appear: true,\n            },\n          }\n          const arrowClass = {\n            'vue-treeselect__option-arrow': true,\n            'vue-treeselect__option-arrow--rotated': this.shouldExpand,\n          }\n\n          return (\n            <div class=\"vue-treeselect__option-arrow-container\" onMousedown={this.handleMouseDownOnArrow}>\n              <transition {...transitionProps}>\n                <ArrowIcon class={arrowClass} />\n              </transition>\n            </div>\n          )\n        }\n\n        // For leaf nodes, we render a placeholder to keep its label aligned to\n        // branch nodes. Unless there is no branch nodes at all (a normal\n        // non-tree select).\n        if (/*node.isLeaf && */instance.hasBranchNodes) {\n          if (!arrowPlaceholder) arrowPlaceholder = (\n            <div class=\"vue-treeselect__option-arrow-placeholder\">&nbsp;</div>\n          )\n\n          return arrowPlaceholder\n        }\n\n        return null\n      },\n\n      renderLabelContainer(children) {\n        return (\n          <div class=\"vue-treeselect__label-container\" onMousedown={this.handleMouseDownOnLabelContainer}>\n            {children}\n          </div>\n        )\n      },\n\n      renderCheckboxContainer(children) {\n        const { instance, node } = this\n\n        if (instance.single) return null\n        if (instance.disableBranchNodes && node.isBranch) return null\n\n        return (\n          <div class=\"vue-treeselect__checkbox-container\">\n            {children}\n          </div>\n        )\n      },\n\n      renderCheckbox() {\n        const { instance, node } = this\n        const checkedState = instance.forest.checkedStateMap[node.id]\n        const checkboxClass = {\n          'vue-treeselect__checkbox': true,\n          'vue-treeselect__checkbox--checked': checkedState === CHECKED,\n          'vue-treeselect__checkbox--indeterminate': checkedState === INDETERMINATE,\n          'vue-treeselect__checkbox--unchecked': checkedState === UNCHECKED,\n          'vue-treeselect__checkbox--disabled': node.isDisabled,\n        }\n\n        if (!checkMark) checkMark = (\n          <span class=\"vue-treeselect__check-mark\" />\n        )\n        if (!minusMark) minusMark = (\n          <span class=\"vue-treeselect__minus-mark\" />\n        )\n\n        return (\n          <span class={checkboxClass}>\n            {checkMark}\n            {minusMark}\n          </span>\n        )\n      },\n\n      renderLabel() {\n        const { instance, node } = this\n        const shouldShowCount = (\n          node.isBranch && (instance.localSearch.active\n            ? instance.showCountOnSearchComputed\n            : instance.showCount\n          )\n        )\n        const count = shouldShowCount\n          ? instance.localSearch.active\n            ? instance.localSearch.countMap[node.id][instance.showCountOf]\n            : node.count[instance.showCountOf]\n          : NaN\n        const labelClassName = 'vue-treeselect__label'\n        const countClassName = 'vue-treeselect__count'\n        const customLabelRenderer = instance.$scopedSlots['option-label']\n\n        if (customLabelRenderer) return customLabelRenderer({\n          node,\n          shouldShowCount,\n          count,\n          labelClassName,\n          countClassName,\n        })\n\n        return (\n          <label class={labelClassName}>\n            {node.label}\n            {shouldShowCount && (\n              <span class={countClassName}>({count})</span>\n            )}\n          </label>\n        )\n      },\n\n      renderSubOptions() {\n        const { node } = this\n\n        if (!node.childrenStates.isLoaded) return null\n\n        return node.children.map(childNode => (\n          <Option node={childNode} key={childNode.id} />\n        ))\n      },\n\n      renderNoChildrenTip() {\n        const { instance, node } = this\n\n        if (!node.childrenStates.isLoaded || node.children.length) return null\n\n        return (\n          <Tip type=\"no-children\" icon=\"warning\">{ instance.noChildrenText }</Tip>\n        )\n      },\n\n      renderLoadingChildrenTip() {\n        const { instance, node } = this\n\n        if (!node.childrenStates.isLoading) return null\n\n        return (\n          <Tip type=\"loading\" icon=\"loader\">{ instance.loadingText }</Tip>\n        )\n      },\n\n      renderLoadingChildrenErrorTip() {\n        const { instance, node } = this\n\n        if (!node.childrenStates.loadingError) return null\n\n        return (\n          <Tip type=\"error\" icon=\"error\">\n            { node.childrenStates.loadingError }\n            <a class=\"vue-treeselect__retry\" title={instance.retryTitle} onMousedown={this.handleMouseDownOnRetry}>\n              { instance.retryText }\n            </a>\n          </Tip>\n        )\n      },\n\n      handleMouseEnterOption(evt) {\n        const { instance, node } = this\n\n        // Equivalent to `self` modifier.\n        // istanbul ignore next\n        if (evt.target !== evt.currentTarget) return\n\n        instance.setCurrentHighlightedOption(node, false)\n      },\n\n      handleMouseDownOnArrow: onLeftClick(function handleMouseDownOnOptionArrow() {\n        const { instance, node } = this\n\n        instance.toggleExpanded(node)\n      }),\n\n      handleMouseDownOnLabelContainer: onLeftClick(function handleMouseDownOnLabelContainer() {\n        const { instance, node } = this\n\n        if (node.isBranch && instance.disableBranchNodes) {\n          instance.toggleExpanded(node)\n        } else {\n          instance.select(node)\n        }\n      }),\n\n      handleMouseDownOnRetry: onLeftClick(function handleMouseDownOnRetry() {\n        const { instance, node } = this\n\n        instance.loadChildrenOptions(node)\n      }),\n    },\n\n    render() {\n      const { node } = this\n      const indentLevel = this.instance.shouldFlattenOptions ? 0 : node.level\n      const listItemClass = {\n        'vue-treeselect__list-item': true,\n        [`vue-treeselect__indent-level-${indentLevel}`]: true,\n      }\n      const transitionProps = {\n        props: {\n          name: 'vue-treeselect__list--transition',\n        },\n      }\n\n      return (\n        <div class={listItemClass}>\n          {this.renderOption()}\n          {node.isBranch && (\n            <transition {...transitionProps}>\n              {this.renderSubOptionsList()}\n            </transition>\n          )}\n        </div>\n      )\n    },\n  }\n\n  // eslint-disable-next-line vue/require-direct-export\n  export default Option\n</script>\n","var render, staticRenderFns\nimport script from \"./Option.vue?vue&type=script&lang=js\"\nexport * from \"./Option.vue?vue&type=script&lang=js\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* hot reload */\nif (module.hot) {\n  var api = require(\"/Users/radicsla/workspace/vue-treeselect/node_modules/vue-hot-reload-api/dist/index.js\")\n  api.install(require('vue'))\n  if (api.compatible) {\n    module.hot.accept()\n    if (!api.isRecorded('3dddec25')) {\n      api.createRecord('3dddec25', component.options)\n    } else {\n      api.reload('3dddec25', component.options)\n    }\n    \n  }\n}\ncomponent.options.__file = \"src/components/Option.vue\"\nexport default component.exports","<script>\n  import { MENU_BUFFER } from '../constants'\n  import { watchSize, setupResizeAndScrollEventListeners } from '../utils'\n  import Option from './Option'\n  import Tip from './Tip'\n\n  const directionMap = {\n    top: 'top',\n    bottom: 'bottom',\n    above: 'top',\n    below: 'bottom',\n  }\n\n  export default {\n    name: 'vue-treeselect--menu',\n    inject: [ 'instance' ],\n\n    computed: {\n      menuStyle() {\n        const { instance } = this\n\n        return {\n          maxHeight: instance.maxHeight + 'px',\n        }\n      },\n\n      menuContainerStyle() {\n        const { instance } = this\n\n        return {\n          zIndex: instance.appendToBody ? null : instance.zIndex,\n          display: instance.menu.isOpen ? 'block' : 'none',\n        }\n      },\n    },\n\n    watch: {\n      'instance.menu.isOpen'(newValue) {\n        if (newValue) {\n          // In case `openMenu()` is just called and the menu is not rendered yet.\n          this.$nextTick(this.onMenuOpen)\n        } else {\n          this.onMenuClose()\n        }\n      },\n    },\n\n    created() {\n      this.menuSizeWatcher = null\n      this.menuResizeAndScrollEventListeners = null\n    },\n\n    mounted() {\n      const { instance } = this\n\n      if (instance.menu.isOpen) this.$nextTick(this.onMenuOpen)\n    },\n\n    destroyed() {\n      this.onMenuClose()\n    },\n\n    methods: {\n      renderMenu() {\n        const { instance } = this\n\n        if (!instance.menu.isOpen) return null\n\n        return (\n          <div ref=\"menu\" class=\"vue-treeselect__menu\" onMousedown={instance.handleMouseDown} style={this.menuStyle}>\n            {this.renderBeforeList()}\n            {instance.async\n              ? this.renderAsyncSearchMenuInner()\n              : instance.localSearch.active\n                ? this.renderLocalSearchMenuInner()\n                : this.renderNormalMenuInner()}\n            {this.renderAfterList()}\n          </div>\n        )\n      },\n\n      renderBeforeList() {\n        const { instance } = this\n        const beforeListRenderer = instance.$scopedSlots['before-list']\n\n        return beforeListRenderer\n          ? beforeListRenderer()\n          : null\n      },\n\n      renderAfterList() {\n        const { instance } = this\n        const afterListRenderer = instance.$scopedSlots['after-list']\n\n        return afterListRenderer\n          ? afterListRenderer()\n          : null\n      },\n\n      renderNormalMenuInner() {\n        const { instance } = this\n\n        if (instance.rootOptionsStates.isLoading) {\n          return this.renderLoadingOptionsTip()\n        } else if (instance.rootOptionsStates.loadingError) {\n          return this.renderLoadingRootOptionsErrorTip()\n        } else if (instance.rootOptionsStates.isLoaded && instance.forest.normalizedOptions.length === 0) {\n          return this.renderNoAvailableOptionsTip()\n        } else {\n          return this.renderOptionList()\n        }\n      },\n\n      renderLocalSearchMenuInner() {\n        const { instance } = this\n\n        if (instance.rootOptionsStates.isLoading) {\n          return this.renderLoadingOptionsTip()\n        } else if (instance.rootOptionsStates.loadingError) {\n          return this.renderLoadingRootOptionsErrorTip()\n        } else if (instance.rootOptionsStates.isLoaded && instance.forest.normalizedOptions.length === 0) {\n          return this.renderNoAvailableOptionsTip()\n        } else if (instance.localSearch.noResults) {\n          return this.renderNoResultsTip()\n        } else {\n          return this.renderOptionList()\n        }\n      },\n\n      renderAsyncSearchMenuInner() {\n        const { instance } = this\n        const entry = instance.getRemoteSearchEntry()\n        const shouldShowSearchPromptTip = instance.trigger.searchQuery === '' && !instance.defaultOptions\n        const shouldShowNoResultsTip = shouldShowSearchPromptTip\n          ? false\n          : entry.isLoaded && entry.options.length === 0\n\n        if (shouldShowSearchPromptTip) {\n          return this.renderSearchPromptTip()\n        } else if (entry.isLoading) {\n          return this.renderLoadingOptionsTip()\n        } else if (entry.loadingError) {\n          return this.renderAsyncSearchLoadingErrorTip()\n        } else if (shouldShowNoResultsTip) {\n          return this.renderNoResultsTip()\n        } else {\n          return this.renderOptionList()\n        }\n      },\n\n      renderOptionList() {\n        const { instance } = this\n\n        return (\n          <div class=\"vue-treeselect__list\">\n            {instance.forest.normalizedOptions.map(rootNode => (\n              <Option node={rootNode} key={rootNode.id} />\n            ))}\n          </div>\n        )\n      },\n\n      renderSearchPromptTip() {\n        const { instance } = this\n\n        return (\n          <Tip type=\"search-prompt\" icon=\"warning\">{ instance.searchPromptText }</Tip>\n        )\n      },\n\n      renderLoadingOptionsTip() {\n        const { instance } = this\n\n        return (\n          <Tip type=\"loading\" icon=\"loader\">{ instance.loadingText }</Tip>\n        )\n      },\n\n      renderLoadingRootOptionsErrorTip() {\n        const { instance } = this\n\n        return (\n          <Tip type=\"error\" icon=\"error\">\n            { instance.rootOptionsStates.loadingError }\n            <a class=\"vue-treeselect__retry\" onClick={instance.loadRootOptions} title={instance.retryTitle}>\n              { instance.retryText }\n            </a>\n          </Tip>\n        )\n      },\n\n      renderAsyncSearchLoadingErrorTip() {\n        const { instance } = this\n        const entry = instance.getRemoteSearchEntry()\n\n        // TODO: retryTitle?\n\n        return (\n          <Tip type=\"error\" icon=\"error\">\n            { entry.loadingError }\n            <a class=\"vue-treeselect__retry\" onClick={instance.handleRemoteSearch} title={instance.retryTitle}>\n              { instance.retryText }\n            </a>\n          </Tip>\n        )\n      },\n\n      renderNoAvailableOptionsTip() {\n        const { instance } = this\n\n        return (\n          <Tip type=\"no-options\" icon=\"warning\">{ instance.noOptionsText }</Tip>\n        )\n      },\n\n      renderNoResultsTip() {\n        const { instance } = this\n\n        return (\n          <Tip type=\"no-results\" icon=\"warning\">{ instance.noResultsText }</Tip>\n        )\n      },\n\n      onMenuOpen() {\n        this.adjustMenuOpenDirection()\n        this.setupMenuSizeWatcher()\n        this.setupMenuResizeAndScrollEventListeners()\n      },\n\n      onMenuClose() {\n        this.removeMenuSizeWatcher()\n        this.removeMenuResizeAndScrollEventListeners()\n      },\n\n      adjustMenuOpenDirection() {\n        const { instance } = this\n        if (!instance.menu.isOpen) return\n\n        const $menu = instance.getMenu()\n        const $control = instance.getControl()\n        const menuRect = $menu.getBoundingClientRect()\n        const controlRect = $control.getBoundingClientRect()\n        const menuHeight = menuRect.height\n        const viewportHeight = window.innerHeight\n        const spaceAbove = controlRect.top\n        const spaceBelow = window.innerHeight - controlRect.bottom\n        const isControlInViewport = (\n          (controlRect.top >= 0 && controlRect.top <= viewportHeight) ||\n          (controlRect.top < 0 && controlRect.bottom > 0)\n        )\n        const hasEnoughSpaceBelow = spaceBelow > menuHeight + MENU_BUFFER\n        const hasEnoughSpaceAbove = spaceAbove > menuHeight + MENU_BUFFER\n\n        if (!isControlInViewport) {\n          instance.closeMenu()\n        } else if (instance.openDirection !== 'auto') {\n          instance.menu.placement = directionMap[instance.openDirection]\n        } else if (hasEnoughSpaceBelow || !hasEnoughSpaceAbove) {\n          instance.menu.placement = 'bottom'\n        } else {\n          instance.menu.placement = 'top'\n        }\n      },\n\n      setupMenuSizeWatcher() {\n        const { instance } = this\n        const $menu = instance.getMenu()\n\n        // istanbul ignore next\n        if (this.menuSizeWatcher) return\n\n        this.menuSizeWatcher = {\n          remove: watchSize($menu, this.adjustMenuOpenDirection),\n        }\n      },\n\n      setupMenuResizeAndScrollEventListeners() {\n        const { instance } = this\n        const $control = instance.getControl()\n\n        // istanbul ignore next\n        if (this.menuResizeAndScrollEventListeners) return\n\n        this.menuResizeAndScrollEventListeners = {\n          remove: setupResizeAndScrollEventListeners($control, this.adjustMenuOpenDirection),\n        }\n      },\n\n      removeMenuSizeWatcher() {\n        if (!this.menuSizeWatcher) return\n\n        this.menuSizeWatcher.remove()\n        this.menuSizeWatcher = null\n      },\n\n      removeMenuResizeAndScrollEventListeners() {\n        if (!this.menuResizeAndScrollEventListeners) return\n\n        this.menuResizeAndScrollEventListeners.remove()\n        this.menuResizeAndScrollEventListeners = null\n      },\n    },\n\n    render() {\n      return (\n        <div ref=\"menu-container\" class=\"vue-treeselect__menu-container\" style={this.menuContainerStyle}>\n          <transition name=\"vue-treeselect__menu--transition\">\n            {this.renderMenu()}\n          </transition>\n        </div>\n      )\n    },\n  }\n</script>\n","var render, staticRenderFns\nimport script from \"./Menu.vue?vue&type=script&lang=js\"\nexport * from \"./Menu.vue?vue&type=script&lang=js\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* hot reload */\nif (module.hot) {\n  var api = require(\"/Users/radicsla/workspace/vue-treeselect/node_modules/vue-hot-reload-api/dist/index.js\")\n  api.install(require('vue'))\n  if (api.compatible) {\n    module.hot.accept()\n    if (!api.isRecorded('9bcc0be2')) {\n      api.createRecord('9bcc0be2', component.options)\n    } else {\n      api.reload('9bcc0be2', component.options)\n    }\n    \n  }\n}\ncomponent.options.__file = \"src/components/Menu.vue\"\nexport default component.exports","<script>\n  import Vue from 'vue'\n  import { watchSize, setupResizeAndScrollEventListeners, find } from '../utils'\n  import Menu from './Menu'\n\n  const PortalTarget = {\n    name: 'vue-treeselect--portal-target',\n    inject: [ 'instance' ],\n\n    watch: {\n      'instance.menu.isOpen'(newValue) {\n        if (newValue) {\n          this.setupHandlers()\n        } else {\n          this.removeHandlers()\n        }\n      },\n\n      'instance.menu.placement'() {\n        this.updateMenuContainerOffset()\n      },\n    },\n\n    created() {\n      this.controlResizeAndScrollEventListeners = null\n      this.controlSizeWatcher = null\n    },\n\n    mounted() {\n      const { instance } = this\n\n      if (instance.menu.isOpen) this.setupHandlers()\n    },\n\n    methods: {\n      setupHandlers() {\n        this.updateWidth()\n        this.updateMenuContainerOffset()\n        this.setupControlResizeAndScrollEventListeners()\n        this.setupControlSizeWatcher()\n      },\n\n      removeHandlers() {\n        this.removeControlResizeAndScrollEventListeners()\n        this.removeControlSizeWatcher()\n      },\n\n      setupControlResizeAndScrollEventListeners() {\n        const { instance } = this\n        const $control = instance.getControl()\n\n        // istanbul ignore next\n        if (this.controlResizeAndScrollEventListeners) return\n\n        this.controlResizeAndScrollEventListeners = {\n          remove: setupResizeAndScrollEventListeners($control, this.updateMenuContainerOffset),\n        }\n      },\n\n      setupControlSizeWatcher() {\n        const { instance } = this\n        const $control = instance.getControl()\n\n        // istanbul ignore next\n        if (this.controlSizeWatcher) return\n\n        this.controlSizeWatcher = {\n          remove: watchSize($control, () => {\n            this.updateWidth()\n            this.updateMenuContainerOffset()\n          }),\n        }\n      },\n\n      removeControlResizeAndScrollEventListeners() {\n        if (!this.controlResizeAndScrollEventListeners) return\n\n        this.controlResizeAndScrollEventListeners.remove()\n        this.controlResizeAndScrollEventListeners = null\n      },\n\n      removeControlSizeWatcher() {\n        if (!this.controlSizeWatcher) return\n\n        this.controlSizeWatcher.remove()\n        this.controlSizeWatcher = null\n      },\n\n      updateWidth() {\n        const { instance } = this\n        const $portalTarget = this.$el\n        const $control = instance.getControl()\n        const controlRect = $control.getBoundingClientRect()\n\n        $portalTarget.style.width = controlRect.width + 'px'\n      },\n\n      updateMenuContainerOffset() {\n        const { instance } = this\n        const $control = instance.getControl()\n        const $portalTarget = this.$el\n        const controlRect = $control.getBoundingClientRect()\n        const portalTargetRect = $portalTarget.getBoundingClientRect()\n        const offsetY = instance.menu.placement === 'bottom' ? controlRect.height : 0\n        const left = Math.round(controlRect.left - portalTargetRect.left) + 'px'\n        const top = Math.round(controlRect.top - portalTargetRect.top + offsetY) + 'px'\n        const menuContainerStyle = this.$refs.menu.$refs['menu-container'].style\n        const transformVariations = [ 'transform', 'webkitTransform', 'MozTransform', 'msTransform' ]\n        const transform = find(transformVariations, t => t in document.body.style)\n\n        // IE9 doesn't support `translate3d()`.\n        menuContainerStyle[transform] = `translate(${left}, ${top})`\n      },\n    },\n\n    render() {\n      const { instance } = this\n      const portalTargetClass = [ 'vue-treeselect__portal-target', instance.wrapperClass ]\n      const portalTargetStyle = { zIndex: instance.zIndex }\n\n      return (\n        <div class={portalTargetClass} style={portalTargetStyle} data-instance-id={instance.getInstanceId()}>\n          <Menu ref=\"menu\" />\n        </div>\n      )\n    },\n\n    destroyed() {\n      this.removeHandlers()\n    },\n  }\n\n  let placeholder\n\n  export default {\n    name: 'vue-treeselect--menu-portal',\n\n    created() {\n      this.portalTarget = null\n    },\n\n    mounted() {\n      this.setup()\n    },\n\n    destroyed() {\n      this.teardown()\n    },\n\n    methods: {\n      setup() {\n        const el = document.createElement('div')\n        document.body.appendChild(el)\n\n        this.portalTarget = new Vue({\n          el,\n          parent: this,\n          ...PortalTarget,\n        })\n      },\n\n      teardown() {\n        document.body.removeChild(this.portalTarget.$el)\n        this.portalTarget.$el.innerHTML = ''\n\n        this.portalTarget.$destroy()\n        this.portalTarget = null\n        this.placeholder = null\n      },\n    },\n\n    render() {\n      if (!placeholder) placeholder = (\n        <div class=\"vue-treeselect__menu-placeholder\" />\n      )\n\n      return placeholder\n    },\n  }\n</script>\n","var render, staticRenderFns\nimport script from \"./MenuPortal.vue?vue&type=script&lang=js\"\nexport * from \"./MenuPortal.vue?vue&type=script&lang=js\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var render, staticRenderFns\nimport script from \"./Treeselect.vue?vue&type=script&lang=js\"\nexport * from \"./Treeselect.vue?vue&type=script&lang=js\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* hot reload */\nif (module.hot) {\n  var api = require(\"/Users/radicsla/workspace/vue-treeselect/node_modules/vue-hot-reload-api/dist/index.js\")\n  api.install(require('vue'))\n  if (api.compatible) {\n    module.hot.accept()\n    if (!api.isRecorded('aebf116c')) {\n      api.createRecord('aebf116c', component.options)\n    } else {\n      api.reload('aebf116c', component.options)\n    }\n    \n  }\n}\ncomponent.options.__file = \"src/components/Treeselect.vue\"\nexport default component.exports","<script>\n  import treeselectMixin from '../mixins/treeselectMixin'\n  import HiddenFields from './HiddenFields'\n  import Control from './Control'\n  import Menu from './Menu'\n  import MenuPortal from './MenuPortal'\n\n  export default {\n    name: 'vue-treeselect',\n    mixins: [ treeselectMixin ],\n\n    computed: {\n      wrapperClass() {\n        return {\n          'vue-treeselect': true,\n          'vue-treeselect--single': this.single,\n          'vue-treeselect--multi': this.multiple,\n          'vue-treeselect--searchable': this.searchable,\n          'vue-treeselect--disabled': this.disabled,\n          'vue-treeselect--focused': this.trigger.isFocused,\n          'vue-treeselect--has-value': this.hasValue,\n          'vue-treeselect--open': this.menu.isOpen,\n          'vue-treeselect--open-above': this.menu.placement === 'top',\n          'vue-treeselect--open-below': this.menu.placement === 'bottom',\n          'vue-treeselect--branch-nodes-disabled': this.disableBranchNodes,\n          'vue-treeselect--append-to-body': this.appendToBody,\n        }\n      },\n    },\n\n    render() {\n      return (\n        <div ref=\"wrapper\" class={this.wrapperClass}>\n          <HiddenFields />\n          <Control ref=\"control\" />\n          {this.appendToBody ? <MenuPortal ref=\"portal\" /> : <Menu ref=\"menu\" />}\n        </div>\n      )\n    },\n  }\n</script>\n","import Treeselect from './components/Treeselect'\nimport treeselectMixin from './mixins/treeselectMixin'\nimport './style.less'\n\nexport default Treeselect\nexport { Treeselect, treeselectMixin }\nexport {\n  // Delayed loading.\n  LOAD_ROOT_OPTIONS,\n  LOAD_CHILDREN_OPTIONS,\n  ASYNC_SEARCH,\n} from './constants'\n\nexport const VERSION = PKG_VERSION\n"],"sourceRoot":""}
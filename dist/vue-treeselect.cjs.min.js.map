{"version":3,"sources":["webpack://VueTreeselect/webpack/bootstrap","webpack://VueTreeselect/external \"@babel/runtime/helpers/defineProperty\"","webpack://VueTreeselect/external \"babel-helper-vue-jsx-merge-props\"","webpack://VueTreeselect/external \"@babel/runtime/helpers/toConsumableArray\"","webpack://VueTreeselect/external \"lodash/noop\"","webpack://VueTreeselect/external \"lodash/debounce\"","webpack://VueTreeselect/external \"is-promise\"","webpack://VueTreeselect/external \"lodash/once\"","webpack://VueTreeselect/external \"lodash/identity\"","webpack://VueTreeselect/external \"lodash/constant\"","webpack://VueTreeselect/external \"lodash/last\"","webpack://VueTreeselect/external \"@babel/runtime/helpers/slicedToArray\"","webpack://VueTreeselect/external \"fuzzysearch\"","webpack://VueTreeselect/external \"watch-size\"","webpack://VueTreeselect/external \"@babel/runtime/helpers/typeof\"","webpack://VueTreeselect/external \"vue\"","webpack://VueTreeselect/./src/utils/warning.js","webpack://VueTreeselect/./src/utils/onLeftClick.js","webpack://VueTreeselect/./src/utils/scrollIntoView.js","webpack://VueTreeselect/./src/utils/watchSize.js","webpack://VueTreeselect/./src/utils/removeFromArray.js","webpack://VueTreeselect/./src/utils/setupResizeAndScrollEventListeners.js","webpack://VueTreeselect/./src/utils/isNaN.js","webpack://VueTreeselect/./src/utils/createMap.js","webpack://VueTreeselect/./src/utils/deepExtend.js","webpack://VueTreeselect/./src/utils/includes.js","webpack://VueTreeselect/./src/utils/find.js","webpack://VueTreeselect/./src/utils/quickDiff.js","webpack://VueTreeselect/./src/constants.js","webpack://VueTreeselect/./src/mixins/treeselectMixin.js","webpack://VueTreeselect/src/components/HiddenFields.vue","webpack://VueTreeselect/./node_modules/vue-loader/lib/runtime/componentNormalizer.js","webpack://VueTreeselect/./src/components/HiddenFields.vue","webpack://VueTreeselect/src/components/Input.vue","webpack://VueTreeselect/./src/components/Input.vue","webpack://VueTreeselect/./src/components/Placeholder.vue","webpack://VueTreeselect/src/components/Placeholder.vue","webpack://VueTreeselect/./src/components/SingleValue.vue","webpack://VueTreeselect/src/components/SingleValue.vue","webpack://VueTreeselect/./src/components/icons/Delete.vue?6178","webpack://VueTreeselect/src/components/icons/Delete.vue","webpack://VueTreeselect/./src/components/icons/Delete.vue","webpack://VueTreeselect/./src/components/MultiValueItem.vue","webpack://VueTreeselect/src/components/MultiValueItem.vue","webpack://VueTreeselect/./src/components/MultiValue.vue","webpack://VueTreeselect/src/components/MultiValue.vue","webpack://VueTreeselect/./src/components/icons/Arrow.vue?7b7a","webpack://VueTreeselect/src/components/icons/Arrow.vue","webpack://VueTreeselect/src/components/Option.vue","webpack://VueTreeselect/./src/components/icons/Arrow.vue","webpack://VueTreeselect/./src/components/Control.vue","webpack://VueTreeselect/src/components/Control.vue","webpack://VueTreeselect/./src/components/Tip.vue","webpack://VueTreeselect/src/components/Tip.vue","webpack://VueTreeselect/./src/components/Option.vue","webpack://VueTreeselect/src/components/Menu.vue","webpack://VueTreeselect/./src/components/Menu.vue","webpack://VueTreeselect/src/components/MenuPortal.vue","webpack://VueTreeselect/./src/components/MenuPortal.vue","webpack://VueTreeselect/./src/components/Treeselect.vue","webpack://VueTreeselect/src/components/Treeselect.vue","webpack://VueTreeselect/./src/index.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","require","warning","noop","onLeftClick","mouseDownHandler","evt","type","button","_len","arguments","length","args","Array","_key","apply","this","concat","scrollIntoView","$scrollingEl","$focusedEl","scrollingReact","getBoundingClientRect","focusedRect","overScroll","offsetHeight","bottom","scrollTop","Math","min","offsetTop","clientHeight","scrollHeight","top","max","intervalId","removeFromArray","arr","elem","idx","indexOf","splice","registered","test","item","$el","listener","lastWidth","lastHeight","width","offsetWidth","height","watchSizeForIE9","push","setInterval","forEach","clearInterval","watchSize","isIE9","document","documentMode","locked","removeSizeWatcher","watchSizeForBrowsersOtherThanIE9","isScrollElment","_getComputedStyle","getComputedStyle","overflow","overflowX","overflowY","setupResizeAndScrollEventListeners","$scrollParents","$parent","parentNode","nodeName","nodeType","ELEMENT_NODE","window","findScrollParents","addEventListener","passive","scrollParent","removeEventListener","$scrollParent","isNaN","x","createMap","isPlainObject","_typeof","getPrototypeOf","deepExtend","target","source","keys","len","obj","includes","arrOrStr","find","predicate","ctx","quickDiff","arrA","arrB","LOAD_ROOT_OPTIONS","LOAD_CHILDREN_OPTIONS","ASYNC_SEARCH","KEY_CODES","sortValueByIndex","a","b","level","index","match","enableFuzzyMatch","needle","haystack","fuzzysearch","getErrorMessage","err","message","String","instanceId","provide","instance","props","allowClearingDisabled","Boolean","default","allowSelectingDisabledDescendants","alwaysOpen","appendToBody","async","autoFocus","autoLoadRootOptions","autoDeselectAncestors","autoDeselectDescendants","autoSelectAncestors","autoSelectDescendants","backspaceRemoves","beforeClearAll","Function","constant","branchNodesFirst","cacheOptions","clearable","clearAllText","clearOnSelect","clearValueText","closeOnSelect","defaultExpandLevel","Number","defaultOptions","deleteRemoves","delimiter","disableBranchNodes","disabled","disableFuzzyMatching","expandParentsInMenuForSelected","flat","flattenSearchResults","joinValues","limit","Infinity","limitText","count","loadingText","loadOptions","matchKeys","maxExpandMatchesOnSearch","maxHeight","multiple","noChildrenText","noExpandOnSearch","noOptionsText","noResultsText","normalizer","identity","openDirection","validator","openOnClick","openOnFocus","options","placeholder","required","retryText","retryTitle","scrollPositionOnCenter","searchable","searchMinInputLength","searchNested","searchPromptText","showCount","showCountOf","showCountOnSearch","showNodeWhenNoSelection","sortValueBy","tabIndex","useOnlyIsDisabled","valueConsistsOf","valueFormat","zIndex","data","trigger","isFocused","searchQuery","menu","isOpen","current","lastScrollPosition","placement","forest","normalizedOptions","nodeMap","checkedStateMap","selectedNodeIds","extractCheckedNodeIdsFromValue","selectedNodeMap","rootOptionsStates","isLoaded","isLoading","loadingError","localSearch","active","noResults","countMap","remoteSearch","computed","selectedNodes","map","getNode","internalValue","_this","single","slice","filter","id","node","isRootNode","isSelected","isLeaf","children","_internalValue","indeterminateNodeIds","selectedNode","ancestors","ancestor","sort","sortValueByLevel","hasValue","visibleOptionIds","_this2","traverseAllNodesByIndex","shouldOptionBeIncludedInSearchResult","isBranch","shouldExpand","hasVisibleOptions","showCountOnSearchComputed","hasBranchNodes","some","rootNode","shouldFlattenOptions","watch","newValue","openMenu","closeMenu","initialize","oldValue","$emit","getValue","getInstanceId","buildForestState","handler","isArray","deep","immediate","handleRemoteSearch","handleLocalSearch","nodeIdsFromValue","fixSelectedNodeIds","expandParentNodesOfSelected","showDefaultNodeIfNoSelection","methods","verifyProps","_this3","propName","resetFlags","_blurOnSelect","getRemoteSearchEntry","prevNodeMap","keepDataOfSelectedNodes","normalize","$nextTick","_this4","rawNodes","raw","nodeId","createFallbackNode","extractNodeFromValue","fallbackNode","label","enhancedNormalizer","isFallbackNode","isDisabled","isNew","$set","_this5","_this6","defaultNode","nodeIdListOfPrevValue","_this7","nextSelectedNodeIds","traverseDescendantsBFS","descendant","queue","shift","_this8","_objectSpread","callback","currNode","_toConsumableArray","traverseDescendantsDFS","_this9","child","traverseAllNodesDFS","_this10","walk","toggleClickOutsideEvent","enabled","handleClickOutside","getValueContainer","$refs","control","getInput","input","focusInput","focus","blurInput","blur","handleMouseDown","preventDefault","stopPropagation","contains","wrapper","_this11","done","resetHighlightedOptionWhenNecessary","isExpandedOnSearch","showAllChildrenOnSearch","isMatched","hasMatchedDescendants","_defineProperty","lowerCasedSearchQuery","trim","toLocaleLowerCase","splitSearchQuery","replace","split","every","filterValue","nestedSearchLabel","matchKey","lowerCased","_this12","entry","callLoadOptionsProp","action","isPending","start","succeed","fail","end","_this13","$watch","isExpanded","shouldShowOptionInMenu","getControl","getMenu","$menu","portal","portalTarget","setCurrentHighlightedOption","_this14","scroll","undefined","prev","isHighlighted","scrollToOption","$option","querySelector","forceReset","highlightFirstOption","first","highlightPrevOption","highlightLastOption","highlightNextOption","next","last","getLast","resetSearchQuery","saveMenuScrollPosition","restoreMenuScrollPosition","loadRootOptions","scrollMenuOnCenter","toggleMenu","toggleExpanded","nextState","childrenStates","loadChildrenOptions","_this15","selectedNodeId","ancestorNode","nodes","_this16","_ref","_ref2","_slicedToArray","checkDuplication","verifyNodeShape","isDefaultExpanded","reduce","normalized","hasDisabledDescendants","branchNodes","option","leafNodes","_this17","_this18","_ref3","once","result","isPromise","then","catch","console","error","_this19","JSON","stringify","select","clear","_selectNode","_deselectNode","_this20","_this21","addValue","isFullyChecked","curr","_this22","removeValue","hasUncheckedSomeDescendants","bulk","removeLastValue","lastValue","lastSelectedNode","expandParentNodes","nodeIds","_step","_iterator","_createForOfIteratorHelper","_step2","_iterator2","e","f","scrollMenuToOption","position","_this23","created","mounted","destroyed","stringifyValue","normalizeComponent","scriptExports","render","staticRenderFns","functionalTemplate","injectStyles","scopeId","moduleIdentifier","shadowMode","hook","_compiled","functional","_scopeId","context","$vnode","ssrContext","parent","__VUE_SSR_CONTEXT__","_registeredComponents","add","_ssrRegister","$root","$options","shadowRoot","_injectStyles","originalRender","h","existing","beforeCreate","inject","_","injections","stringifiedValues","join","stringifiedValue","attrs","domProps","keysThatRequireMenuBeingOpen","inputWidth","needAutoSize","inputStyle","updateInputWidth","debouncedCallback","debounce","updateSearchQuery","leading","trailing","onInput","onFocus","onBlur","activeElement","cancel","onKeyDown","which","keyCode","ctrlKey","shiftKey","altKey","metaKey","onMouseDown","renderInputContainer","$createElement","renderInput","renderSizer","on","keydown","ref","_mergeJSXProps","autocomplete","style","sizer","scrollWidth","placeholderClass","renderSingleValueLabel","customValueLabelRenderer","$scopedSlots","renderValueContainer","shouldShowValue","Placeholder","Input","_c","_self","xmlns","viewBox","_withStripped","itemClass","labelRenderer","DeleteIcon","renderMultiValueItems","MultiValueItem","renderExceedLimitTip","transitionGroupProps","tag","appear","arrowPlaceholder","checkMark","minusMark","shouldShowX","hasUndisabledValue","shouldShowArrow","renderX","title","handleMouseDownOnX","renderArrow","arrowClass","handleMouseDownOnArrow","ArrowIcon","shouldClear","setTimeout","previouslyFocused","ValueContainer","SingleValue","MultiValue","icon","Option","shouldShow","renderOption","handleMouseEnterOption","renderLabelContainer","renderCheckboxContainer","renderCheckbox","renderLabel","renderSubOptionsList","renderSubOptions","renderNoChildrenTip","renderLoadingChildrenTip","renderLoadingChildrenErrorTip","handleMouseDownOnLabelContainer","checkedState","checkboxClass","shouldShowCount","NaN","customLabelRenderer","labelClassName","countClassName","childNode","Tip","handleMouseDownOnRetry","currentTarget","indentLevel","listItemClass","transitionProps","directionMap","above","below","menuStyle","menuContainerStyle","onMenuOpen","onMenuClose","menuSizeWatcher","menuResizeAndScrollEventListeners","renderMenu","renderBeforeList","renderAsyncSearchMenuInner","renderLocalSearchMenuInner","renderNormalMenuInner","renderAfterList","beforeListRenderer","afterListRenderer","renderLoadingOptionsTip","renderLoadingRootOptionsErrorTip","renderNoAvailableOptionsTip","renderOptionList","renderNoResultsTip","shouldShowSearchPromptTip","shouldShowNoResultsTip","renderSearchPromptTip","renderAsyncSearchLoadingErrorTip","adjustMenuOpenDirection","setupMenuSizeWatcher","setupMenuResizeAndScrollEventListeners","removeMenuSizeWatcher","removeMenuResizeAndScrollEventListeners","$control","menuRect","controlRect","menuHeight","viewportHeight","innerHeight","spaceAbove","hasEnoughSpaceBelow","hasEnoughSpaceAbove","remove","PortalTarget","setupHandlers","removeHandlers","updateMenuContainerOffset","controlResizeAndScrollEventListeners","controlSizeWatcher","updateWidth","setupControlResizeAndScrollEventListeners","setupControlSizeWatcher","removeControlResizeAndScrollEventListeners","removeControlSizeWatcher","$portalTarget","portalTargetRect","offsetY","left","round","body","portalTargetClass","wrapperClass","portalTargetStyle","Menu","setup","teardown","el","createElement","appendChild","Vue","removeChild","innerHTML","$destroy","mixins","treeselectMixin","HiddenFields","Control","MenuPortal","VERSION","Treeselect","PKG_VERSION"],"mappings":";;;;;2BACE,IAAIA,EAAmB,GAGvB,SAASC,EAAoBC,GAG5B,GAAGF,EAAiBE,GACnB,OAAOF,EAAiBE,GAAUC,QAGnC,IAAIC,EAASJ,EAAiBE,GAAY,CACzCG,EAAGH,EACHI,GAAG,EACHH,QAAS,IAUV,OANAI,EAAQL,GAAUM,KAAKJ,EAAOD,QAASC,EAAQA,EAAOD,QAASF,GAG/DG,EAAOE,GAAI,EAGJF,EAAOD,QA0Df,OArDAF,EAAoBQ,EAAIF,EAGxBN,EAAoBS,EAAIV,EAGxBC,EAAoBU,EAAI,SAASR,EAASS,EAAMC,GAC3CZ,EAAoBa,EAAEX,EAASS,IAClCG,OAAOC,eAAeb,EAASS,EAAM,CAAEK,YAAY,EAAMC,IAAKL,KAKhEZ,EAAoBkB,EAAI,SAAShB,GACX,oBAAXiB,QAA0BA,OAAOC,aAC1CN,OAAOC,eAAeb,EAASiB,OAAOC,YAAa,CAAEC,MAAO,WAE7DP,OAAOC,eAAeb,EAAS,aAAc,CAAEmB,OAAO,KAQvDrB,EAAoBsB,EAAI,SAASD,EAAOE,GAEvC,GADU,EAAPA,IAAUF,EAAQrB,EAAoBqB,IAC/B,EAAPE,EAAU,OAAOF,EACpB,GAAW,EAAPE,GAA8B,iBAAVF,GAAsBA,GAASA,EAAMG,WAAY,OAAOH,EAChF,IAAII,EAAKX,OAAOY,OAAO,MAGvB,GAFA1B,EAAoBkB,EAAEO,GACtBX,OAAOC,eAAeU,EAAI,UAAW,CAAET,YAAY,EAAMK,MAAOA,IACtD,EAAPE,GAA4B,iBAATF,EAAmB,IAAI,IAAIM,KAAON,EAAOrB,EAAoBU,EAAEe,EAAIE,EAAK,SAASA,GAAO,OAAON,EAAMM,IAAQC,KAAK,KAAMD,IAC9I,OAAOF,GAIRzB,EAAoB6B,EAAI,SAAS1B,GAChC,IAAIS,EAAST,GAAUA,EAAOqB,WAC7B,WAAwB,OAAOrB,EAAgB,SAC/C,WAA8B,OAAOA,GAEtC,OADAH,EAAoBU,EAAEE,EAAQ,IAAKA,GAC5BA,GAIRZ,EAAoBa,EAAI,SAASiB,EAAQC,GAAY,OAAOjB,OAAOkB,UAAUC,eAAe1B,KAAKuB,EAAQC,IAGzG/B,EAAoBkC,EAAI,IAIjBlC,EAAoBA,EAAoBmC,EAAI,I,gBClFrDhC,EAAOD,QAAUkC,QAAQ,0C,cCAzBjC,EAAOD,QAAUkC,QAAQ,qC,cCAzBjC,EAAOD,QAAUkC,QAAQ,6C,cCAzBjC,EAAOD,QAAUkC,QAAQ,gB,cCAzBjC,EAAOD,QAAUkC,QAAQ,oB,cCAzBjC,EAAOD,QAAUkC,QAAQ,e,cCAzBjC,EAAOD,QAAUkC,QAAQ,gB,cCAzBjC,EAAOD,QAAUkC,QAAQ,oB,cCAzBjC,EAAOD,QAAUkC,QAAQ,oB,cCAzBjC,EAAOD,QAAUkC,QAAQ,gB,cCAzBjC,EAAOD,QAAUkC,QAAQ,yC,cCAzBjC,EAAOD,QAAUkC,QAAQ,gB,cCAzBjC,EAAOD,QAAUkC,QAAQ,e,cCAzBjC,EAAOD,QAAUkC,QAAQ,kC,cCAzBjC,EAAOD,QAAUkC,QAAQ,Q,8ZCEZC,E,OACkBC,ECHxB,SAASC,EAAYC,GAC1B,OAAO,SAAqBC,GAC1B,GAAiB,cAAbA,EAAIC,MAAuC,IAAfD,EAAIE,OAAc,SAAAC,EAAAC,UAAAC,OADhBC,EAAI,IAAAC,MAAAJ,EAAA,EAAAA,EAAA,KAAAK,EAAA,EAAAA,EAAAL,EAAAK,IAAJF,EAAIE,EAAA,GAAAJ,UAAAI,GAEpCT,EAAiBjC,KAAI2C,MAArBV,EAAgB,CAAMW,KAAMV,GAAGW,OAAKL,MCFnC,SAASM,EAAeC,EAAcC,GAC3C,IAAMC,EAAiBF,EAAaG,wBAC9BC,EAAcH,EAAWE,wBACzBE,EAAaJ,EAAWK,aAAe,EAEzCF,EAAYG,OAASF,EAAaH,EAAeK,OACnDP,EAAaQ,UAAYC,KAAKC,IAC5BT,EAAWU,UAAYV,EAAWW,aAAeZ,EAAaM,aAAeD,EAC7EL,EAAaa,cAENT,EAAYU,IAAMT,EAAaH,EAAeY,MACvDd,EAAaQ,UAAYC,KAAKM,IAAId,EAAWU,UAAYN,EAAY,I,ICTrEW,E,iCCHG,SAASC,EAAgBC,EAAKC,GACnC,IAAMC,EAAMF,EAAIG,QAAQF,IACX,IAATC,GAAYF,EAAII,OAAOF,EAAK,GDElC,IAAMG,EAAa,GAcnB,SAASC,EAAKC,GACZ,IAAQC,EAAyCD,EAAzCC,IAAKC,EAAoCF,EAApCE,SAAUC,EAA0BH,EAA1BG,UAAWC,EAAeJ,EAAfI,WAC5BC,EAAQJ,EAAIK,YACZC,EAASN,EAAIpB,aAEfsB,IAAcE,GAASD,IAAeG,IACxCP,EAAKG,UAAYE,EACjBL,EAAKI,WAAaG,EAElBL,EAAS,CAAEG,QAAOE,YAItB,SAASC,EAAgBP,EAAKC,GAC5B,IAAMF,EAAO,CACXC,MACAC,WACAC,UAAW,KACXC,WAAY,MAad,OANAN,EAAWW,KAAKT,GAGhBD,EAAKC,GAtCLT,EAAamB,aAAY,WACvBZ,EAAWa,QAAQZ,KAJG,KAiCR,WACdP,EAAgBM,EAAYE,GACvBF,EAAW/B,SA1BlB6C,cAAcrB,GACdA,EAAa,OAqCR,SAASsB,EAAUZ,EAAKC,GAE7B,IAAMY,EAAkC,IAA1BC,SAASC,aAGnBC,GAAS,EAKPC,GAHiBJ,EACnBN,EACAW,KACqClB,GAJjB,WAAH,OAAgBgB,GAAUf,EAAQ/B,WAAC,EAADL,cAOvD,OAFAmD,GAAS,EAEFC,EEpDT,SAASE,EAAenB,GAEtB,IAAAoB,EAA2CC,iBAAiBrB,GAApDsB,EAAQF,EAARE,SAAUC,EAASH,EAATG,UAAWC,EAASJ,EAATI,UAC7B,MAAO,wBAAwB1B,KAAKwB,EAAWE,EAAYD,GAGtD,SAASE,EAAmCzB,EAAKC,GACtD,IAAMyB,EApBR,SAA2B1B,GAIzB,IAHA,IAAM0B,EAAiB,GACnBC,EAAU3B,EAAI4B,WAEXD,GAAgC,SAArBA,EAAQE,UAAuBF,EAAQG,WAAahB,SAASiB,cACzEZ,EAAeQ,IAAUD,EAAelB,KAAKmB,GACjDA,EAAUA,EAAQC,WAIpB,OAFAF,EAAelB,KAAKwB,QAEbN,EAUgBO,CAAkBjC,GAOzC,OALAgC,OAAOE,iBAAiB,SAAUjC,EAAU,CAAEkC,SAAS,IACvDT,EAAehB,SAAQ,SAAA0B,GACrBA,EAAaF,iBAAiB,SAAUjC,EAAU,CAAEkC,SAAS,OAGxD,WACLH,OAAOK,oBAAoB,SAAUpC,EAAU,CAAEkC,SAAS,IAC1DT,EAAehB,SAAQ,SAAA4B,GACrBA,EAAcD,oBAAoB,SAAUpC,EAAU,CAAEkC,SAAS,QC9BhE,SAASI,EAAMC,GACpB,OAAOA,GAAMA,E,oECDFC,EAAY,WAAH,OAAS3G,OAAOY,OAAO,O,iBCA7C,SAASgG,EAAcrG,GACrB,OAAa,MAATA,GAAkC,WAAjBsG,IAAOtG,IACrBP,OAAO8G,eAAevG,KAAWP,OAAOkB,UAY1C,SAAS6F,EAAWC,EAAQC,GACjC,GAAIL,EAAcK,GAGhB,IAFA,IAAMC,EAAOlH,OAAOkH,KAAKD,GAEhB3H,EAAI,EAAG6H,EAAMD,EAAKlF,OAAQ1C,EAAI6H,EAAK7H,IAblC8H,EAcHJ,EAdQnG,EAcAqG,EAAK5H,GAblBsH,EADkBrG,EAcI0G,EAAOC,EAAK5H,MAZpC8H,EAAIvG,KAASuG,EAAIvG,GAAO,IACxBkG,EAAWK,EAAIvG,GAAMN,IAErB6G,EAAIvG,GAAON,EALf,IAAc6G,EAAKvG,EAAKN,EAkBtB,OAAOyG,E,oBCvBF,SAASK,EAASC,EAAU3D,GACjC,OAAmC,IAA5B2D,EAASzD,QAAQF,GCDnB,SAAS4D,EAAK7D,EAAK8D,EAAWC,GACnC,IAAK,IAAInI,EAAI,EAAG6H,EAAMzD,EAAI1B,OAAQ1C,EAAI6H,EAAK7H,IACzC,GAAIkI,EAAU/H,KAAKgI,EAAK/D,EAAIpE,GAAIA,EAAGoE,GAAM,OAAOA,EAAIpE,GCFjD,SAASoI,EAAUC,EAAMC,GAC9B,GAAID,EAAK3F,SAAW4F,EAAK5F,OAAQ,OAAO,EAExC,IAAK,IAAI1C,EAAI,EAAGA,EAAIqI,EAAK3F,OAAQ1C,IAC/B,GAAIqI,EAAKrI,KAAOsI,EAAKtI,GAAI,OAAO,EAGlC,OAAO,ECNF,IAcMuI,EAAoB,oBACpBC,EAAwB,wBACxBC,EAAe,eAcfC,EACA,EADAA,EAEJ,GAFIA,EAGH,GAHGA,EAIN,GAJMA,EAKL,GALKA,GAMC,GANDA,GAOD,GAPCA,GAQE,GARFA,GASC,GATDA,GAUH,G,8jDCtBV,SAASC,GAAiBC,EAAGC,GAE3B,IADA,IAAI7I,EAAI,IACL,CACD,GAAI4I,EAAEE,MAAQ9I,EAAG,OAAQ,EACzB,GAAI6I,EAAEC,MAAQ9I,EAAG,OAAO,EACxB,GAAI4I,EAAEG,MAAM/I,KAAO6I,EAAEE,MAAM/I,GAAI,OAAO4I,EAAEG,MAAM/I,GAAK6I,EAAEE,MAAM/I,GAC3DA,KAyBJ,SAASgJ,GAAMC,EAAkBC,EAAQC,GACvC,OAAOF,EACHG,IAAYF,EAAQC,GACpBpB,EAASoB,EAAUD,GAGzB,SAASG,GAAgBC,GACvB,OAAOA,EAAIC,SAAqCC,OAAOF,GAGzD,IAAIG,GAAa,EAEF,IACbC,QAAO,WACL,MAAO,CAGLC,SAAU5G,OAId6G,MAAO,CAILC,sBAAuB,CACrBvH,KAAMwH,QACNC,SAAS,GAOXC,kCAAmC,CACjC1H,KAAMwH,QACNC,SAAS,GAMXE,WAAY,CACV3H,KAAMwH,QACNC,SAAS,GAMXG,aAAc,CACZ5H,KAAMwH,QACNC,SAAS,GAMXI,MAAO,CACL7H,KAAMwH,QACNC,SAAS,GAMXK,UAAW,CACT9H,KAAMwH,QACNC,SAAS,GAMXM,oBAAqB,CACnB/H,KAAMwH,QACNC,SAAS,GAMXO,sBAAuB,CACrBhI,KAAMwH,QACNC,SAAS,GAMXQ,wBAAyB,CACvBjI,KAAMwH,QACNC,SAAS,GAMXS,oBAAqB,CACnBlI,KAAMwH,QACNC,SAAS,GAMXU,sBAAuB,CACrBnI,KAAMwH,QACNC,SAAS,GAMXW,iBAAkB,CAChBpI,KAAMwH,QACNC,SAAS,GAQXY,eAAgB,CACdrI,KAAMsI,SACNb,QAASc,KAAS,IAMpBC,iBAAkB,CAChBxI,KAAMwH,QACNC,SAAS,GAMXgB,aAAc,CACZzI,KAAMwH,QACNC,SAAS,GAMXiB,UAAW,CACT1I,KAAMwH,QACNC,SAAS,GAMXkB,aAAc,CACZ3I,KAAMkH,OACNO,QAAS,aAQXmB,cAAe,CACb5I,KAAMwH,QACNC,SAAS,GAMXoB,eAAgB,CACd7I,KAAMkH,OACNO,QAAS,eAOXqB,cAAe,CACb9I,KAAMwH,QACNC,SAAS,GAOXsB,mBAAoB,CAClB/I,KAAMgJ,OACNvB,QAAS,GAQXwB,eAAgB,CACdxB,SAAS,GAMXyB,cAAe,CACblJ,KAAMwH,QACNC,SAAS,GAMX0B,UAAW,CACTnJ,KAAMkH,OACNO,QAAS,KAMX2B,mBAAoB,CAClBpJ,KAAMwH,QACNC,SAAS,GAMX4B,SAAU,CACRrJ,KAAMwH,QACNC,SAAS,GAMX6B,qBAAsB,CACpBtJ,KAAMwH,QACNC,SAAS,GAOV8B,+BAAgC,CAC/BvJ,KAAMwH,QACNC,SAAS,GASX+B,KAAM,CACJxJ,KAAMwH,QACNC,SAAS,GAQVgC,qBAAsB,CACrBzJ,KAAMwH,QACNC,SAAS,GAOXN,WAAY,CAEVM,QAAS,oBAAA/G,OAASyG,KAAY,OAC9BnH,KAAM,CAAEkH,OAAQ8B,SAMlBU,WAAY,CACV1J,KAAMwH,QACNC,SAAS,GAOXkC,MAAO,CACL3J,KAAMgJ,OACNvB,QAASmC,KAOXC,UAAW,CACT7J,KAAMsI,SACNb,QAAS,SAA0BqC,GACjC,MAAO,OAAPpJ,OAAcoJ,EAAK,WAOvBC,YAAa,CACX/J,KAAMkH,OACNO,QAAS,cAOXuC,YAAa,CACXhK,KAAMsI,UAMR2B,UAAW,CACTjK,KAAMM,MACNmH,QAASc,IAAS,CAAE,WAMtB2B,yBAA0B,CACxBlK,KAAMgJ,OACNvB,QAASmC,KAMXO,UAAW,CACTnK,KAAMgJ,OACNvB,QAAS,KAMX2C,SAAU,CACRpK,KAAMwH,QACNC,SAAS,GAMXxJ,KAAM,CACJ+B,KAAMkH,QAMRmD,eAAgB,CACdrK,KAAMkH,OACNO,QAAS,mBAMX6C,iBAAkB,CAChBtK,KAAMwH,QACNC,SAAS,GAMX8C,cAAe,CACbvK,KAAMkH,OACNO,QAAS,yBAMX+C,cAAe,CACbxK,KAAMkH,OACNO,QAAS,uBAOXgD,WAAY,CACVzK,KAAMsI,SACNb,QAASiD,KAeXC,cAAe,CACb3K,KAAMkH,OACNO,QAAS,OACTmD,UAAS,SAACjM,GAER,OAAO8G,EADkB,CAAE,OAAQ,MAAO,SAAU,QAAS,SAC3B9G,KAOtCkM,YAAa,CACX7K,KAAMwH,QACNC,SAAS,GAMXqD,YAAa,CACX9K,KAAMwH,QACNC,SAAS,GAOXsD,QAAS,CACP/K,KAAMM,OAMR0K,YAAa,CACXhL,KAAMkH,OACNO,QAAS,aAMXwD,SAAU,CACRjL,KAAMwH,QACNC,SAAS,GAMXyD,UAAW,CACTlL,KAAMkH,OACNO,QAAS,UAMX0D,WAAY,CACVnL,KAAMkH,OACNO,QAAS,kBAQX2D,uBAAwB,CACtBpL,KAAMwH,QACNC,SAAS,GAMX4D,WAAY,CACVrL,KAAMwH,QACNC,SAAS,GAMX6D,qBAAsB,CACpBtL,KAAMgJ,OACNvB,QAAS,GAMX8D,aAAc,CACZvL,KAAMwH,QACNC,SAAS,GAMX+D,iBAAkB,CAChBxL,KAAMkH,OACNO,QAAS,qBAMXgE,UAAW,CACTzL,KAAMwH,QACNC,SAAS,GAWXiE,YAAa,CACX1L,KAAMkH,OACNO,QD5kBsB,eC6kBtBmD,UAAS,SAACjM,GAER,OAAO8G,EADkB,CD9kBL,eACG,kBACF,gBACG,oBC4kBU9G,KAStCgN,kBAAmB,KAOnBC,wBAAyB,CACvB5L,KAAMkH,OACNO,QAAS,MAWXoE,YAAa,CACX7L,KAAMkH,OACNO,QD7lBwB,iBC8lBxBmD,UAAS,SAACjM,GAER,OAAO8G,EADkB,CD/lBH,iBACT,QACA,SC8lBqB9G,KAOtCmN,SAAU,CACR9L,KAAMgJ,OACNvB,QAAS,GASXsE,kBAAmB,CACjB/L,KAAMwH,QACNC,SAAS,GAUX9I,MAAO,KAUPqN,gBAAiB,CACfhM,KAAMkH,OACNO,QD/oByB,kBCgpBzBmD,UAAS,SAACjM,GAER,OAAO8G,EADkB,CDlpBd,MACY,kBACF,gBACS,0BCgpBI9G,KAWtCsN,YAAa,CACXjM,KAAMkH,OACNO,QAAS,MAMXyE,OAAQ,CACNlM,KAAM,CAAEgJ,OAAQ9B,QAChBO,QAAS,MAIb0E,KAAI,WACF,MAAO,CACLC,QAAS,CAEPC,WAAW,EAEXC,YAAa,IAGfC,KAAM,CAEJC,QAAQ,EAERC,QAAS,KAETC,mBAAoB,EAEpBC,UAAW,UAGbC,OAAQ,CAENC,kBAAmB,GAEnBC,QAAS/H,IAETgI,gBAAiBhI,IAEjBiI,gBAAiBvM,KAAKwM,iCAGtBC,gBAAiBnI,KAInBoI,kBA/rBG,CACLC,UAAU,EACVC,WAAW,EACXC,aAAc,IA8rBZC,YAAa,CAEXC,QAAQ,EAERC,WAAW,EAEXC,SAAU3I,KAIZ4I,aAAc5I,MAIlB6I,SAAU,CAMRC,cAAa,WACX,OAAOpN,KAAKmM,OAAOI,gBAAgBc,IAAIrN,KAAKsN,UAM9CC,cAAa,WAAG,IACVA,EADUC,EAAA,KAId,GAAIxN,KAAKyN,QAAUzN,KAAK+I,MAAQ/I,KAAK2I,oBDhvBxB,QCgvB8C3I,KAAKuL,gBAC9DgC,EAAgBvN,KAAKmM,OAAOI,gBAAgBmB,aACvC,GDjvBkB,oBCivBd1N,KAAKuL,gBACdgC,EAAgBvN,KAAKmM,OAAOI,gBAAgBoB,QAAO,SAAAC,GACjD,IAAMC,EAAOL,EAAKF,QAAQM,GAC1B,QAAIC,EAAKC,aACDN,EAAKO,WAAWF,EAAKpK,oBAE1B,GDtvBgB,kBCsvBZzD,KAAKuL,gBACdgC,EAAgBvN,KAAKmM,OAAOI,gBAAgBoB,QAAO,SAAAC,GACjD,IAAMC,EAAOL,EAAKF,QAAQM,GAC1B,QAAIC,EAAKG,QACuB,IAAzBH,EAAKI,SAAStO,eAElB,GD3vByB,2BC2vBrBK,KAAKuL,gBAA4C,KAAA2C,EACpDC,EAAuB,GAC7BZ,EAAgBvN,KAAKmM,OAAOI,gBAAgBmB,QAC5C1N,KAAKoN,cAAc7K,SAAQ,SAAA6L,GACzBA,EAAaC,UAAU9L,SAAQ,SAAA+L,GACzBtJ,EAASmJ,EAAsBG,EAASV,KACxC5I,EAASuI,EAAee,EAASV,KACrCO,EAAqB9L,KAAKiM,EAASV,WAGvCM,EAAAX,GAAclL,KAAItC,MAAAmO,EAAIC,GASxB,MD1wBe,UCowBXnO,KAAKoL,YACPmC,EAAcgB,MAAK,SAAC1I,EAAGC,GAAC,OAnwBhC,SAA0BD,EAAGC,GAC3B,OAAOD,EAAEE,QAAUD,EAAEC,MACjBH,GAAiBC,EAAGC,GACpBD,EAAEE,MAAQD,EAAEC,MAgwBmByI,CAAiBhB,EAAKF,QAAQzH,GAAI2H,EAAKF,QAAQxH,ODpwB/D,UCqwBJ9F,KAAKoL,aACdmC,EAAcgB,MAAK,SAAC1I,EAAGC,GAAC,OAAKF,GAAiB4H,EAAKF,QAAQzH,GAAI2H,EAAKF,QAAQxH,OAGvEyH,GAMTkB,SAAQ,WACN,OAAOzO,KAAKuN,cAAc5N,OAAS,GAMrC8N,OAAM,WACJ,OAAQzN,KAAK2J,UAUf+E,iBAAgB,WAAG,IAAAC,EAAA,KACXD,EAAmB,GAYzB,OAVA1O,KAAK4O,yBAAwB,SAAAf,GAK3B,GAJKc,EAAK7B,YAAYC,SAAU4B,EAAKE,qCAAqChB,IACxEa,EAAiBrM,KAAKwL,EAAKD,IAGzBC,EAAKiB,WAAaH,EAAKI,aAAalB,GACtC,OAAO,KAIJa,GAMTM,kBAAiB,WACf,OAAwC,IAAjChP,KAAK0O,iBAAiB/O,QAM/BsP,0BAAyB,WAIvB,MAAyC,kBAA3BjP,KAAKkL,kBACflL,KAAKkL,kBACLlL,KAAKgL,WAMXkE,eAAc,WACZ,OAAOlP,KAAKmM,OAAOC,kBAAkB+C,MAAK,SAAAC,GAAQ,OAAIA,EAASN,aAEjEO,qBAAoB,WAClB,OAAOrP,KAAK8M,YAAYC,QAAU/M,KAAKgJ,uBAK3CsG,MAAO,CACLpI,WAAU,SAACqI,GACLA,EAAUvP,KAAKwP,WACdxP,KAAKyP,aAGZ1H,iBAAgB,WACd/H,KAAK0P,cAGP9G,SAAQ,SAAC2G,GAEHA,GAAYvP,KAAK8L,KAAKC,OAAQ/L,KAAKyP,YAC7BF,GAAavP,KAAK8L,KAAKC,SAAU/L,KAAKkH,YAAYlH,KAAKwP,YAGnEzG,KAAI,WACF/I,KAAK0P,cAGPnC,cAAa,SAACgC,EAAUI,GACHtK,EAAUkK,EAAUI,IAIvB3P,KAAK4P,MAAM,QAAS5P,KAAK6P,WAAY7P,KAAK8P,kBAG5DtG,UAAS,WACPxJ,KAAK0P,cAGP/F,SAAQ,SAAC4F,GAIHA,GAAUvP,KAAK+P,oBAGrBzF,QAAS,CACP0F,QAAO,WACDhQ,KAAKoH,QAETpH,KAAK0P,aACL1P,KAAK0M,kBAAkBC,SAAW9M,MAAMoQ,QAAQjQ,KAAKsK,WAEvD4F,MAAM,EACNC,WAAW,GAGb,sBAAqB,WACfnQ,KAAKoH,MACPpH,KAAKoQ,qBAELpQ,KAAKqQ,oBAGPrQ,KAAK4P,MAAM,gBAAiB5P,KAAK2L,QAAQE,YAAa7L,KAAK8P,kBAG7DxE,kBAAiB,WACftL,KAAK0P,cAGPxR,MAAK,WACH,IAAMoS,EAAmBtQ,KAAKwM,iCACXnH,EAAUiL,EAAkBtQ,KAAKuN,iBAElDvN,KAAKuQ,mBAAmBD,GACxBtQ,KAAKwQ,+BAEPxQ,KAAKyQ,iCAITC,QAAS,CACPC,YAAW,WAAG,IAAAC,EAAA,KAoBZ,GAnBA1R,GACE,kBAAM0R,EAAKxJ,OAAQwJ,EAAKhG,cACxB,iBAAM,yEAGY,MAAhB5K,KAAKsK,SAAoBtK,KAAKuJ,aAChCrK,GACE,kBAAM,KACN,iBAAM,oFAINc,KAAK+I,MACP7J,GACE,kBAAM0R,EAAKjH,YACX,iBAAM,sEAIL3J,KAAK+I,KAAM,CACI,CAChB,sBACA,wBACA,wBACA,2BAGQxG,SAAQ,SAAAsO,GAChB3R,GACE,kBAAO0R,EAAKC,MACZ,qBAAA5Q,OAAU4Q,EAAQ,wCAM1BC,WAAU,WACR9Q,KAAK+Q,eAAgB,GAGvBrB,WAAU,WACR,IAAMpF,EAAUtK,KAAKoH,MACjBpH,KAAKgR,uBAAuB1G,QAC5BtK,KAAKsK,QAET,GAAIzK,MAAMoQ,QAAQ3F,GAAU,CAE1B,IAAM2G,EAAcjR,KAAKmM,OAAOE,QAChCrM,KAAKmM,OAAOE,QAAU/H,IACtBtE,KAAKkR,wBAAwBD,GAC7BjR,KAAKmM,OAAOC,kBAAoBpM,KAAKmR,UD1+Bf,KC0+ByC7G,EAAS2G,GAOxEjR,KAAKuQ,mBAAmBvQ,KAAKuN,oBAE7BvN,KAAKmM,OAAOC,kBAAoB,GAElCpM,KAAKwQ,8BACLxQ,KAAKoR,UAAUpR,KAAKyQ,+BAGtBX,cAAa,WACX,OAA0B,MAAnB9P,KAAK0G,WAAqB1G,KAAK4N,GAAK5N,KAAK0G,YAGlDmJ,SAAQ,WAAG,IAAAwB,EAAA,KACT,GAAyB,OAArBrR,KAAKwL,YACP,OAAOxL,KAAK2J,SACR3J,KAAKuN,cAAcG,QACnB1N,KAAKuN,cAAc,GAGzB,IAAM+D,EAAWtR,KAAKuN,cAAcF,KAAI,SAAAO,GAAE,OAAIyD,EAAK/D,QAAQM,GAAI2D,OAC/D,OAAOvR,KAAK2J,SAAW2H,EAAWA,EAAS,IAG7ChE,QAAO,SAACkE,GAMN,OALAtS,GACE,kBAAgB,MAAVsS,KACN,qCAAAvR,OAA0BuR,MAGd,MAAVA,EAAuB,KAEpBA,KAAUxR,KAAKmM,OAAOE,QACzBrM,KAAKmM,OAAOE,QAAQmF,GACpBxR,KAAKyR,mBAAmBD,IAG9BC,mBAAkB,SAAC7D,GAKjB,IAAM2D,EAAMvR,KAAK0R,qBAAqB9D,GAEhC+D,EAAe,CACnB/D,KACAgE,MAHY5R,KAAK6R,mBAAmBN,GAAKK,OAAS,GAAJ3R,OAAO2N,EAAE,cAIvDS,UAAW,GACX5K,WDhiCsB,KCiiCtBqO,gBAAgB,EAChBhE,YAAY,EACZE,QAAQ,EACRc,UAAU,EACViD,YAAY,EACZC,OAAO,EACPhM,MAAO,EAAG,GACVD,MAAO,EACPwL,OAGF,OAAOvR,KAAKiS,KAAKjS,KAAKmM,OAAOE,QAASuB,EAAI+D,IAG5CnF,+BAA8B,WAAG,IAAA0F,EAAA,KAC/B,OAAkB,MAAdlS,KAAK9B,MAAsB,GAEN,OAArB8B,KAAKwL,YACAxL,KAAK2J,SACR3J,KAAK9B,MAAMwP,QACX,CAAE1N,KAAK9B,QAGL8B,KAAK2J,SAAW3J,KAAK9B,MAAQ,CAAE8B,KAAK9B,QACzCmP,KAAI,SAAAQ,GAAI,OAAIqE,EAAKL,mBAAmBhE,MACpCR,KAAI,SAAAQ,GAAI,OAAIA,EAAKD,OAGtB8D,qBAAoB,SAAC9D,GAAI,IAAAuE,EAAA,KACjBC,EAAc,CAAExE,MAEtB,MAAyB,OAArB5N,KAAKwL,YACA4G,EAMOlN,EAHGlF,KAAK2J,SACpB9J,MAAMoQ,QAAQjQ,KAAK9B,OAAS8B,KAAK9B,MAAQ,GACzC8B,KAAK9B,MAAQ,CAAE8B,KAAK9B,OAAU,IAGhC,SAAA2P,GAAI,OAAIA,GAAQsE,EAAKN,mBAAmBhE,GAAMD,KAAOA,MAGrCwE,GAGpB7B,mBAAkB,SAAC8B,GAAuB,IAAAC,EAAA,KACpCC,EAAsB,GAG1B,GAAIvS,KAAKyN,QAAUzN,KAAK+I,MAAQ/I,KAAK2I,oBDhkCxB,QCgkC8C3I,KAAKuL,gBAC9DgH,EAAsBF,OACjB,GDjkCkB,oBCikCdrS,KAAKuL,gBACd8G,EAAsB9P,SAAQ,SAAAiP,GAC5Be,EAAoBlQ,KAAKmP,GACzB,IAAM3D,EAAOyE,EAAKhF,QAAQkE,GACtB3D,EAAKiB,UAAUwD,EAAKE,uBAAuB3E,GAAM,SAAA4E,GACnDF,EAAoBlQ,KAAKoQ,EAAW7E,eAGnC,GDxkCgB,kBCwkCZ5N,KAAKuL,gBAGd,IAFA,IAAM8B,EAAM/I,IACNoO,EAAQL,EAAsB3E,QAC7BgF,EAAM/S,QAAQ,CACnB,IAAM6R,EAASkB,EAAMC,QACf9E,EAAO7N,KAAKsN,QAAQkE,GAC1Be,EAAoBlQ,KAAKmP,GACrB3D,EAAKC,aACHD,EAAKpK,WAAWmK,MAAMP,IAAMA,EAAIQ,EAAKpK,WAAWmK,IAAMC,EAAKpK,WAAWwK,SAAStO,QACnD,KAA5B0N,EAAIQ,EAAKpK,WAAWmK,KAAW8E,EAAMrQ,KAAKwL,EAAKpK,WAAWmK,UAE7D,GDllCyB,2BCklCrB5N,KAAKuL,gBAMd,IALA,IAAM8B,EAAM/I,IACNoO,EAAQL,EAAsB1E,QAAO,SAAA6D,GACzC,IAAM3D,EAAOyE,EAAKhF,QAAQkE,GAC1B,OAAO3D,EAAKG,QAAmC,IAAzBH,EAAKI,SAAStO,UAE/B+S,EAAM/S,QAAQ,CACnB,IAAM6R,EAASkB,EAAMC,QACf9E,EAAO7N,KAAKsN,QAAQkE,GAC1Be,EAAoBlQ,KAAKmP,GACrB3D,EAAKC,aACHD,EAAKpK,WAAWmK,MAAMP,IAAMA,EAAIQ,EAAKpK,WAAWmK,IAAMC,EAAKpK,WAAWwK,SAAStO,QACnD,KAA5B0N,EAAIQ,EAAKpK,WAAWmK,KAAW8E,EAAMrQ,KAAKwL,EAAKpK,WAAWmK,KAIjDvI,EAAUrF,KAAKmM,OAAOI,gBAAiBgG,KAI1CvS,KAAKmM,OAAOI,gBAAkBgG,GAE9CvS,KAAK+P,oBAGPmB,wBAAuB,SAACD,GAAa,IAAA2B,EAAA,KAGnC5S,KAAKmM,OAAOI,gBAAgBhK,SAAQ,SAAAqL,GAClC,GAAKqD,EAAYrD,GAAjB,CACA,IAAMC,EAAIgF,MAAA,GACL5B,EAAYrD,IAAG,IAClBkE,gBAAgB,IAElBc,EAAKX,KAAKW,EAAKzG,OAAOE,QAASuB,EAAIC,QAIvCE,WAAU,SAACF,GAET,OAAgD,IAAzC7N,KAAKmM,OAAOM,gBAAgBoB,EAAKD,KAG1C4E,uBAAsB,SAAC/O,EAAYqP,GAEjC,GAAKrP,EAAWqL,SAEhB,IADA,IAAM4D,EAAQjP,EAAWwK,SAASP,QAC3BgF,EAAM/S,QAAQ,CACnB,IAAMoT,EAAWL,EAAM,GACnBK,EAASjE,UAAU4D,EAAMrQ,KAAItC,MAAV2S,EAAKM,IAASD,EAAS9E,WAC9C6E,EAASC,GACTL,EAAMC,UAIVM,uBAAsB,SAACxP,EAAYqP,GAAU,IAAAI,EAAA,KACtCzP,EAAWqL,UAChBrL,EAAWwK,SAAS1L,SAAQ,SAAA4Q,GAE1BD,EAAKD,uBAAuBE,EAAOL,GACnCA,EAASK,OAIbC,oBAAmB,SAACN,GAAU,IAAAO,EAAA,KAC5BrT,KAAKmM,OAAOC,kBAAkB7J,SAAQ,SAAA6M,GAEpCiE,EAAKJ,uBAAuB7D,EAAU0D,GACtCA,EAAS1D,OAIbR,wBAAuB,SAACkE,IACT,SAAPQ,EAAO7P,GACXA,EAAWwK,SAAS1L,SAAQ,SAAA4Q,IACF,IAApBL,EAASK,IAAoBA,EAAMrE,UACrCwE,EAAKH,MAOXG,CAAK,CAAErF,SAAUjO,KAAKmM,OAAOC,qBAG/BmH,wBAAuB,SAACC,GAClBA,EACF7Q,SAASoB,iBAAiB,YAAa/D,KAAKyT,oBAAoB,GAEhE9Q,SAASuB,oBAAoB,YAAalE,KAAKyT,oBAAoB,IAIvEC,kBAAiB,WACf,OAAO1T,KAAK2T,MAAMC,QAAQD,MAAM,oBAGlCE,SAAQ,WACN,OAAO7T,KAAK0T,oBAAoBC,MAAMG,OAGxCC,WAAU,WACR/T,KAAK6T,WAAWG,SAGlBC,UAAS,WACPjU,KAAK6T,WAAWK,QAGlBC,gBAAiB/U,GAAY,SAAyBE,IACpDA,EAAI8U,iBACJ9U,EAAI+U,kBAEArU,KAAK4I,YAEyB5I,KAAK0T,oBAAoB7R,IAAIyS,SAAShV,EAAIqF,UAC1C3E,KAAK8L,KAAKC,SAAW/L,KAAKoK,aAAepK,KAAK2L,QAAQC,YACtF5L,KAAKwP,WAGHxP,KAAK+Q,cACP/Q,KAAKiU,YAGLjU,KAAK+T,aAGP/T,KAAK8Q,iBAGP2C,mBAAkB,SAACnU,GAEbU,KAAK2T,MAAMY,UAAYvU,KAAK2T,MAAMY,QAAQD,SAAShV,EAAIqF,UACzD3E,KAAKiU,YACLjU,KAAKyP,cAITY,kBAAiB,WAAG,IAAAmE,EAAA,KACV3I,EAAgB7L,KAAK2L,QAArBE,YACF4I,EAAO,WAAH,OAASD,EAAKE,qCAAoC,IAE5D,IAAK7I,GAAeA,EAAYlM,OAASK,KAAK6K,qBAG5C,OADA7K,KAAK8M,YAAYC,QAAS,EACnB0H,IAITzU,KAAK8M,YAAYC,QAAS,EAG1B/M,KAAK8M,YAAYE,WAAY,EAC7BhN,KAAKoT,qBAAoB,SAAAvF,GACnBA,EAAKiB,WACPjB,EAAK8G,oBAAqB,EAC1B9G,EAAK+G,yBAA0B,EAC/B/G,EAAKgH,WAAY,EACjBhH,EAAKiH,uBAAwB,EAC7BN,EAAKvC,KAAKuC,EAAK1H,YAAYG,SAAUY,EAAKD,GAAEmH,gBAAA,GDhwC1B,eCiwCA,GDhwCG,kBCiwCA,GDhwCF,gBCiwCA,GDhwCG,mBCiwCA,QAK1B,IAAMC,EAAwBnJ,EAAYoJ,OAAOC,oBAC3CC,EAAmBH,EAAsBI,QAAQ,OAAQ,KAAKC,MAAM,KACtE5L,EAA2BzJ,KAAKyJ,yBACpCzJ,KAAKoT,qBAAoB,SAAAvF,GACnB2G,EAAK1J,cAAgBqK,EAAiBxV,OAAS,EACjDkO,EAAKgH,UAAYM,EAAiBG,OAAM,SAAAC,GAAW,OACjDtP,IAAM,EAAOsP,EAAa1H,EAAK2H,sBAGjC3H,EAAKgH,UAAYL,EAAKhL,UAAU2F,MAAK,SAAAsG,GAAQ,OAC3CxP,IAAOuO,EAAK3L,qBAAsBmM,EAAuBnH,EAAK6H,WAAWD,OAIzE5H,EAAKgH,YACPL,EAAK1H,YAAYE,WAAY,EAC7Ba,EAAKQ,UAAU9L,SAAQ,SAAA+L,GAAQ,OAAIkG,EAAK1H,YAAYG,SAASqB,EAASV,IAAmB,qBACrFC,EAAKG,QAAQH,EAAKQ,UAAU9L,SAAQ,SAAA+L,GAAQ,OAAIkG,EAAK1H,YAAYG,SAASqB,EAASV,IAAoB,sBDlyCvF,OCmyChBC,EAAKpK,aACP+Q,EAAK1H,YAAYG,SAASY,EAAKpK,WAAWmK,IAAgB,cAAK,EAE3DC,EAAKG,SAAQwG,EAAK1H,YAAYG,SAASY,EAAKpK,WAAWmK,IAAiB,eAAK,MAKlFC,EAAKgH,WAAchH,EAAKiB,UAAYjB,EAAKiH,wBD3yCtB,OC4yCpBjH,EAAKpK,aAEA+Q,EAAK3K,mBACJgE,EAAKgH,WAAapL,GACpBoE,EAAKpK,WAAWkR,oBAAqB,EACjClL,IAA6BN,OAC7BM,GAEKoE,EAAKiB,UAAYjB,EAAK8G,qBAC/B9G,EAAKpK,WAAWkR,oBAAqB,IAIzC9G,EAAKpK,WAAWqR,uBAAwB,MAI5CL,KAGFrE,mBAAkB,WAAG,IAAAuF,EAAA,KACX9J,EAAgB7L,KAAK2L,QAArBE,YACF+J,EAAQ5V,KAAKgR,uBACbyD,EAAO,WACXkB,EAAKjG,aACLiG,EAAKjB,qCAAoC,IAG3C,IAAqB,KAAhB7I,GAAsB7L,KAAKgI,eAAiB4N,EAAMjJ,SACrD,OAAO8H,IAGTzU,KAAK6V,oBAAoB,CACvBC,OAAQpQ,EACR9F,KAAM,CAAEiM,eACRkK,UAAS,WACP,OAAOH,EAAMhJ,WAEfoJ,MAAO,WACLJ,EAAMhJ,WAAY,EAClBgJ,EAAMjJ,UAAW,EACjBiJ,EAAM/I,aAAe,IAEvBoJ,QAAS,SAAA3L,GACPsL,EAAMjJ,UAAW,EACjBiJ,EAAMtL,QAAUA,EAGZqL,EAAKhK,QAAQE,cAAgBA,GAAa4I,KAEhDyB,KAAM,SAAA3P,GACJqP,EAAM/I,aAAevG,GAAgBC,IAEvC4P,IAAK,WACHP,EAAMhJ,WAAY,MAKxBoE,qBAAoB,WAAG,IAAAoF,EAAA,KACbvK,EAAgB7L,KAAK2L,QAArBE,YACF+J,EAAQ5V,KAAKkN,aAAarB,IAAYgH,MAAA,GAt0CzC,CACLlG,UAAU,EACVC,WAAW,EACXC,aAAc,KAo0CmB,IAC7BvC,QAAS,KAaX,GATAtK,KAAKqW,QACH,kBAAMT,EAAMtL,WACZ,WAEM8L,EAAKzK,QAAQE,cAAgBA,GAAauK,EAAK1G,eAErD,CAAEQ,MAAM,IAGU,KAAhBrE,EAAoB,CACtB,GAAIhM,MAAMoQ,QAAQjQ,KAAKwI,gBAGrB,OAFAoN,EAAMtL,QAAUtK,KAAKwI,eACrBoN,EAAMjJ,UAAW,EACViJ,EACF,IAA4B,IAAxB5V,KAAKwI,eAEd,OADAoN,EAAMjJ,UAAW,EACViJ,EAQX,OAJK5V,KAAKkN,aAAarB,IACrB7L,KAAKiS,KAAKjS,KAAKkN,aAAcrB,EAAa+J,GAGrCA,GAGT7G,aAAY,SAAClB,GACX,OAAO7N,KAAK8M,YAAYC,OAASc,EAAK8G,mBAAqB9G,EAAKyI,YAGlEzH,qCAAoC,SAAChB,GAEnC,QAAIA,EAAKgH,eAELhH,EAAKiB,WAAYjB,EAAKiH,uBAA0B9U,KAAKgJ,yBAGpD6E,EAAKC,aAAcD,EAAKpK,WAAWmR,2BAK1C2B,uBAAsB,SAAC1I,GACrB,QAAI7N,KAAK8M,YAAYC,SAAW/M,KAAK6O,qCAAqChB,KAM5E2I,WAAU,WACR,OAAOxW,KAAK2T,MAAMC,QAAQ/R,KAG5B4U,QAAO,WACL,IACMC,GADM1W,KAAKmH,aAAenH,KAAK2T,MAAMgD,OAAOC,aAAe5W,MAC/C2T,MAAM7H,KAAK6H,MAAM7H,KACnC,OAAO4K,GAA4B,aAAnBA,EAAMhT,SAA0BgT,EAAQ,MAG1DG,4BAA2B,SAAChJ,GAAqB,IAAAiJ,EAAA,KAAfC,IAAMrX,UAAAC,OAAA,QAAAqX,IAAAtX,UAAA,KAAAA,UAAA,GAChCuX,EAAOjX,KAAK8L,KAAKE,QAQvB,GAPY,MAARiL,GAAgBA,KAAQjX,KAAKmM,OAAOE,UACtCrM,KAAKmM,OAAOE,QAAQ4K,GAAMC,eAAgB,GAG5ClX,KAAK8L,KAAKE,QAAU6B,EAAKD,GACzBC,EAAKqJ,eAAgB,EAEjBlX,KAAK8L,KAAKC,QAAUgL,EAAQ,CAC9B,IAAMI,EAAiB,WACrB,IAAMT,EAAQI,EAAKL,UACbW,EAAUV,EAAMW,cAAc,oCAADpX,OAAqC4N,EAAKD,GAAE,OAC3EwJ,GAASlX,EAAewW,EAAOU,IAIjCpX,KAAKyW,UACPU,IAGAnX,KAAKoR,UAAU+F,KAKrBzC,oCAAmC,WAAqB,IAApB4C,EAAU5X,UAAAC,OAAA,QAAAqX,IAAAtX,UAAA,IAAAA,UAAA,GACpCsM,EAAYhM,KAAK8L,KAAjBE,SAGNsL,GAAyB,MAAXtL,GACZA,KAAWhM,KAAKmM,OAAOE,SACxBrM,KAAKuW,uBAAuBvW,KAAKsN,QAAQtB,KAE1ChM,KAAKuX,wBAITA,qBAAoB,WAClB,GAAKvX,KAAKgP,kBAAV,CAEA,IAAMwI,EAAQxX,KAAK0O,iBAAiB,GACpC1O,KAAK6W,4BAA4B7W,KAAKsN,QAAQkK,MAGhDC,oBAAmB,WACjB,GAAKzX,KAAKgP,kBAAV,CAEA,IAAMiI,EAAOjX,KAAK0O,iBAAiBlN,QAAQxB,KAAK8L,KAAKE,SAAW,EAChE,IAAc,IAAViL,EAAa,OAAOjX,KAAK0X,sBAC7B1X,KAAK6W,4BAA4B7W,KAAKsN,QAAQtN,KAAK0O,iBAAiBuI,OAGtEU,oBAAmB,WACjB,GAAK3X,KAAKgP,kBAAV,CAEA,IAAM4I,EAAO5X,KAAK0O,iBAAiBlN,QAAQxB,KAAK8L,KAAKE,SAAW,EAChE,GAAI4L,IAAS5X,KAAK0O,iBAAiB/O,OAAQ,OAAOK,KAAKuX,uBACvDvX,KAAK6W,4BAA4B7W,KAAKsN,QAAQtN,KAAK0O,iBAAiBkJ,OAGtEF,oBAAmB,WACjB,GAAK1X,KAAKgP,kBAAV,CAEA,IAAM6I,EAAOC,IAAQ9X,KAAK0O,kBAC1B1O,KAAK6W,4BAA4B7W,KAAKsN,QAAQuK,MAGhDE,iBAAgB,WACd/X,KAAK2L,QAAQE,YAAc,IAG7B4D,UAAS,YACFzP,KAAK8L,KAAKC,SAAY/L,KAAK4I,UAAY5I,KAAKkH,aACjDlH,KAAKgY,yBACLhY,KAAK8L,KAAKC,QAAS,EACnB/L,KAAKuT,yBAAwB,GAC7BvT,KAAK+X,mBACL/X,KAAK4P,MAAM,QAAS5P,KAAK6P,WAAY7P,KAAK8P,mBAG5CN,SAAQ,WACFxP,KAAK4I,UAAY5I,KAAK8L,KAAKC,SAC/B/L,KAAK8L,KAAKC,QAAS,EACnB/L,KAAKoR,UAAUpR,KAAK0U,qCACpB1U,KAAKoR,UAAUpR,KAAKiY,2BACfjY,KAAKsK,SAAYtK,KAAKoH,OAAOpH,KAAKkY,kBACvClY,KAAKuT,yBAAwB,GACzBvT,KAAK2K,wBACP3K,KAAKoR,UAAUpR,KAAKmY,oBAEtBnY,KAAK4P,MAAM,OAAQ5P,KAAK8P,mBAG1BsI,WAAU,WACJpY,KAAK8L,KAAKC,OACZ/L,KAAKyP,YAELzP,KAAKwP,YAIT6I,eAAc,SAACxK,GACb,IAAIyK,EAEAtY,KAAK8M,YAAYC,QACnBuL,EAAYzK,EAAK8G,oBAAsB9G,EAAK8G,sBAC7B9G,EAAK+G,yBAA0B,GAE9C0D,EAAYzK,EAAKyI,YAAczI,EAAKyI,WAGlCgC,IAAczK,EAAK0K,eAAe5L,UACpC3M,KAAKwY,oBAAoB3K,IAI7BkC,iBAAgB,WAAG,IAAA0I,EAAA,KACXhM,EAAkBnI,IACxBtE,KAAKmM,OAAOI,gBAAgBhK,SAAQ,SAAAmW,GAClCjM,EAAgBiM,IAAkB,KAEpC1Y,KAAKmM,OAAOM,gBAAkBA,EAE9B,IAAMH,EAAkBhI,IACpBtE,KAAK2J,WACP3J,KAAK4O,yBAAwB,SAAAf,GAC3BvB,EAAgBuB,EAAKD,IDviDN,KC0iDjB5N,KAAKoN,cAAc7K,SAAQ,SAAA6L,GACzB9B,EAAgB8B,EAAaR,IDziDhB,EC2iDR6K,EAAK1P,MAAS0P,EAAK9P,oBACtByF,EAAaC,UAAU9L,SAAQ,SAAAoW,GACxBF,EAAK1K,WAAW4K,KACnBrM,EAAgBqM,EAAa/K,ID/iDhB,UCqjDvB5N,KAAKmM,OAAOG,gBAAkBA,GAGhCuF,mBAAkB,SAACN,GACjB,OAAAsB,MAAA,GACKtB,GACAvR,KAAKgK,WAAWuH,EAAKvR,KAAK8P,mBAIjCqB,UAAS,SAAC1N,EAAYmV,EAAO3H,GAAa,IAAA4H,EAAA,KACpCzM,EAAoBwM,EACrBvL,KAAI,SAAAQ,GAAI,MAAI,CAAEgL,EAAKhH,mBAAmBhE,GAAOA,MAC7CR,KAAI,SAAAyL,EAAgB9S,GAAU,IAAA+S,EAAAC,IAAAF,EAAA,GAAvBjL,EAAIkL,EAAA,GAAExH,EAAGwH,EAAA,GACfF,EAAKI,iBAAiBpL,GACtBgL,EAAKK,gBAAgBrL,GAErB,IAAQD,EAA2CC,EAA3CD,GAAIgE,EAAuC/D,EAAvC+D,MAAO3D,EAAgCJ,EAAhCI,SAAUkL,EAAsBtL,EAAtBsL,kBACvBrL,ED3kDc,OC2kDDrK,EACbsC,EAAQ+H,EAAa,EAAIrK,EAAWsC,MAAQ,EAC5C+I,EAAWjP,MAAMoQ,QAAQhC,IAA0B,OAAbA,EACtCD,GAAUc,EACViD,EAAa8G,EAAKvN,oBAAsBuC,EAAKkE,aAAelE,EAAKkE,aAAgB8G,EAAK9P,OAAS+E,GAAcrK,EAAWsO,WACxHC,IAAUnE,EAAKmE,MACf0D,EAAamD,EAAKrP,UAAU4P,QAAO,SAACnC,EAAMzY,GAAG,OAAAqU,MAAA,GAC9CoE,GAAI,GAAAlC,IAAA,GACNvW,GAziDqBN,EAyiDU2P,EAAKrP,GAxiD1B,iBAAVN,EAA2BA,EACjB,iBAAVA,GAAuBkG,EAAMlG,GAEjC,GAFgDA,EAAQ,IAuiDVgX,sBAziDvD,IAAkChX,IA0iDpB,IACEsX,EAAoB1H,EACtB4H,EAAW9D,MACXnO,EAAW+R,kBAAoB,IAAME,EAAW9D,MAE9CyH,EAAaR,EAAK5G,KAAK4G,EAAK1M,OAAOE,QAASuB,EAAItJ,KAkBtD,GAjBAuU,EAAK5G,KAAKoH,EAAY,KAAMzL,GAC5BiL,EAAK5G,KAAKoH,EAAY,QAASzH,GAC/BiH,EAAK5G,KAAKoH,EAAY,QAAStT,GAC/B8S,EAAK5G,KAAKoH,EAAY,YAAavL,EAAa,GAAK,CAAErK,GAAaxD,OAAOwD,EAAW4K,YACtFwK,EAAK5G,KAAKoH,EAAY,SAAUvL,EAAa,GAAKrK,EAAWuC,OAAO/F,OAAO+F,IAC3E6S,EAAK5G,KAAKoH,EAAY,aAAc5V,GACpCoV,EAAK5G,KAAKoH,EAAY,aAAc3D,GACpCmD,EAAK5G,KAAKoH,EAAY,oBAAqB7D,GAC3CqD,EAAK5G,KAAKoH,EAAY,aAActH,GACpC8G,EAAK5G,KAAKoH,EAAY,QAASrH,GAC/B6G,EAAK5G,KAAKoH,EAAY,aAAa,GACnCR,EAAK5G,KAAKoH,EAAY,iBAAiB,GACvCR,EAAK5G,KAAKoH,EAAY,WAAYvK,GAClC+J,EAAK5G,KAAKoH,EAAY,SAAUrL,GAChC6K,EAAK5G,KAAKoH,EAAY,aAAcvL,GACpC+K,EAAK5G,KAAKoH,EAAY,MAAO9H,GAEzBzC,EAAU,CACZ,IAAMnC,EAAW9M,MAAMoQ,QAAQhC,GAE/B4K,EAAK5G,KAAKoH,EAAY,iBAAgBxG,MAAA,GA3kDzC,CACLlG,UAAU,EACVC,WAAW,EACXC,aAAc,KAykDyB,IAC7BF,cAEFkM,EAAK5G,KAAKoH,EAAY,aAA2C,kBAAtBF,EACvCA,EACApT,EAAQ8S,EAAKvQ,oBACjBuQ,EAAK5G,KAAKoH,EAAY,yBAAyB,GAC/CR,EAAK5G,KAAKoH,EAAY,0BAA0B,GAChDR,EAAK5G,KAAKoH,EAAY,sBAAsB,GAC5CR,EAAK5G,KAAKoH,EAAY,2BAA2B,GACjDR,EAAK5G,KAAKoH,EAAY,QAAOtE,gBAAA,GDjnDb,eCknDE,GDjnDC,kBCknDE,GDjnDJ,gBCknDE,GDjnDC,mBCknDE,IAEtB8D,EAAK5G,KAAKoH,EAAY,WAAY1M,EAC9BkM,EAAK1H,UAAUkI,EAAYpL,EAAUgD,GACrC,KAEsB,IAAtBkI,GAA4BE,EAAWhL,UAAU9L,SAAQ,SAAA+L,GAC3DA,EAASgI,YAAa,KAGnB3J,GAAwC,mBAArBkM,EAAKtP,aAKjBoD,GAAY0M,EAAW/C,YACjCuC,EAAKL,oBAAoBa,GALzBna,GACE,kBAAM,KACN,iBAAM,yFAgBZ,GATAma,EAAWhL,UAAU9L,SAAQ,SAAA+L,GAAQ,OAAIA,EAASjF,MAAqB,qBACnE2E,GAAQqL,EAAWhL,UAAU9L,SAAQ,SAAA+L,GAAQ,OAAIA,EAASjF,MAAsB,sBAC/EyE,IACHrK,EAAW4F,MAAkB,cAAK,EAC9B2E,IAAQvK,EAAW4F,MAAmB,eAAK,GAC3C0I,IAAYtO,EAAW6V,wBAAyB,IAIlDrI,GAAeA,EAAYrD,GAAK,CAClC,IAAMqJ,EAAOhG,EAAYrD,GAEzByL,EAAWxE,UAAYoC,EAAKpC,UAC5BwE,EAAWzE,wBAA0BqC,EAAKrC,wBAC1CyE,EAAWnC,cAAgBD,EAAKC,cAE5BD,EAAKnI,UAAYuK,EAAWvK,WAC9BuK,EAAW/C,WAAaW,EAAKX,WAC7B+C,EAAW1E,mBAAqBsC,EAAKtC,mBAIjCsC,EAAKsB,eAAe5L,WAAa0M,EAAWd,eAAe5L,SAG7D0M,EAAW/C,YAAa,EAGxB+C,EAAWd,eAAc1F,GAAA,GAAQoE,EAAKsB,iBAK5C,OAAOc,KAGX,GAAIrZ,KAAK+H,iBAAkB,CACzB,IAAMwR,EAAcnN,EAAkBuB,QAAO,SAAA6L,GAAM,OAAIA,EAAO1K,YACxD2K,EAAYrN,EAAkBuB,QAAO,SAAA6L,GAAM,OAAIA,EAAOxL,UAC5D5B,EAAoBmN,EAAYtZ,OAAOwZ,GAGzC,OAAOrN,GAGT8L,gBAAe,WAAG,IAAAwB,EAAA,KAChB1Z,KAAK6V,oBAAoB,CACvBC,OAAQtQ,EACRuQ,UAAW,WACT,OAAO2D,EAAKhN,kBAAkBE,WAEhCoJ,MAAO,WACL0D,EAAKhN,kBAAkBE,WAAY,EACnC8M,EAAKhN,kBAAkBG,aAAe,IAExCoJ,QAAS,WACPyD,EAAKhN,kBAAkBC,UAAW,EAElC+M,EAAKtI,WAAU,WACbsI,EAAKhF,qCAAoC,OAG7CwB,KAAM,SAAA3P,GACJmT,EAAKhN,kBAAkBG,aAAevG,GAAgBC,IAExD4P,IAAK,WACHuD,EAAKhN,kBAAkBE,WAAY,MAKzC4L,oBAAmB,SAAC/U,GAAY,IAAAkW,EAAA,KAItB/L,EAAYnK,EAAZmK,GAAI2D,EAAQ9N,EAAR8N,IAEZvR,KAAK6V,oBAAoB,CACvBC,OAAQrQ,EACR7F,KAAM,CAKJ6D,WAAY8N,GAEdwE,UAAW,WACT,OAAO4D,EAAKrM,QAAQM,GAAI2K,eAAe3L,WAEzCoJ,MAAO,WACL2D,EAAKrM,QAAQM,GAAI2K,eAAe3L,WAAY,EAC5C+M,EAAKrM,QAAQM,GAAI2K,eAAe1L,aAAe,IAEjDoJ,QAAS,WACP0D,EAAKrM,QAAQM,GAAI2K,eAAe5L,UAAW,GAE7CuJ,KAAM,SAAA3P,GACJoT,EAAKrM,QAAQM,GAAI2K,eAAe1L,aAAevG,GAAgBC,IAEjE4P,IAAK,WACHwD,EAAKrM,QAAQM,GAAI2K,eAAe3L,WAAY,MAKlDiJ,oBAAmB,SAAA+D,GAAyD,IAAtD9D,EAAM8D,EAAN9D,OAAQlW,EAAIga,EAAJha,KAAMmW,EAAS6D,EAAT7D,UAAWC,EAAK4D,EAAL5D,MAAOC,EAAO2D,EAAP3D,QAASC,EAAI0D,EAAJ1D,KAAMC,EAAGyD,EAAHzD,IACnE,GAAKnW,KAAKuJ,cAAewM,IAAzB,CAIAC,IAEA,IAAMlD,EAAW+G,KAAK,SAACtT,EAAKuT,GACtBvT,EACF2P,EAAK3P,GAEL0P,EAAQ6D,GAGV3D,OAEI2D,EAAS9Z,KAAKuJ,YAAWsJ,MAAC,CAC9BjF,GAAI5N,KAAK8P,gBACTpJ,WAAY1G,KAAK8P,gBACjBgG,UACGlW,GAAI,IACPkT,cAGEiH,IAAUD,IACZA,EAAOE,MAAK,WACVlH,OACC,SAAAvM,GACDuM,EAASvM,MACR0T,OAAM,SAAA1T,GAEP2T,QAAQC,MAAM5T,QAKpB0S,iBAAgB,SAACpL,GAAM,IAAAuM,EAAA,KACrBlb,GACE,mBAAS2O,EAAKD,MAAMwM,EAAKjO,OAAOE,UAAa+N,EAAKjO,OAAOE,QAAQwB,EAAKD,IAAIkE,mBAC1E,iBAAM,0CAAA7R,OAA0Coa,KAAKC,UAAUzM,EAAKD,IAAG,2BAAA3N,OAChDma,EAAKjO,OAAOE,QAAQwB,EAAKD,IAAIgE,MAAK,WAAA3R,OAAU4N,EAAK+D,MAAK,uBAIjFsH,gBAAe,SAACrL,GACd3O,GACE,wBAA0B8X,IAAlBnJ,EAAKI,WAA4C,IAAlBJ,EAAKiB,aAC5C,iBAAM,sIAKVyL,OAAM,SAAC1M,GACL,IAAI7N,KAAK4I,WAAYiF,EAAKkE,WAA1B,CAII/R,KAAKyN,QACPzN,KAAKwa,QAGP,IAAMlC,EAAYtY,KAAK2J,WAAa3J,KAAK+I,KDpzDtB,ICqzDf/I,KAAKmM,OAAOG,gBAAgBuB,EAAKD,KAChC5N,KAAK+N,WAAWF,GAEjByK,EACFtY,KAAKya,YAAY5M,GAEjB7N,KAAK0a,cAAc7M,GAGrB7N,KAAK+P,mBAEDuI,GACFtY,KAAKwQ,8BACLxQ,KAAK4P,MAAM,SAAU/B,EAAK0D,IAAKvR,KAAK8P,kBAEpC9P,KAAK4P,MAAM,WAAY/B,EAAK0D,IAAKvR,KAAK8P,iBAGpC9P,KAAK8M,YAAYC,QAAUuL,IAActY,KAAKyN,QAAUzN,KAAKmI,iBAC3DnI,KAAK2K,wBACP3K,KAAKoR,UAAUpR,KAAKmY,oBAEtBnY,KAAK+X,oBAGH/X,KAAKyN,QAAUzN,KAAKqI,gBACtBrI,KAAKyP,YAGDzP,KAAK4K,aACP5K,KAAK+Q,eAAgB,MAK3ByJ,MAAK,WAAG,IAAAG,EAAA,KACF3a,KAAKyO,WACHzO,KAAKyN,QAAUzN,KAAK8G,sBACtB9G,KAAKmM,OAAOI,gBAAkB,GAE9BvM,KAAKmM,OAAOI,gBAAkBvM,KAAKmM,OAAOI,gBAAgBoB,QAAO,SAAA6D,GAAM,OACrEmJ,EAAKrN,QAAQkE,GAAQO,cAIzB/R,KAAK+P,qBAKT0K,YAAW,SAAC5M,GAAM,IAAA+M,EAAA,KAChB,GAAI5a,KAAKyN,QAAUzN,KAAK2I,mBACtB,OAAO3I,KAAK6a,SAAShN,GAGvB,GAAI7N,KAAK+I,KAaP,OAZA/I,KAAK6a,SAAShN,QAEV7N,KAAKyH,oBACPoG,EAAKQ,UAAU9L,SAAQ,SAAA+L,GAChBsM,EAAK7M,WAAWO,IAAcA,EAASyD,YAAY6I,EAAKC,SAASvM,MAE/DtO,KAAK0H,uBACd1H,KAAKwS,uBAAuB3E,GAAM,SAAA4E,GAC3BmI,EAAK7M,WAAW0E,IAAgBA,EAAWV,YAAY6I,EAAKC,SAASpI,OAOhF,IAAMqI,EACJjN,EAAKG,SACmBH,EAAKyL,wBACNtZ,KAAsC,kCAc/D,GAZI8a,GACF9a,KAAK6a,SAAShN,GAGZA,EAAKiB,UACP9O,KAAKwS,uBAAuB3E,GAAM,SAAA4E,GAC3BA,EAAWV,aAAc6I,EAAK3T,mCACjC2T,EAAKC,SAASpI,MAKhBqI,EAEF,IADA,IAAIC,EAAOlN,EDj5DW,QCk5DdkN,EAAOA,EAAKtX,aACdsX,EAAK9M,SAASqH,MAAMtV,KAAK+N,aAAa/N,KAAK6a,SAASE,IAO9DL,cAAa,SAAC7M,GAAM,IAAAmN,EAAA,KAClB,GAAIhb,KAAK2I,mBACP,OAAO3I,KAAKib,YAAYpN,GAG1B,GAAI7N,KAAK+I,KAaP,OAZA/I,KAAKib,YAAYpN,QAEb7N,KAAKuH,sBACPsG,EAAKQ,UAAU9L,SAAQ,SAAA+L,GACjB0M,EAAKjN,WAAWO,KAAcA,EAASyD,YAAYiJ,EAAKC,YAAY3M,MAEjEtO,KAAKwH,yBACdxH,KAAKwS,uBAAuB3E,GAAM,SAAA4E,GAC5BuI,EAAKjN,WAAW0E,KAAgBA,EAAWV,YAAYiJ,EAAKC,YAAYxI,OAOlF,IAAIyI,GAA8B,EAWlC,GAVIrN,EAAKiB,WACP9O,KAAKiT,uBAAuBpF,GAAM,SAAA4E,GAC3BA,EAAWV,aAAciJ,EAAK/T,oCACjC+T,EAAKC,YAAYxI,GAAY,GAC7ByI,GAA8B,MAGlClb,KAAKmM,OAAOI,gBAAkB5O,OAAOkH,KAAK7E,KAAKmM,OAAOM,kBAItDoB,EAAKG,QACiBkN,GACyB,IAAzBrN,EAAKI,SAAStO,OACpC,CACAK,KAAKib,YAAYpN,GAGjB,IADA,IAAIkN,EAAOlN,EDj8DW,QCk8DdkN,EAAOA,EAAKtX,aACdzD,KAAK+N,WAAWgN,IAAO/a,KAAKib,YAAYF,KAMlDF,SAAQ,SAAChN,GACP7N,KAAKmM,OAAOI,gBAAgBlK,KAAKwL,EAAKD,IACtC5N,KAAKmM,OAAOM,gBAAgBoB,EAAKD,KAAM,GAGzCqN,YAAW,SAACpN,EAAMsN,GACXA,GAAM/Z,EAAgBpB,KAAKmM,OAAOI,gBAAiBsB,EAAKD,WACtD5N,KAAKmM,OAAOM,gBAAgBoB,EAAKD,KAG1CwN,gBAAe,WACb,GAAKpb,KAAKyO,SAAV,CACA,GAAIzO,KAAKyN,OAAQ,OAAOzN,KAAKwa,QAC7B,IAAMa,EAAYvD,IAAQ9X,KAAKuN,eACzB+N,EAAmBtb,KAAKsN,QAAQ+N,GACtCrb,KAAKua,OAAOe,KAGdtD,uBAAsB,WACpB,IAAIhY,KAAK2K,uBAAT,CAGA,IAAM+L,EAAQ1W,KAAKyW,UAEfC,IAAO1W,KAAK8L,KAAKG,mBAAqByK,EAAM/V,aAGlDsX,0BAAyB,WACvB,IAAIjY,KAAK2K,uBAAT,CAGA,IAAM+L,EAAQ1W,KAAKyW,UAEfC,IAAOA,EAAM/V,UAAYX,KAAK8L,KAAKG,sBAGzCuE,4BAA2B,WACpBxQ,KAAK8I,gCAGV9I,KAAKub,kBAAkBvb,KAAKmM,OAAOI,kBAMrCgP,kBAAiB,SAACC,GAAS,IACDC,EADCC,EAAAC,GACRH,GAAO,IAAxB,IAAAE,EAAA1c,MAAAyc,EAAAC,EAAAhd,KAAA+V,MAA0B,KAAf7G,EAAE6N,EAAAvd,MACX,GAAG8B,KAAKmM,OAAOE,QAAQuB,GAAK,KAC8BgO,EAD9BC,EAAAF,GACH3b,KAAKmM,OAAOE,QAAQuB,GAAIS,WAAS,IAAxD,IAAAwN,EAAA7c,MAAA4c,EAAAC,EAAAnd,KAAA+V,MAA0D,CAAvCmH,EAAA1d,MACRoY,YAAa,GACvB,MAAA/P,GAAAsV,EAAAC,EAAAvV,GAAA,QAAAsV,EAAAE,OAEJ,MAAAxV,GAAAmV,EAAAI,EAAAvV,GAAA,QAAAmV,EAAAK,MAGHC,mBAAkB,SAAC5E,GACjB,IAAMV,EAAQ1W,KAAKyW,UACnB,GAAIW,GAAWV,EAAO,CACpB,IAAMuF,EAAWrb,KAAKM,IAAIkW,EAAQtW,WAAc4V,EAAMjW,aAAe2W,EAAQ3W,cAAgB,EAAI,GACjGiW,EAAM/V,UAAYsb,IAItB9D,mBAAkB,WAChB,IAAMf,EAAUzU,SAAS0U,cAAc,qCACvCrX,KAAKgc,mBAAmB5E,IAG1B3G,6BAA4B,WAAG,IAAAyL,EAAA,KAC1Blc,KAAKmM,OAAOI,gBAAgB5M,OAAS,IAClCK,KAAKmL,0BACLnL,KAAKmM,OAAOE,QAAQrM,KAAKmL,2BAI/BnL,KAAKub,kBAAkB,CAACvb,KAAKmL,0BAE7BnL,KAAKoR,WAAW,WACd,IAAMgG,EAAUzU,SAAS0U,cAAc,oCAADpX,OAAqCic,EAAK/Q,wBAAuB,OACvG+Q,EAAKF,mBAAmB5E,SAM9B+E,QAAO,WACLnc,KAAK2Q,cACL3Q,KAAK8Q,cAGPsL,QAAO,WACDpc,KAAKqH,WAAWrH,KAAK+T,aACpB/T,KAAKsK,SAAYtK,KAAKoH,QAASpH,KAAKsH,qBAAqBtH,KAAKkY,kBAC/DlY,KAAKkH,YAAYlH,KAAKwP,WACtBxP,KAAKoH,OAASpH,KAAKwI,gBAAgBxI,KAAKoQ,sBAG9CiM,UAAS,WAEPrc,KAAKuT,yBAAwB,KC3iEjC,SAAA+I,GAAApe,GACA,uBAAAA,IAEA,MAAAA,GAAAkG,EAAAlG,GAEA,GAFAmc,KAAAC,UAAApc,GCAe,SAASqe,GACtBC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,GAGA,IAoBIC,EApBA1S,EACuB,mBAAlBkS,EAA+BA,EAAclS,QAAUkS,EAuDhE,GApDIC,IACFnS,EAAQmS,OAASA,EACjBnS,EAAQoS,gBAAkBA,EAC1BpS,EAAQ2S,WAAY,GAIlBN,IACFrS,EAAQ4S,YAAa,GAInBL,IACFvS,EAAQ6S,SAAW,UAAYN,GAI7BC,GAEFE,EAAO,SAAUI,IAEfA,EACEA,GACCpd,KAAKqd,QAAUrd,KAAKqd,OAAOC,YAC3Btd,KAAKud,QAAUvd,KAAKud,OAAOF,QAAUrd,KAAKud,OAAOF,OAAOC,aAEZ,oBAAxBE,sBACrBJ,EAAUI,qBAGRZ,GACFA,EAAaxf,KAAK4C,KAAMod,GAGtBA,GAAWA,EAAQK,uBACrBL,EAAQK,sBAAsBC,IAAIZ,IAKtCxS,EAAQqT,aAAeX,GACdJ,IACTI,EAAOD,EACH,WACEH,EAAaxf,KACX4C,MACCsK,EAAQ4S,WAAald,KAAKud,OAASvd,MAAM4d,MAAMC,SAASC,aAG7DlB,GAGFI,EACF,GAAI1S,EAAQ4S,WAAY,CAGtB5S,EAAQyT,cAAgBf,EAExB,IAAIgB,EAAiB1T,EAAQmS,OAC7BnS,EAAQmS,OAAS,SAAkCwB,EAAGb,GAEpD,OADAJ,EAAK5f,KAAKggB,GACHY,EAAeC,EAAGb,QAEtB,CAEL,IAAIc,EAAW5T,EAAQ6T,aACvB7T,EAAQ6T,aAAeD,EAAW,GAAGje,OAAOie,EAAUlB,GAAQ,CAACA,GAInE,MAAO,CACLjgB,QAASyf,EACTlS,QAASA,GCtFb,IAWe,GAXC,GFIhB,CACA9M,KAAA,gCACA4gB,OAAA,aACAlB,YAAA,EAEAT,OAAA,SAAA4B,EAAAjB,GAAA,IAAAa,EAAAve,UAAA,GACAkH,EAAAwW,EAAAkB,WAAA1X,SAEA,IAAAA,EAAApJ,MAAAoJ,EAAAgC,WAAAhC,EAAA6H,SAAA,YAEA,IAAA8P,EAAA3X,EAAA2G,cAAAF,IAAAiP,IAMA,OAJA1V,EAAA+C,UAAA/C,EAAAqC,aAAAsV,EAAA,CACAA,EAAAC,KAAA5X,EAAA8B,aAGA6V,EAAAlR,KAAA,SAAAoR,EAAAxhB,GAAA,OACAghB,EAAA,SAAAS,MAAA,CAAAnf,KAAA,SACA/B,KAAAoJ,EAAApJ,MAAAmhB,SAAA,OACAF,GACAjgB,IAAA,gBAAAvB,cE/BI,OAAQyf,GAWV,EACA,KACA,KACA,M,2BCVFkC,GAAA,CACAjZ,EACAA,EACAA,EACAA,GACAA,GACAA,GACAA,ICOe,GAXC,GDOhB,CACAnI,KAAA,wBACA4gB,OAAA,aAEA1S,KAAA,kBACAmT,WL6B+B,EK5B/B3gB,MAAA,KAGAiP,SAAA,CACA2R,aAAA,WACA,IAAAlY,EAAA,KAAAA,SAEA,OACAA,EAAAgE,aACAhE,EAAAgC,UACAhC,EAAA+C,UAIAoV,WAAA,WACA,OACA9c,MAAA,KAAA6c,aAAA,GAAA7e,OAAA,KAAA4e,WAAA,cAKAvP,MAAA,CACA,wCAAAC,GACA,KAAArR,MAAAqR,GAGArR,MAAA,WAEA,KAAA4gB,cAAA,KAAA1N,UAAA,KAAA4N,oBAIA7C,QAAA,WACA,KAAA8C,kBAAAC,IACA,KAAAC,kBLP+B,IKS/B,CAAAC,SAAA,EAAAC,UAAA,KAIA3O,QAAA,CACA8J,MAAA,WACA,KAAA8E,QAAA,CACA3a,OAAA,CAAAzG,MAAA,OAIA8V,MAAA,WACA,KAAApN,SAEAgC,UACA,KAAA+K,MAAAG,OAAA,KAAAH,MAAAG,MAAAE,SAIAE,KAAA,WACA,KAAAP,MAAAG,OAAA,KAAAH,MAAAG,MAAAI,QAGAqL,QAAA,WACA,IAAA3Y,EAAA,KAAAA,SAEAA,EAAA+E,QAAAC,WAAA,EAEAhF,EAAAyD,aAAAzD,EAAA4I,YAGAgQ,OAAA,WACA,IAAA5Y,EAAA,KAAAA,SACAkF,EAAAlF,EAAA6P,UAIA,GAAA3K,GAAAnJ,SAAA8c,gBAAA3T,EACA,YAAAkI,QAGApN,EAAA+E,QAAAC,WAAA,EACAhF,EAAA6I,aAGA6P,QAAA,SAAAhgB,GACA,IAAApB,EAAAoB,EAAAqF,OAAAzG,MAEA,KAAAA,QAEAA,EACA,KAAA+gB,qBAEA,KAAAA,kBAAAS,SACA,KAAAP,sBAKAQ,UAAA,SAAArgB,GACA,IAAAsH,EAAA,KAAAA,SAGApI,EAAA,UAAAc,IAAAsgB,MAAAtgB,EAAAugB,QAEA,KAAAvgB,EAAAwgB,SAAAxgB,EAAAygB,UAAAzgB,EAAA0gB,QAAA1gB,EAAA2gB,SAAA,CAGA,IAAArZ,EAAAkF,KAAAC,QAAA/G,EAAA4Z,GAAApgB,GAEA,OADAc,EAAA8U,iBACAxN,EAAA4I,WAGA,OAAAhR,GACA,KAAAmH,EACAiB,EAAAe,mBAAA,KAAAzJ,MAAAyB,QACAiH,EAAAwU,kBAEA,MAEA,KAAAzV,EAEA,GADArG,EAAA8U,iBACA,OAAAxN,EAAAkF,KAAAE,QAAA,OACA,IAAAA,EAAApF,EAAA0G,QAAA1G,EAAAkF,KAAAE,SACA,GAAAA,EAAA8C,UAAAlI,EAAA+B,mBAAA,OACA/B,EAAA2T,OAAAvO,GACA,MAEA,KAAArG,EACA,KAAAzH,MAAAyB,OACA,KAAA6a,QACA5T,EAAAkF,KAAAC,QACAnF,EAAA6I,YAEA,MAEA,KAAA9J,EACArG,EAAA8U,iBACAxN,EAAA8Q,sBACA,MAEA,KAAA/R,EACArG,EAAA8U,iBACAxN,EAAA2Q,uBACA,MAEA,KAAA5R,GACA,IAAAqG,EAAApF,EAAA0G,QAAA1G,EAAAkF,KAAAE,SACAA,EAAA8C,UAAAlI,EAAAmI,aAAA/C,IACA1M,EAAA8U,iBACAxN,EAAAyR,eAAArM,KACAA,EAAA8B,aAAA9B,EAAAgC,QAAAhC,EAAA8C,WAAAlI,EAAAmI,aAAA/C,MACA1M,EAAA8U,iBACAxN,EAAAiQ,4BAAA7K,EAAAvI,aAEA,MAEA,KAAAkC,GACArG,EAAA8U,iBACAxN,EAAA6Q,sBACA,MAEA,KAAA9R,GACA,IAAAqG,EAAApF,EAAA0G,QAAA1G,EAAAkF,KAAAE,SACAA,EAAA8C,WAAAlI,EAAAmI,aAAA/C,KACA1M,EAAA8U,iBACAxN,EAAAyR,eAAArM,IAEA,MAEA,KAAArG,GACArG,EAAA8U,iBACAxN,EAAA+Q,sBACA,MAEA,KAAAhS,GACAiB,EAAA6B,gBAAA,KAAAvK,MAAAyB,QACAiH,EAAAwU,kBAEA,MAEA,QAEAxU,EAAA4I,cAKA0Q,YAAA,SAAA5gB,GAEA,KAAApB,MAAAyB,QAGAL,EAAA+U,mBAIA8L,qBAAA,eAAAlC,EAAA,KAAAmC,eACAxZ,EAAA,KAAAA,SACAC,EAAA,GACAoH,EAAA,GA0BA,OAxBArH,EAAAgE,aAAAhE,EAAAgC,WACAqF,EAAA5L,KAAA,KAAAge,eACA,KAAAvB,cAAA7Q,EAAA5L,KAAA,KAAAie,gBAGA1Z,EAAAgE,YACAlG,EAAAmC,EAAA,CACA0Z,GAAA,CACAvM,MAAA,KAAAuL,QACArL,KAAA,KAAAsL,OACAgB,QAAA,KAAAb,WAEAc,IAAA,UAIA7Z,EAAAgE,YAAAhE,EAAAgC,UACAlE,EAAAmC,EAAA,CACA6X,MAAA,CACArT,SAAAzE,EAAAyE,YAMA4S,EAAA,MAAAyC,KAAA,2CAAA7Z,IAAA,CACAoH,KAKAoS,YAAA,eAAApC,EAAA,KAAAmC,eACAxZ,EAAA,KAAAA,SAEA,OACAqX,EAAA,SAAAwC,IAAA,QACA,8BAAA/B,MAAA,CACAnf,KAAA,OACAohB,aAAA,MACAtV,SAAAzE,EAAAyE,SACAb,SAAA5D,EAAA4D,WAAA5D,EAAA6H,UAAAkQ,SAAA,OACA,KAAAzgB,OACA0iB,MAAA,KAAA7B,WAAAwB,GAAA,OACA,KAAAhB,QAAA,MACA,KAAAD,QAAA,KACA,KAAAE,OAAA,QACA,KAAAG,UAAA,UACA,KAAAO,gBAKAI,YAAA,WACA,OACArC,EAFA,KAAAmC,gBAEA,OAAAK,IAAA,6CAAAviB,SAIA8gB,iBAAA,WACA,KAAAH,WAAAje,KAAAM,ILrO+B,EKuO/B,KAAAyS,MAAAkN,MAAAC,YAAA,KAIA3B,kBAAA,WACA,KAAAvY,SAEA+E,QAAAE,YAAA,KAAA3N,QAIAue,OAAA,WACA,YAAA0D,8BCnSI,OAAQ,GAWV,EACA,KACA,KACA,M,QCIa,GAXC,GCNhB,CACA3iB,KAAA,8BACA4gB,OAAA,aAEA3B,OAAA,eAAAwB,EAAAve,UAAA,GACAkH,EAAA,KAAAA,SACAma,EAAA,CACA,iCACA,2CACA,6BAAAna,EAAA6H,UAAA7H,EAAA+E,QAAAE,aAGA,OACAoS,EAAA,aAAA8C,GAAA,CACAna,EAAA2D,qBDfI,OAAQ,GAWV,EACA,KACA,KACA,M,QEIa,GAXC,GCHhB,CACA/M,KAAA,+BACA4gB,OAAA,aACA1N,QAAA,CACAsQ,uBAAA,WACA,IAAApa,EAAA,KAAAA,SACAiH,EAAAjH,EAAAwG,cAAA,GAEA6T,EAAAra,EAAAsa,aAAA,eACA,OAAAD,EACAA,EAAA,CAAApT,SACAA,EAAA+D,QAGA6K,OAAA,eAAAwB,EAAAve,UAAA,GACAkH,EAAA,KAAAA,SAAAua,EAAA,KAAA3d,QAAA2d,qBACAC,EAAAxa,EAAA6H,WAAA7H,EAAA+E,QAAAE,YAEA,OAAAsV,EAAA,CACAC,GACAnD,EAAA,8CACA,KAAA+C,2BAGA/C,EAAAoD,IACApD,EAAAqD,GAAA,CAAAb,IAAA,mBD7BI,OAAQ,GAWV,EACA,KACA,KACA,M,QEdE,GAAS,WACX,IACEc,EADQvhB,KACCwhB,MAAMD,GACjB,OAAOA,EACL,MACA,CACE7C,MAAO,CACL+C,MAAO,6BACPC,QAAS,wBAGb,CACEH,EAAG,OAAQ,CACT7C,MAAO,CACLnhB,EAAG,4gBAOb,GAAOokB,eAAgB,ECdvB,ICWe,GAXC,GDAhB,CACAnkB,KAAA,qBCCE,GFWoB,IETpB,EACA,KACA,KACA,M,QCIa,GAXC,GCHhB,CACAA,KAAA,mCACA4gB,OAAA,aAEAvX,MAAA,CACAgH,KAAA,CACAtO,KAAA5B,OACA6M,UAAA,IAIAkG,QAAA,CACAyD,gBAAA/U,GAAA,WACA,IAAAwH,EAAA,KAAAA,SAAAiH,EAAA,KAAAA,KAGAjH,EAAA2T,OAAA1M,OAIA4O,OAAA,eAAAwB,EAAAve,UAAA,GACAkH,EAAA,KAAAA,SAAAiH,EAAA,KAAAA,KACA+T,EAAA,CACA,sCACA,4CAAA/T,EAAAkE,WACA,uCAAAlE,EAAAmE,OAEAiP,EAAAra,EAAAsa,aAAA,eACAW,EAAAZ,IAAA,CAAApT,WAAA+D,MAEA,OACAqM,EAAA,4DACAA,EAAA,aAAA2D,EAAArB,GAAA,gBAAApM,kBAAA,CACA8J,EAAA,oDAAA4D,IACA5D,EAAA,oEAAAA,EAAA6D,iBDtCI,OAAQ,GAWV,EACA,KACA,KACA,M,QEIa,GAXC,GCFhB,CACAtkB,KAAA,8BACA4gB,OAAA,aAEA1N,QAAA,CACAqR,sBAAA,eAAA9D,EAAA,KAAAmC,eACAxZ,EAAA,KAAAA,SAEA,OAAAA,EAAA2G,cACAG,MAAA,EAAA9G,EAAAsC,OACAmE,IAAAzG,EAAA0G,SACAD,KAAA,SAAAQ,GAAA,OACAoQ,EAAA+D,GAAA,CAAAxjB,IAAA,oBAAAyB,OAAA4N,EAAAD,IAAA8Q,MAAA,CAAA7Q,cAIAoU,qBAAA,eAAAhE,EAAA,KAAAmC,eACAxZ,EAAA,KAAAA,SACAyC,EAAAzC,EAAA2G,cAAA5N,OAAAiH,EAAAsC,MAEA,OAAAG,GAAA,OAGA4U,EAAA,+EAAAzf,IAAA,qBACAyf,EAAA,iDAAArX,EAAAwC,UAAAC,SAMAoT,OAAA,eAAAwB,EAAAve,UAAA,GACAyhB,EAAA,KAAA3d,QAAA2d,qBACAe,EAAA,CACArb,MAAA,CACAsb,IAAA,MACA3kB,KAAA,+CACA4kB,QAAA,IAIA,OAAAjB,EACAlD,EAAA,mBAAAyC,KAAA,uCAAAwB,IAAA,CACA,KAAAH,wBACA,KAAAE,uBACAhE,EAAAoD,GAAA,CAAA7iB,IAAA,gBACAyf,EAAAqD,GAAA,CAAAb,IAAA,QAAAjiB,IAAA,oBDlDI,OAAQ,GAWV,EACA,KACA,KACA,M,QEdE,GAAS,WACX,IACE+iB,EADQvhB,KACCwhB,MAAMD,GACjB,OAAOA,EACL,MACA,CACE7C,MAAO,CACL+C,MAAO,6BACPC,QAAS,wBAGb,CACEH,EAAG,OAAQ,CACT7C,MAAO,CACLnhB,EAAG,wUAOb,GAAOokB,eAAgB,ECdvB,ICDAU,GAAAC,GAAAC,GCYe,GAXC,GFAhB,CACA/kB,KAAA,yBECE,GHWoB,IGTpB,EACA,KACA,KACA,M,QCIa,GAXC,GCAhB,CACAA,KAAA,0BACA4gB,OAAA,aAEAjR,SAAA,CAMAqV,YAAA,WACA,IAAA5b,EAAA,KAAAA,SAEA,OACAA,EAAAqB,YACArB,EAAAgC,UACAhC,EAAA6H,WACA,KAAAgU,oBAAA7b,EAAAE,wBAQA4b,gBAAA,WACA,IAAA9b,EAAA,KAAAA,SAEA,OAAAA,EAAAM,aAGAN,EAAAkF,KAAAC,QAOA0W,mBAAA,WACA,IAAA7b,EAAA,KAAAA,SAEA,OACAA,EAAA6H,UACA7H,EAAA2G,cAAA4B,MAAA,SAAAvB,GAAA,OAAAhH,EAAA0G,QAAAM,GAAAmE,gBAMArB,QAAA,CACAiS,QAAA,eAAA1E,EAAA,KAAAmC,eACAxZ,EAAA,KAAAA,SACAgc,EAAAhc,EAAA+C,SAAA/C,EAAAsB,aAAAtB,EAAAwB,eAEA,YAAAoa,YAGAvE,EAAA,2CAAAS,MAAA,CAAAkE,SAAArC,GAAA,gBAAAsC,qBAAA,CACA5E,EAAA6D,GAAA,+BAJA,MASAgB,YAAA,eAAA7E,EAAA,KAAAmC,eAEA2C,EAAA,CACA,mCACA,yCAHA,KAAAnc,SAGAkF,KAAAC,QAGA,YAAA2W,gBAGAzE,EAAA,uDAAAsC,GAAA,gBAAAyC,yBAAA,CACA/E,EAAAgF,GAAA,OAAAF,MAJA,MASAF,mBAAAzjB,GAAA,SAAAE,GAUAA,EAAA+U,kBACA/U,EAAA8U,iBAEA,IAAAxN,EAAA,KAAAA,SACAkT,EAAAlT,EAAAgB,iBACAoI,EAAA,SAAAkT,GACAA,GAAAtc,EAAA4T,SAGAT,IAAAD,GAEAA,EAAAE,KAAAhK,GAGAmT,YAAA,kBAAAnT,EAAA8J,KAAA,MAQAkJ,uBAAA5jB,GAAA,SAAAE,GACAA,EAAA8U,iBACA9U,EAAA+U,kBAEA,IAAAzN,EAAA,KAAAA,SAEAwc,EAAAxc,EAAA+E,QAAAC,UAEAhF,EAAAmN,cAGAqP,GAAAxc,EAAAyD,aAAAzD,EAAAwR,gBAIA+I,qBAAA,SAAAlT,GACA,OACAgQ,EAFA,KAAAmC,gBAEA,iDACAnS,MAMAwO,OAAA,eAAAwB,EAAAve,UAAA,GACAkH,EAAA,KAAAA,SACAyc,EAAAzc,EAAA6G,OAAA6V,GAAAC,GAEA,OACAtF,EAAA,uCAAAsC,GAAA,WAAA3Z,EAAAuN,kBAAA,CACA8J,EAAAoF,EAAA,CAAA5C,IAAA,oBACA,KAAAkC,UACA,KAAAG,uBDtJI,OAAQ,GAWV,EACA,KACA,KACA,M,QEIa,GAXC,GCNhB,CACAtlB,KAAA,sBACA0f,YAAA,EAEArW,MAAA,CACAtH,KAAA,CACAA,KAAAkH,OACA+D,UAAA,GAEAgZ,KAAA,CACAjkB,KAAAkH,OACA+D,UAAA,IAIAiS,OAAA,SAAA4B,EAAAjB,GAAA,IAAAa,EAAAve,UAAA,GACAmH,EAAAuW,EAAAvW,MAAAoH,EAAAmP,EAAAnP,SAEA,OACAgQ,EAAA,oDAAAhe,OAAA4G,EAAAtH,KAAA,UACA0e,EAAA,gDACAA,EAAA,sCAAAhe,OAAA4G,EAAA2c,UAEAvF,EAAA,0DAAAhe,OAAA4G,EAAAtH,KAAA,eACA0O,aDzBI,OAAQ,GAWV,EACA,KACA,KACA,M,QJNFwV,GAAA,CACAjmB,KAAA,yBACA4gB,OAAA,aAEAvX,MAAA,CACAgH,KAAA,CACAtO,KAAA5B,OACA6M,UAAA,IAIA2C,SAAA,CACA4B,aAAA,WACA,IAAAnI,EAAA,KAAAA,SAAAiH,EAAA,KAAAA,KAEA,OAAAA,EAAAiB,UAAAlI,EAAAmI,aAAAlB,IAGA6V,WAAA,WACA,IAAA9c,EAAA,KAAAA,SAAAiH,EAAA,KAAAA,KAEA,OAAAjH,EAAA2P,uBAAA1I,KAIA6C,QAAA,CACAiT,aAAA,eAAA1F,EAAA,KAAAmC,eACAxZ,EAAA,KAAAA,SAAAiH,EAAA,KAAAA,KAUA,OACAoQ,EAAA,aAVA,CACA,4BACA,mCAAApQ,EAAAkE,WACA,mCAAAnL,EAAAmH,WAAAF,GACA,oCAAAA,EAAAqJ,cACA,kCAAAtQ,EAAAkG,YAAAC,QAAAc,EAAAgH,UACA,qCAAA6O,YAIAnD,GAAA,iBAAAqD,wBAAAlF,MAAA,WAAA7Q,EAAAD,KAAA,CACA,KAAAkV,cACA,KAAAe,qBAAA,CACA,KAAAC,wBAAA,CACA,KAAAC,mBAEA,KAAAC,mBAMAC,qBAAA,eAAAhG,EAAA,KAAAmC,eACA,YAAArR,aAGAkP,EAAA,sCACA,KAAAiG,mBACA,KAAAC,sBACA,KAAAC,2BACA,KAAAC,kCAPA,MAYAvB,YAAA,eAAA7E,EAAA,KAAAmC,eACAxZ,EAAA,KAAAA,SAAAiH,EAAA,KAAAA,KAEA,GAAAjH,EAAAyI,sBAAA,KAAAqU,WAAA,YAEA,GAAA7V,EAAAiB,SAAA,CACA,IAMAiU,EAAA,CACA,kCACA,6CAAAhU,cAGA,OACAkP,EAAA,sDAAAsC,GAAA,gBAAAyC,yBAAA,CACA/E,EAAA,aAbA,CACApX,MAAA,CACArJ,KAAA,wCACA4kB,QAAA,IAUA,CACAnE,EAAAgF,GAAA,OAAAF,QASA,OAAAnc,EAAAsI,gBACAmT,QACApE,EAAA,iEAGAoE,IAGA,MAGAwB,qBAAA,SAAA5V,GACA,OACAgQ,EAFA,KAAAmC,gBAEA,+CAAAG,GAAA,gBAAA+D,kCAAA,CACArW,KAKA6V,wBAAA,SAAA7V,GAAA,IAAAgQ,EAAA,KAAAmC,eACAxZ,EAAA,KAAAA,SAAAiH,EAAA,KAAAA,KAEA,OAAAjH,EAAA6G,QACA7G,EAAA+B,oBAAAkF,EAAAiB,SADA,KAIAmP,EAAA,oDACAhQ,KAKA8V,eAAA,eAAA9F,EAAA,KAAAmC,eACAxZ,EAAA,KAAAA,SAAAiH,EAAA,KAAAA,KACA0W,EAAA3d,EAAAuF,OAAAG,gBAAAuB,EAAAD,IACA4W,EAAA,CACA,8BACA,oCpBnIuB,IoBmIvBD,EACA,0CpBrI6B,IoBqI7BA,EACA,sCpBvIyB,IoBuIzBA,EACA,qCAAA1W,EAAAkE,YAUA,OAPAuQ,QACArE,EAAA,8CAEAsE,QACAtE,EAAA,8CAIAA,EAAA,cAAAuG,GAAA,CACAlC,GACAC,MAKAyB,YAAA,eAAA/F,EAAA,KAAAmC,eACAxZ,EAAA,KAAAA,SAAAiH,EAAA,KAAAA,KACA4W,EACA5W,EAAAiB,WAAAlI,EAAAkG,YAAAC,OACAnG,EAAAqI,0BACArI,EAAAoE,WAGA3B,EAAAob,EACA7d,EAAAkG,YAAAC,OACAnG,EAAAkG,YAAAG,SAAAY,EAAAD,IAAAhH,EAAAqE,aACA4C,EAAAxE,MAAAzC,EAAAqE,aACAyZ,IAGAC,EAAA/d,EAAAsa,aAAA,gBAEA,OAAAyD,IAAA,CACA9W,OACA4W,kBACApb,QACAub,eARA,wBASAC,eARA,0BAYA5G,EAAA,eAbA,yBAaA,CACApQ,EAAA+D,MACA6S,GACAxG,EAAA,cAfA,yBAeA,KAAA5U,EAAA,SAMA6a,iBAAA,eAAAjG,EAAA,KAAAmC,eACAvS,EAAA,KAAAA,KAEA,OAAAA,EAAA0K,eAAA5L,SAEAkB,EAAAI,SAAAZ,KAAA,SAAAyX,GAAA,OACA7G,EAAAwF,GAAA,CAAA/E,MAAA,CAAA7Q,KAAAiX,GAAAtmB,IAAAsmB,EAAAlX,QAHA,MAOAuW,oBAAA,eAAAlG,EAAA,KAAAmC,eACAxZ,EAAA,KAAAA,SAAAiH,EAAA,KAAAA,KAEA,OAAAA,EAAA0K,eAAA5L,UAAAkB,EAAAI,SAAAtO,OAAA,KAGAse,EAAA8G,GAAA,CAAArG,MAAA,CAAAnf,KAAA,cAAAikB,KAAA,aAAA5c,EAAAgD,kBAIAwa,yBAAA,eAAAnG,EAAA,KAAAmC,eACAxZ,EAAA,KAAAA,SAEA,OAFA,KAAAiH,KAEA0K,eAAA3L,UAGAqR,EAAA8G,GAAA,CAAArG,MAAA,CAAAnf,KAAA,UAAAikB,KAAA,YAAA5c,EAAA0C,cAHA,MAOA+a,8BAAA,eAAApG,EAAA,KAAAmC,eACAxZ,EAAA,KAAAA,SAAAiH,EAAA,KAAAA,KAEA,OAAAA,EAAA0K,eAAA1L,aAGAoR,EAAA8G,GAAA,CAAArG,MAAA,CAAAnf,KAAA,QAAAikB,KAAA,WACA3V,EAAA0K,eAAA1L,aACAoR,EAAA,mCAAAS,MAAA,CAAAkE,MAAAhc,EAAA8D,YAAA6V,GAAA,gBAAAyE,yBAAA,CACApe,EAAA6D,cANA,MAYAmZ,uBAAA,SAAAtkB,GACA,IAAAsH,EAAA,KAAAA,SAAAiH,EAAA,KAAAA,KAIAvO,EAAAqF,SAAArF,EAAA2lB,eAEAre,EAAAiQ,4BAAAhJ,GAAA,IAGAmV,uBAAA5jB,GAAA,WACA,IAAAwH,EAAA,KAAAA,SAAAiH,EAAA,KAAAA,KAEAjH,EAAAyR,eAAAxK,MAGAyW,gCAAAllB,GAAA,WACA,IAAAwH,EAAA,KAAAA,SAAAiH,EAAA,KAAAA,KAEAA,EAAAiB,UAAAlI,EAAA+B,mBACA/B,EAAAyR,eAAAxK,GAEAjH,EAAA2T,OAAA1M,MAIAmX,uBAAA5lB,GAAA,WACA,IAAAwH,EAAA,KAAAA,SAAAiH,EAAA,KAAAA,KAEAjH,EAAA4R,oBAAA3K,OAIA4O,OAAA,eAAAwB,EAAAve,UAAA,GACAmO,EAAA,KAAAA,KACAqX,EAAA,KAAAte,SAAAyI,qBAAA,EAAAxB,EAAA9H,MACAof,EAAApQ,IAAA,CACA,gEAAA9U,OACAilB,IAAA,GAEAE,EAAA,CACAve,MAAA,CACArJ,KAAA,qCAIA,OACAygB,EAAA,aAAAkH,GAAA,CACA,KAAAxB,eACA9V,EAAAiB,UACAmP,EAAA,aAAAmH,EAAA,CACA,KAAAnB,6BM/Qe,GAXC,GNmShBR,QM1SI,OAAQ,GAWV,EACA,KACA,KACA,M,QCRF4B,GAAA,CACApkB,IAAA,MACAP,OAAA,SACA4kB,MAAA,MACAC,MAAA,UCQe,GAXC,GDMhB,CACA/nB,KAAA,uBACA4gB,OAAA,aAEAjR,SAAA,CACAqY,UAAA,WAGA,OACA9b,UAHA,KAAA9C,SAGA8C,UAAA,OAIA+b,mBAAA,WACA,IAAA7e,EAAA,KAAAA,SAEA,OACA6E,OAAA7E,EAAAO,aAAA,KAAAP,EAAA6E,UAKA6D,MAAA,CACA,gCAAAC,GACAA,EAEA,KAAA6B,UAAA,KAAAsU,YAEA,KAAAC,gBAKAxJ,QAAA,WACA,KAAAyJ,gBAAA,KACA,KAAAC,kCAAA,MAGAzJ,QAAA,WACA,KAAAxV,SAEAkF,KAAAC,QAAA,KAAAqF,UAAA,KAAAsU,aAGArJ,UAAA,WACA,KAAAsJ,eAGAjV,QAAA,CACAoV,WAAA,eAAA7H,EAAA,KAAAmC,eACAxZ,EAAA,KAAAA,SAEA,OAAAA,EAAAkF,KAAAC,OAGAkS,EAAA,OAAAwC,IAAA,oCAAAF,GAAA,WAAA3Z,EAAAuN,iBAAAyM,MAAA,KAAA4E,WAAA,CACA,KAAAO,mBACAnf,EAAAQ,MACA,KAAA4e,6BACApf,EAAAkG,YAAAC,OACA,KAAAkZ,6BACA,KAAAC,wBACA,KAAAC,oBAVA,MAeAJ,iBAAA,WACA,IACAK,EADA,KAAAxf,SACAsa,aAAA,eAEA,OAAAkF,EACAA,IACA,MAGAD,gBAAA,WACA,IACAE,EADA,KAAAzf,SACAsa,aAAA,cAEA,OAAAmF,EACAA,IACA,MAGAH,sBAAA,WACA,IAAAtf,EAAA,KAAAA,SAEA,OAAAA,EAAA8F,kBAAAE,UACA,KAAA0Z,0BACA1f,EAAA8F,kBAAAG,aACA,KAAA0Z,mCACA3f,EAAA8F,kBAAAC,UAAA,IAAA/F,EAAAuF,OAAAC,kBAAAzM,OACA,KAAA6mB,8BAEA,KAAAC,oBAIAR,2BAAA,WACA,IAAArf,EAAA,KAAAA,SAEA,OAAAA,EAAA8F,kBAAAE,UACA,KAAA0Z,0BACA1f,EAAA8F,kBAAAG,aACA,KAAA0Z,mCACA3f,EAAA8F,kBAAAC,UAAA,IAAA/F,EAAAuF,OAAAC,kBAAAzM,OACA,KAAA6mB,8BACA5f,EAAAkG,YAAAE,UACA,KAAA0Z,qBAEA,KAAAD,oBAIAT,2BAAA,WACA,IAAApf,EAAA,KAAAA,SACAgP,EAAAhP,EAAAoK,uBACA2V,EAAA,KAAA/f,EAAA+E,QAAAE,cAAAjF,EAAA4B,eACAoe,GAAAD,IAEA/Q,EAAAjJ,UAAA,IAAAiJ,EAAAtL,QAAA3K,QAEA,OAAAgnB,EACA,KAAAE,wBACAjR,EAAAhJ,UACA,KAAA0Z,0BACA1Q,EAAA/I,aACA,KAAAia,mCACAF,EACA,KAAAF,qBAEA,KAAAD,oBAIAA,iBAAA,eAAAxI,EAAA,KAAAmC,eACAxZ,EAAA,KAAAA,SAEA,OACAqX,EAAA,sCACArX,EAAAuF,OAAAC,kBAAAiB,KAAA,SAAA+B,GAAA,OACA6O,EAAAwF,GAAA,CAAA/E,MAAA,CAAA7Q,KAAAuB,GAAA5Q,IAAA4Q,EAAAxB,WAMAiZ,sBAAA,eAAA5I,EAAA,KAAAmC,eACAxZ,EAAA,KAAAA,SAEA,OACAqX,EAAA8G,GAAA,CAAArG,MAAA,CAAAnf,KAAA,gBAAAikB,KAAA,aAAA5c,EAAAmE,oBAIAub,wBAAA,eAAArI,EAAA,KAAAmC,eACAxZ,EAAA,KAAAA,SAEA,OACAqX,EAAA8G,GAAA,CAAArG,MAAA,CAAAnf,KAAA,UAAAikB,KAAA,YAAA5c,EAAA0C,eAIAid,iCAAA,eAAAtI,EAAA,KAAAmC,eACAxZ,EAAA,KAAAA,SAEA,OACAqX,EAAA8G,GAAA,CAAArG,MAAA,CAAAnf,KAAA,QAAAikB,KAAA,WACA5c,EAAA8F,kBAAAG,aACAoR,EAAA,mCAAAsC,GAAA,OAAA3Z,EAAAsR,iBAAAwG,MAAA,CAAAkE,MAAAhc,EAAA8D,aAAA,CACA9D,EAAA6D,eAMAqc,iCAAA,eAAA7I,EAAA,KAAAmC,eACAxZ,EAAA,KAAAA,SACAgP,EAAAhP,EAAAoK,uBAIA,OACAiN,EAAA8G,GAAA,CAAArG,MAAA,CAAAnf,KAAA,QAAAikB,KAAA,WACA5N,EAAA/I,aACAoR,EAAA,mCAAAsC,GAAA,OAAA3Z,EAAAwJ,oBAAAsO,MAAA,CAAAkE,MAAAhc,EAAA8D,aAAA,CACA9D,EAAA6D,eAMA+b,4BAAA,eAAAvI,EAAA,KAAAmC,eACAxZ,EAAA,KAAAA,SAEA,OACAqX,EAAA8G,GAAA,CAAArG,MAAA,CAAAnf,KAAA,aAAAikB,KAAA,aAAA5c,EAAAkD,iBAIA4c,mBAAA,eAAAzI,EAAA,KAAAmC,eACAxZ,EAAA,KAAAA,SAEA,OACAqX,EAAA8G,GAAA,CAAArG,MAAA,CAAAnf,KAAA,aAAAikB,KAAA,aAAA5c,EAAAmD,iBAIA2b,WAAA,WACA,KAAAqB,0BACA,KAAAC,uBACA,KAAAC,0CAGAtB,YAAA,WACA,KAAAuB,wBACA,KAAAC,2CAGAJ,wBAAA,WACA,IAAAngB,EAAA,KAAAA,SACA,GAAAA,EAAAkF,KAAAC,OAAA,CAEA,IAAA2K,EAAA9P,EAAA6P,UACA2Q,EAAAxgB,EAAA4P,aACA6Q,EAAA3Q,EAAApW,wBACAgnB,EAAAF,EAAA9mB,wBACAinB,EAAAF,EAAAllB,OACAqlB,EAAA3jB,OAAA4jB,YACAC,EAAAJ,EAAArmB,IAMA0mB,EALA9jB,OAAA4jB,YAAAH,EAAA5mB,OAKA6mB,E3BxM2B,G2ByM3BK,EAAAF,EAAAH,E3BzM2B,G2BqM3BD,EAAArmB,KAAA,GAAAqmB,EAAArmB,KAAAumB,GACAF,EAAArmB,IAAA,GAAAqmB,EAAA5mB,OAAA,EAOA,SAAAkG,EAAAsD,cACAtD,EAAAkF,KAAAI,UAAAmZ,GAAAze,EAAAsD,eAEAtD,EAAAkF,KAAAI,UADAyb,IAAAC,EACA,SAEA,MANAhhB,EAAA6I,cAUAuX,qBAAA,WACA,IACAtQ,EADA,KAAA9P,SACA6P,UAGA,KAAAmP,kBAEA,KAAAA,gBAAA,CACAiC,OAAAplB,EAAAiU,EAAA,KAAAqQ,4BAIAE,uCAAA,WACA,IACAG,EADA,KAAAxgB,SACA4P,aAGA,KAAAqP,oCAEA,KAAAA,kCAAA,CACAgC,OAAAvkB,EAAA8jB,EAAA,KAAAL,4BAIAG,sBAAA,WACA,KAAAtB,kBAEA,KAAAA,gBAAAiC,SACA,KAAAjC,gBAAA,OAGAuB,wCAAA,WACA,KAAAtB,oCAEA,KAAAA,kCAAAgC,SACA,KAAAhC,kCAAA,QAIApJ,OAAA,eAAAwB,EAAAve,UAAA,GACA,OACAue,EAAA,OAAAwC,IAAA,wDAAAG,MAAA,KAAA6E,oBAAA,CACAxH,EAAA,cAAAS,MAAA,CAAAlhB,KAAA,sCACA,KAAAsoB,wBClTI,OAAQ,GAWV,EACA,KACA,KACA,M,2PCTF,IA+HAvb,GA/HAud,GAAA,CACAtqB,KAAA,gCACA4gB,OAAA,aAEA9O,MAAA,CACA,gCAAAC,GACAA,EACA,KAAAwY,gBAEA,KAAAC,kBAIA,qCACA,KAAAC,8BAIA9L,QAAA,WACA,KAAA+L,qCAAA,KACA,KAAAC,mBAAA,MAGA/L,QAAA,WACA,KAAAxV,SAEAkF,KAAAC,QAAA,KAAAgc,iBAGArX,QAAA,CACAqX,cAAA,WACA,KAAAK,cACA,KAAAH,4BACA,KAAAI,4CACA,KAAAC,2BAGAN,eAAA,WACA,KAAAO,6CACA,KAAAC,4BAGAH,0CAAA,WACA,IACAjB,EADA,KAAAxgB,SACA4P,aAGA,KAAA0R,uCAEA,KAAAA,qCAAA,CACAL,OAAAvkB,EAAA8jB,EAAA,KAAAa,8BAIAK,wBAAA,eAAA9a,EAAA,KAEA4Z,EADA,KAAAxgB,SACA4P,aAGA,KAAA2R,qBAEA,KAAAA,mBAAA,CACAN,OAAAplB,EAAA2kB,GAAA,WACA5Z,EAAA4a,cACA5a,EAAAya,kCAKAM,2CAAA,WACA,KAAAL,uCAEA,KAAAA,qCAAAL,SACA,KAAAK,qCAAA,OAGAM,yBAAA,WACA,KAAAL,qBAEA,KAAAA,mBAAAN,SACA,KAAAM,mBAAA,OAGAC,YAAA,WACA,IAAAxhB,EAAA,KAAAA,SACA6hB,EAAA,KAAA5mB,IAEAylB,EADA1gB,EAAA4P,aACAlW,wBAEAmoB,EAAA7H,MAAA3e,MAAAqlB,EAAArlB,MAAA,MAGAgmB,0BAAA,WACA,IAAArhB,EAAA,KAAAA,SACAwgB,EAAAxgB,EAAA4P,aACAiS,EAAA,KAAA5mB,IACAylB,EAAAF,EAAA9mB,wBACAooB,EAAAD,EAAAnoB,wBACAqoB,EAAA,WAAA/hB,EAAAkF,KAAAI,UAAAob,EAAAnlB,OAAA,EACAymB,EAAAhoB,KAAAioB,MAAAvB,EAAAsB,KAAAF,EAAAE,MAAA,KACA3nB,EAAAL,KAAAioB,MAAAvB,EAAArmB,IAAAynB,EAAAznB,IAAA0nB,GAAA,KACA,KAAAhV,MAAA7H,KAAA6H,MAAA,kBAAAiN,MAEA1b,EADA,8DACA,SAAA/G,GAAA,OAAAA,KAAAwE,SAAAmmB,KAAAlI,UAGA,aAAA3gB,OAAA2oB,EAAA,MAAA3oB,OAAAgB,EAAA,OAIAwb,OAAA,eAAAwB,EAAAve,UAAA,GACAkH,EAAA,KAAAA,SACAmiB,EAAA,iCAAAniB,EAAAoiB,cACAC,EAAA,CAAAxd,OAAA7E,EAAA6E,QAEA,OACAwS,EAAA,aAAA8K,EAAAnI,MAAAqI,EAAAvK,MAAA,oBAAA9X,EAAAkJ,kBAAA,CACAmO,EAAAiL,GAAA,CAAAzI,IAAA,YAKApE,UAAA,WACA,KAAA2L,mBC9Ge,GAXC,GD+HhB,CACAxqB,KAAA,8BAEA2e,QAAA,WACA,KAAAvF,aAAA,MAGAwF,QAAA,WACA,KAAA+M,SAGA9M,UAAA,WACA,KAAA+M,YAGA1Y,QAAA,CACAyY,MAAA,WACA,IAAAE,EAAA1mB,SAAA2mB,cAAA,OACA3mB,SAAAmmB,KAAAS,YAAAF,GAEA,KAAAzS,aAAA,IAAA4S,K,mWAAA3W,CAAA,CACAwW,KACA9L,OAAA,MACAuK,MAIAsB,SAAA,WACAzmB,SAAAmmB,KAAAW,YAAA,KAAA7S,aAAA/U,KACA,KAAA+U,aAAA/U,IAAA6nB,UAAA,GAEA,KAAA9S,aAAA+S,WACA,KAAA/S,aAAA,KACA,KAAArM,YAAA,OAIAkS,OAAA,eAAAwB,EAAAve,UAAA,GAKA,OAJA6K,QACA0T,EAAA,mDAGA1T,UChLI,OAAQ,GAWV,EACA,KACA,KACA,M,QCIa,GAXC,GCAhB,CACA/M,KAAA,iBACAosB,OAAA,CAAAC,IAEA1c,SAAA,CACA6b,aAAA,WACA,OACA,oBACA,8BAAAvb,OACA,6BAAA9D,SACA,kCAAAiB,WACA,gCAAAhC,SACA,+BAAA+C,QAAAC,UACA,iCAAA6C,SACA,4BAAA3C,KAAAC,OACA,0CAAAD,KAAAI,UACA,6CAAAJ,KAAAI,UACA,6CAAAvD,mBACA,sCAAAxB,gBAKAsV,OAAA,eAAAwB,EAAAve,UAAA,GACA,OACAue,EAAA,OAAAwC,IAAA,qBAAAuI,cAAA,CACA/K,EAAA6L,IACA7L,EAAA8L,GAAA,CAAAtJ,IAAA,YACA,KAAAtZ,aAAA8W,EAAA+L,GAAA,CAAAvJ,IAAA,WAAAxC,EAAAiL,GAAA,CAAAzI,IAAA,kBDnCI,OAAQ,GAWV,EACA,KACA,KACA,M,QEDWwJ,I,MATEC,aASQC","file":"vue-treeselect.cjs.min.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 16);\n","module.exports = require(\"@babel/runtime/helpers/defineProperty\");","module.exports = require(\"babel-helper-vue-jsx-merge-props\");","module.exports = require(\"@babel/runtime/helpers/toConsumableArray\");","module.exports = require(\"lodash/noop\");","module.exports = require(\"lodash/debounce\");","module.exports = require(\"is-promise\");","module.exports = require(\"lodash/once\");","module.exports = require(\"lodash/identity\");","module.exports = require(\"lodash/constant\");","module.exports = require(\"lodash/last\");","module.exports = require(\"@babel/runtime/helpers/slicedToArray\");","module.exports = require(\"fuzzysearch\");","module.exports = require(\"watch-size\");","module.exports = require(\"@babel/runtime/helpers/typeof\");","module.exports = require(\"vue\");","import { noop } from './noop'\r\n\r\nexport const warning = process.env.NODE_ENV === 'production'\r\n  ? /* istanbul ignore next */ noop\r\n  : function warning(checker, complainer) {\r\n    if (!checker()) {\r\n      const message = [ '[Vue-Treeselect Warning]' ].concat(complainer())\r\n      // eslint-disable-next-line no-console\r\n      console.error(...message)\r\n    }\r\n  }\r\n","export function onLeftClick(mouseDownHandler) {\r\n  return function onMouseDown(evt, ...args) {\r\n    if (evt.type === 'mousedown' && evt.button === 0) {\r\n      mouseDownHandler.call(this, evt, ...args)\r\n    }\r\n  }\r\n}\r\n","// from react-select\r\nexport function scrollIntoView($scrollingEl, $focusedEl) {\r\n  const scrollingReact = $scrollingEl.getBoundingClientRect()\r\n  const focusedRect = $focusedEl.getBoundingClientRect()\r\n  const overScroll = $focusedEl.offsetHeight / 3\r\n\r\n  if (focusedRect.bottom + overScroll > scrollingReact.bottom) {\r\n    $scrollingEl.scrollTop = Math.min(\r\n      $focusedEl.offsetTop + $focusedEl.clientHeight - $scrollingEl.offsetHeight + overScroll,\r\n      $scrollingEl.scrollHeight,\r\n    )\r\n  } else if (focusedRect.top - overScroll < scrollingReact.top) {\r\n    $scrollingEl.scrollTop = Math.max($focusedEl.offsetTop - overScroll, 0)\r\n  }\r\n}\r\n","import watchSizeForBrowsersOtherThanIE9 from 'watch-size'\r\nimport { removeFromArray } from './removeFromArray'\r\n\r\nlet intervalId\r\nconst registered = []\r\nconst INTERVAL_DURATION = 100\r\n\r\nfunction run() {\r\n  intervalId = setInterval(() => {\r\n    registered.forEach(test)\r\n  }, INTERVAL_DURATION)\r\n}\r\n\r\nfunction stop() {\r\n  clearInterval(intervalId)\r\n  intervalId = null\r\n}\r\n\r\nfunction test(item) {\r\n  const { $el, listener, lastWidth, lastHeight } = item\r\n  const width = $el.offsetWidth\r\n  const height = $el.offsetHeight\r\n\r\n  if (lastWidth !== width || lastHeight !== height) {\r\n    item.lastWidth = width\r\n    item.lastHeight = height\r\n\r\n    listener({ width, height })\r\n  }\r\n}\r\n\r\nfunction watchSizeForIE9($el, listener) {\r\n  const item = {\r\n    $el,\r\n    listener,\r\n    lastWidth: null,\r\n    lastHeight: null,\r\n  }\r\n  const unwatch = () => {\r\n    removeFromArray(registered, item)\r\n    if (!registered.length) stop()\r\n  }\r\n\r\n  registered.push(item)\r\n  // The original watch-size will call the listener on initialization.\r\n  // Keep the same behavior here.\r\n  test(item)\r\n  run()\r\n\r\n  return unwatch\r\n}\r\n\r\nexport function watchSize($el, listener) {\r\n  // See: https://stackoverflow.com/a/31293352\r\n  const isIE9 = document.documentMode === 9\r\n  // watch-size will call the listener on initialization.\r\n  // Disable this behavior with a lock to achieve a clearer code logic.\r\n  let locked = true\r\n  const wrappedListener = (...args) => locked || listener(...args)\r\n  const implementation = isIE9\r\n    ? watchSizeForIE9\r\n    : watchSizeForBrowsersOtherThanIE9\r\n  const removeSizeWatcher = implementation($el, wrappedListener)\r\n  locked = false // unlock after initialization\r\n\r\n  return removeSizeWatcher\r\n}\r\n","export function removeFromArray(arr, elem) {\r\n  const idx = arr.indexOf(elem)\r\n  if (idx !== -1) arr.splice(idx, 1)\r\n}\r\n","function findScrollParents($el) {\r\n  const $scrollParents = []\r\n  let $parent = $el.parentNode\r\n\r\n  while ($parent && $parent.nodeName !== 'BODY' && $parent.nodeType === document.ELEMENT_NODE) {\r\n    if (isScrollElment($parent)) $scrollParents.push($parent)\r\n    $parent = $parent.parentNode\r\n  }\r\n  $scrollParents.push(window)\r\n\r\n  return $scrollParents\r\n}\r\n\r\nfunction isScrollElment($el) {\r\n  // Firefox wants us to check `-x` and `-y` variations as well\r\n  const { overflow, overflowX, overflowY } = getComputedStyle($el)\r\n  return /(auto|scroll|overlay)/.test(overflow + overflowY + overflowX)\r\n}\r\n\r\nexport function setupResizeAndScrollEventListeners($el, listener) {\r\n  const $scrollParents = findScrollParents($el)\r\n\r\n  window.addEventListener('resize', listener, { passive: true })\r\n  $scrollParents.forEach(scrollParent => {\r\n    scrollParent.addEventListener('scroll', listener, { passive: true })\r\n  })\r\n\r\n  return function removeEventListeners() {\r\n    window.removeEventListener('resize', listener, { passive: true })\r\n    $scrollParents.forEach($scrollParent => {\r\n      $scrollParent.removeEventListener('scroll', listener, { passive: true })\r\n    })\r\n  }\r\n}\r\n","export function isNaN(x) {\r\n  return x !== x\r\n}\r\n","export const createMap = () => Object.create(null)\r\n","function isPlainObject(value) {\r\n  if (value == null || typeof value !== 'object') return false\r\n  return Object.getPrototypeOf(value) === Object.prototype\r\n}\r\n\r\nfunction copy(obj, key, value) {\r\n  if (isPlainObject(value)) {\r\n    obj[key] || (obj[key] = {})\r\n    deepExtend(obj[key], value)\r\n  } else {\r\n    obj[key] = value\r\n  }\r\n}\r\n\r\nexport function deepExtend(target, source) {\r\n  if (isPlainObject(source)) {\r\n    const keys = Object.keys(source)\r\n\r\n    for (let i = 0, len = keys.length; i < len; i++) {\r\n      copy(target, keys[i], source[keys[i]])\r\n    }\r\n  }\r\n\r\n  return target\r\n}\r\n","export function includes(arrOrStr, elem) {\r\n  return arrOrStr.indexOf(elem) !== -1\r\n}\r\n","export function find(arr, predicate, ctx) {\r\n  for (let i = 0, len = arr.length; i < len; i++) {\r\n    if (predicate.call(ctx, arr[i], i, arr)) return arr[i]\r\n  }\r\n  return undefined\r\n}\r\n","export function quickDiff(arrA, arrB) {\r\n  if (arrA.length !== arrB.length) return true\r\n\r\n  for (let i = 0; i < arrA.length; i++) {\r\n    if (arrA[i] !== arrB[i]) return true\r\n  }\r\n\r\n  return false\r\n}\r\n","// Magic value that indicates a root level node.\r\nexport const NO_PARENT_NODE = null\r\n\r\n// Types of checked state.\r\nexport const UNCHECKED = 0\r\nexport const INDETERMINATE = 1\r\nexport const CHECKED = 2\r\n\r\n// Types of count number.\r\nexport const ALL_CHILDREN = 'ALL_CHILDREN'\r\nexport const ALL_DESCENDANTS = 'ALL_DESCENDANTS'\r\nexport const LEAF_CHILDREN = 'LEAF_CHILDREN'\r\nexport const LEAF_DESCENDANTS = 'LEAF_DESCENDANTS'\r\n\r\n// Action types of delayed loading.\r\nexport const LOAD_ROOT_OPTIONS = 'LOAD_ROOT_OPTIONS'\r\nexport const LOAD_CHILDREN_OPTIONS = 'LOAD_CHILDREN_OPTIONS'\r\nexport const ASYNC_SEARCH = 'ASYNC_SEARCH'\r\n\r\n// Acceptable values of `valueConsistsOf` prop.\r\nexport const ALL = 'ALL'\r\nexport const BRANCH_PRIORITY = 'BRANCH_PRIORITY'\r\nexport const LEAF_PRIORITY = 'LEAF_PRIORITY'\r\nexport const ALL_WITH_INDETERMINATE = 'ALL_WITH_INDETERMINATE'\r\n\r\n// Acceptable values of `sortValueBy` prop.\r\nexport const ORDER_SELECTED = 'ORDER_SELECTED'\r\nexport const LEVEL = 'LEVEL'\r\nexport const INDEX = 'INDEX'\r\n\r\n// Key codes look-up table.\r\nexport const KEY_CODES = {\r\n  BACKSPACE: 8,\r\n  ENTER: 13,\r\n  ESCAPE: 27,\r\n  END: 35,\r\n  HOME: 36,\r\n  ARROW_LEFT: 37,\r\n  ARROW_UP: 38,\r\n  ARROW_RIGHT: 39,\r\n  ARROW_DOWN: 40,\r\n  DELETE: 46,\r\n}\r\n\r\n// Other constants.\r\nexport const INPUT_DEBOUNCE_DELAY = process.env.NODE_ENV === 'testing'\r\n  ? /* to speed up unit testing */ 10\r\n  : /* istanbul ignore next */ 200\r\nexport const MIN_INPUT_WIDTH = 5\r\nexport const MENU_BUFFER = 40\r\n","import fuzzysearch from 'fuzzysearch'\r\n\r\nimport {\r\n  warning,\r\n  onLeftClick, scrollIntoView,\r\n  isNaN, isPromise, once,\r\n  identity, constant, createMap,\r\n  quickDiff, last as getLast, includes, find, removeFromArray,\r\n} from '../utils'\r\n\r\nimport {\r\n  NO_PARENT_NODE,\r\n  UNCHECKED, INDETERMINATE, CHECKED,\r\n  LOAD_ROOT_OPTIONS, LOAD_CHILDREN_OPTIONS, ASYNC_SEARCH,\r\n  ALL, BRANCH_PRIORITY, LEAF_PRIORITY, ALL_WITH_INDETERMINATE,\r\n  ALL_CHILDREN, ALL_DESCENDANTS, LEAF_CHILDREN, LEAF_DESCENDANTS,\r\n  ORDER_SELECTED, LEVEL, INDEX,\r\n} from '../constants'\r\n\r\nfunction sortValueByIndex(a, b) {\r\n  let i = 0\r\n  do {\r\n    if (a.level < i) return -1\r\n    if (b.level < i) return 1\r\n    if (a.index[i] !== b.index[i]) return a.index[i] - b.index[i]\r\n    i++\r\n  } while (true)\r\n}\r\n\r\nfunction sortValueByLevel(a, b) {\r\n  return a.level === b.level\r\n    ? sortValueByIndex(a, b)\r\n    : a.level - b.level\r\n}\r\n\r\nfunction createAsyncOptionsStates() {\r\n  return {\r\n    isLoaded: false,\r\n    isLoading: false,\r\n    loadingError: '',\r\n  }\r\n}\r\n\r\nfunction stringifyOptionPropValue(value) {\r\n  if (typeof value === 'string') return value\r\n  if (typeof value === 'number' && !isNaN(value)) return value + ''\r\n  // istanbul ignore next\r\n  return ''\r\n}\r\n\r\nfunction match(enableFuzzyMatch, needle, haystack) {\r\n  return enableFuzzyMatch\r\n    ? fuzzysearch(needle, haystack)\r\n    : includes(haystack, needle)\r\n}\r\n\r\nfunction getErrorMessage(err) {\r\n  return err.message || /* istanbul ignore next */String(err)\r\n}\r\n\r\nlet instanceId = 0\r\n\r\nexport default {\r\n  provide() {\r\n    return {\r\n      // Enable access to the instance of root component of vue-treeselect\r\n      // across hierarchy.\r\n      instance: this,\r\n    }\r\n  },\r\n\r\n  props: {\r\n    /**\r\n     * Whether to allow resetting value even if there are disabled selected nodes.\r\n     */\r\n    allowClearingDisabled: {\r\n      type: Boolean,\r\n      default: false,\r\n    },\r\n\r\n    /**\r\n     * When an ancestor node is selected/deselected, whether its disabled descendants should be selected/deselected.\r\n     * You may want to use this in conjunction with `allowClearingDisabled` prop.\r\n     */\r\n    allowSelectingDisabledDescendants: {\r\n      type: Boolean,\r\n      default: false,\r\n    },\r\n\r\n    /**\r\n     * Whether the menu should be always open.\r\n     */\r\n    alwaysOpen: {\r\n      type: Boolean,\r\n      default: false,\r\n    },\r\n\r\n    /**\r\n     * Append the menu to <body />?\r\n     */\r\n    appendToBody: {\r\n      type: Boolean,\r\n      default: false,\r\n    },\r\n\r\n    /**\r\n     * Whether to enable async search mode.\r\n     */\r\n    async: {\r\n      type: Boolean,\r\n      default: false,\r\n    },\r\n\r\n    /**\r\n     * Automatically focus the component on mount?\r\n     */\r\n    autoFocus: {\r\n      type: Boolean,\r\n      default: false,\r\n    },\r\n\r\n    /**\r\n     * Automatically load root options on mount. When set to `false`, root options will be loaded when the menu is opened.\r\n     */\r\n    autoLoadRootOptions: {\r\n      type: Boolean,\r\n      default: true,\r\n    },\r\n\r\n    /**\r\n     * When user deselects a node, automatically deselect its ancestors. Applies to flat mode only.\r\n     */\r\n    autoDeselectAncestors: {\r\n      type: Boolean,\r\n      default: false,\r\n    },\r\n\r\n    /**\r\n     * When user deselects a node, automatically deselect its descendants. Applies to flat mode only.\r\n     */\r\n    autoDeselectDescendants: {\r\n      type: Boolean,\r\n      default: false,\r\n    },\r\n\r\n    /**\r\n     * When user selects a node, automatically select its ancestors. Applies to flat mode only.\r\n     */\r\n    autoSelectAncestors: {\r\n      type: Boolean,\r\n      default: false,\r\n    },\r\n\r\n    /**\r\n     * When user selects a node, automatically select its descendants. Applies to flat mode only.\r\n     */\r\n    autoSelectDescendants: {\r\n      type: Boolean,\r\n      default: false,\r\n    },\r\n\r\n    /**\r\n     * Whether pressing backspace key removes the last item if there is no text input.\r\n     */\r\n    backspaceRemoves: {\r\n      type: Boolean,\r\n      default: true,\r\n    },\r\n\r\n    /**\r\n     * Function that processes before clearing all input fields.\r\n     * Return `false` to prevent value from being cleared.\r\n     * @type {function(): (boolean|Promise<boolean>)}\r\n     */\r\n    beforeClearAll: {\r\n      type: Function,\r\n      default: constant(true),\r\n    },\r\n\r\n    /**\r\n     * Show branch nodes before leaf nodes?\r\n     */\r\n    branchNodesFirst: {\r\n      type: Boolean,\r\n      default: false,\r\n    },\r\n\r\n    /**\r\n     * Should cache results of every search request?\r\n     */\r\n    cacheOptions: {\r\n      type: Boolean,\r\n      default: true,\r\n    },\r\n\r\n    /**\r\n     * Show an \"×\" button that resets value?\r\n     */\r\n    clearable: {\r\n      type: Boolean,\r\n      default: true,\r\n    },\r\n\r\n    /**\r\n     * Title for the \"×\" button when `multiple: true`.\r\n     */\r\n    clearAllText: {\r\n      type: String,\r\n      default: 'Clear all',\r\n    },\r\n\r\n    /**\r\n     * Whether to clear the search input after selecting.\r\n     * Use only when `multiple` is `true`.\r\n     * For single-select mode, it **always** clears the input after selecting an option regardless of the prop value.\r\n     */\r\n    clearOnSelect: {\r\n      type: Boolean,\r\n      default: false,\r\n    },\r\n\r\n    /**\r\n     * Title for the \"×\" button.\r\n     */\r\n    clearValueText: {\r\n      type: String,\r\n      default: 'Clear value',\r\n    },\r\n\r\n    /**\r\n     * Whether to close the menu after selecting an option?\r\n     * Use only when `multiple` is `true`.\r\n     */\r\n    closeOnSelect: {\r\n      type: Boolean,\r\n      default: true,\r\n    },\r\n\r\n    /**\r\n     * How many levels of branch nodes should be automatically expanded when loaded.\r\n     * Set `Infinity` to make all branch nodes expanded by default.\r\n     */\r\n    defaultExpandLevel: {\r\n      type: Number,\r\n      default: 0,\r\n    },\r\n\r\n    /**\r\n     * The default set of options to show before the user starts searching. Used for async search mode.\r\n     * When set to `true`, the results for search query as a empty string will be autoloaded.\r\n     * @type {boolean|node[]}\r\n     */\r\n    defaultOptions: {\r\n      default: false,\r\n    },\r\n\r\n    /**\r\n     * Whether pressing delete key removes the last item if there is no text input.\r\n     */\r\n    deleteRemoves: {\r\n      type: Boolean,\r\n      default: true,\r\n    },\r\n\r\n    /**\r\n     * Delimiter to use to join multiple values for the hidden field value.\r\n     */\r\n    delimiter: {\r\n      type: String,\r\n      default: ',',\r\n    },\r\n\r\n    /**\r\n     * Prevent branch nodes from being selected?\r\n     */\r\n    disableBranchNodes: {\r\n      type: Boolean,\r\n      default: false,\r\n    },\r\n\r\n    /**\r\n     * Disable the control?\r\n     */\r\n    disabled: {\r\n      type: Boolean,\r\n      default: false,\r\n    },\r\n\r\n    /**\r\n     * Disable the fuzzy matching functionality?\r\n     */\r\n    disableFuzzyMatching: {\r\n      type: Boolean,\r\n      default: false,\r\n    },\r\n\r\n    /**\r\n     * If there are any selected node it should be visible so its parents should be expanded.\r\n     * Useful if you have initiate the control with at least one selected node.\r\n     */\r\n     expandParentsInMenuForSelected: {\r\n      type: Boolean,\r\n      default: false,\r\n    },\r\n\r\n    /**\r\n     * Whether to enable flat mode or not. Non-flat mode (default) means:\r\n     *   - Whenever a branch node gets checked, all its children will be checked too\r\n     *   - Whenever a branch node has all children checked, the branch node itself will be checked too\r\n     * Set `true` to disable this mechanism\r\n     */\r\n    flat: {\r\n      type: Boolean,\r\n      default: false,\r\n    },\r\n\r\n    /**\r\n     * Only show the nodes that match the search value directly, excluding its ancestors.\r\n     *\r\n     * @type {Object}\r\n     */\r\n     flattenSearchResults: {\r\n      type: Boolean,\r\n      default: false,\r\n    },\r\n\r\n    /**\r\n     * Will be passed with all events as the last param.\r\n     * Useful for identifying events origin.\r\n    */\r\n    instanceId: {\r\n      // Add two trailing \"$\" to distinguish from explictly specified ids.\r\n      default: () => `${instanceId++}$$`,\r\n      type: [ String, Number ],\r\n    },\r\n\r\n    /**\r\n     * Joins multiple values into a single form field with the `delimiter` (legacy mode).\r\n    */\r\n    joinValues: {\r\n      type: Boolean,\r\n      default: false,\r\n    },\r\n\r\n    /**\r\n     * Limit the display of selected options.\r\n     * The rest will be hidden within the limitText string.\r\n     */\r\n    limit: {\r\n      type: Number,\r\n      default: Infinity,\r\n    },\r\n\r\n    /**\r\n     * Function that processes the message shown when selected elements pass the defined limit.\r\n     * @type {function(number): string}\r\n     */\r\n    limitText: {\r\n      type: Function,\r\n      default: function limitTextDefault(count) { // eslint-disable-line func-name-matching\r\n        return `and ${count} more`\r\n      },\r\n    },\r\n\r\n    /**\r\n     * Text displayed when loading options.\r\n     */\r\n    loadingText: {\r\n      type: String,\r\n      default: 'Loading...',\r\n    },\r\n\r\n    /**\r\n     * Used for dynamically loading options.\r\n     * @type {function({action: string, callback: (function((Error|string)=): void), parentNode: node=, instanceId}): void}\r\n     */\r\n    loadOptions: {\r\n      type: Function,\r\n    },\r\n\r\n    /**\r\n     * Which node properties to filter on.\r\n     */\r\n    matchKeys: {\r\n      type: Array,\r\n      default: constant([ 'label' ]),\r\n    },\r\n\r\n    /**\r\n     * The maximum number of matched leaf/branch nodes which should be expanded during local search\r\n     */\r\n    maxExpandMatchesOnSearch: {\r\n      type: Number,\r\n      default: Infinity,\r\n    },\r\n\r\n    /**\r\n     * Sets `maxHeight` style value of the menu.\r\n     */\r\n    maxHeight: {\r\n      type: Number,\r\n      default: 300,\r\n    },\r\n\r\n    /**\r\n     * Set `true` to allow selecting multiple options (a.k.a., multi-select mode).\r\n     */\r\n    multiple: {\r\n      type: Boolean,\r\n      default: false,\r\n    },\r\n\r\n    /**\r\n     * Generates a hidden <input /> tag with this field name for html forms.\r\n     */\r\n    name: {\r\n      type: String,\r\n    },\r\n\r\n    /**\r\n     * Text displayed when a branch node has no children.\r\n     */\r\n    noChildrenText: {\r\n      type: String,\r\n      default: 'No sub-options.',\r\n    },\r\n\r\n    /**\r\n     * On search the options should not expand to show matched nodes at all\r\n     */\r\n    noExpandOnSearch: {\r\n      type: Boolean,\r\n      default: false,\r\n    },\r\n\r\n    /**\r\n     * Text displayed when there are no available options.\r\n     */\r\n    noOptionsText: {\r\n      type: String,\r\n      default: 'No options available.',\r\n    },\r\n\r\n    /**\r\n     * Text displayed when there are no matching search results.\r\n     */\r\n    noResultsText: {\r\n      type: String,\r\n      default: 'No results found...',\r\n    },\r\n\r\n    /**\r\n     * Used for normalizing source data.\r\n     * @type {function(node, instanceId): node}\r\n     */\r\n    normalizer: {\r\n      type: Function,\r\n      default: identity,\r\n    },\r\n\r\n    /**\r\n     * By default (`auto`), the menu will open below the control. If there is not\r\n     * enough space, vue-treeselect will automatically flip the menu.\r\n     * You can use one of other four options to force the menu to be always opened\r\n     * to specified direction.\r\n     * Acceptable values:\r\n     *   - `\"auto\"`\r\n     *   - `\"below\"`\r\n     *   - `\"bottom\"`\r\n     *   - `\"above\"`\r\n     *   - `\"top\"`\r\n     */\r\n    openDirection: {\r\n      type: String,\r\n      default: 'auto',\r\n      validator(value) {\r\n        const acceptableValues = [ 'auto', 'top', 'bottom', 'above', 'below' ]\r\n        return includes(acceptableValues, value)\r\n      },\r\n    },\r\n\r\n    /**\r\n     * Whether to automatically open the menu when the control is clicked.\r\n     */\r\n    openOnClick: {\r\n      type: Boolean,\r\n      default: true,\r\n    },\r\n\r\n    /**\r\n     * Whether to automatically open the menu when the control is focused.\r\n     */\r\n    openOnFocus: {\r\n      type: Boolean,\r\n      default: false,\r\n    },\r\n\r\n    /**\r\n     * Array of available options.\r\n     * @type {node[]}\r\n     */\r\n    options: {\r\n      type: Array,\r\n    },\r\n\r\n    /**\r\n     * Field placeholder, displayed when there's no value.\r\n     */\r\n    placeholder: {\r\n      type: String,\r\n      default: 'Select...',\r\n    },\r\n\r\n    /**\r\n     * Applies HTML5 required attribute when needed.\r\n     */\r\n    required: {\r\n      type: Boolean,\r\n      default: false,\r\n    },\r\n\r\n    /**\r\n     * Text displayed asking user whether to retry loading children options.\r\n     */\r\n    retryText: {\r\n      type: String,\r\n      default: 'Retry?',\r\n    },\r\n\r\n    /**\r\n     * Title for the retry button.\r\n     */\r\n    retryTitle: {\r\n      type: String,\r\n      default: 'Click to retry',\r\n    },\r\n\r\n    /**\r\n     * Set selected option to the center of the menu, if possible\r\n     * \r\n     * @remark If it is set than save scroll position won't work\r\n     */\r\n    scrollPositionOnCenter: {\r\n      type: Boolean,\r\n      default: false\r\n    },\r\n\r\n    /**\r\n     * Enable searching feature?\r\n     */\r\n    searchable: {\r\n      type: Boolean,\r\n      default: true,\r\n    },\r\n\r\n    /**\r\n     * Minimum number of character after the search should be preformed\r\n     */\r\n    searchMinInputLength: {\r\n      type: Number,\r\n      default: 1,\r\n    },\r\n\r\n    /**\r\n     * Search in ancestor nodes too.\r\n     */\r\n    searchNested: {\r\n      type: Boolean,\r\n      default: false,\r\n    },\r\n\r\n    /**\r\n     * Text tip to prompt for async search.\r\n     */\r\n    searchPromptText: {\r\n      type: String,\r\n      default: 'Type to search...',\r\n    },\r\n\r\n    /**\r\n     * Whether to show a children count next to the label of each branch node.\r\n     */\r\n    showCount: {\r\n      type: Boolean,\r\n      default: false,\r\n    },\r\n\r\n    /**\r\n     * Used in conjunction with `showCount` to specify which type of count number should be displayed.\r\n     * Acceptable values:\r\n     *   - \"ALL_CHILDREN\"\r\n     *   - \"ALL_DESCENDANTS\"\r\n     *   - \"LEAF_CHILDREN\"\r\n     *   - \"LEAF_DESCENDANTS\"\r\n     */\r\n    showCountOf: {\r\n      type: String,\r\n      default: ALL_CHILDREN,\r\n      validator(value) {\r\n        const acceptableValues = [ ALL_CHILDREN, ALL_DESCENDANTS, LEAF_CHILDREN, LEAF_DESCENDANTS ]\r\n        return includes(acceptableValues, value)\r\n      },\r\n    },\r\n\r\n    /**\r\n     * Whether to show children count when searching.\r\n     * Fallbacks to the value of `showCount` when not specified.\r\n     * @type {boolean}\r\n     */\r\n    showCountOnSearch: null,\r\n\r\n    /**\r\n     * If there is no selection than this node will be shown in menu if you open it.\r\n     * \r\n     * @remark - If set than save scroll position won't work.\r\n     */\r\n    showNodeWhenNoSelection: {\r\n      type: String,\r\n      default: null\r\n    },\r\n\r\n    /**\r\n     * In which order the selected options should be displayed in trigger & sorted in `value` array.\r\n     * Used for multi-select mode only.\r\n     * Acceptable values:\r\n     *   - \"ORDER_SELECTED\"\r\n     *   - \"LEVEL\"\r\n     *   - \"INDEX\"\r\n     */\r\n    sortValueBy: {\r\n      type: String,\r\n      default: ORDER_SELECTED,\r\n      validator(value) {\r\n        const acceptableValues = [ ORDER_SELECTED, LEVEL, INDEX ]\r\n        return includes(acceptableValues, value)\r\n      },\r\n    },\r\n\r\n    /**\r\n     * Tab index of the control.\r\n     */\r\n    tabIndex: {\r\n      type: Number,\r\n      default: 0,\r\n    },\r\n\r\n    /**\r\n     * For node disable state use only isDisabled property.\r\n     * \r\n     * This is useful when we are not in flat mode and want have selectable nodes of a disabled parent.\r\n     * By default in non-flat mode if a node has a disabled parent it will be disabled also.\r\n     */\r\n    useOnlyIsDisabled: {\r\n      type: Boolean,\r\n      default: false\r\n    },\r\n\r\n    /**\r\n     * The value of the control.\r\n     * Should be `id` or `node` object for single-select mode, or an array of `id` or `node` object for multi-select mode.\r\n     * Its format depends on the `valueFormat` prop.\r\n     * For most cases, just use `v-model` instead.\r\n     * @type {?Array}\r\n     */\r\n    value: null,\r\n\r\n    /**\r\n     * Which kind of nodes should be included in the `value` array in multi-select mode.\r\n     * Acceptable values:\r\n     *   - \"ALL\" - Any node that is checked will be included in the `value` array\r\n     *   - \"BRANCH_PRIORITY\" (default) - If a branch node is checked, all its descendants will be excluded in the `value` array\r\n     *   - \"LEAF_PRIORITY\" - If a branch node is checked, this node itself and its branch descendants will be excluded from the `value` array but its leaf descendants will be included\r\n     *   - \"ALL_WITH_INDETERMINATE\" - Any node that is checked will be included in the `value` array, plus indeterminate nodes\r\n     */\r\n    valueConsistsOf: {\r\n      type: String,\r\n      default: BRANCH_PRIORITY,\r\n      validator(value) {\r\n        const acceptableValues = [ ALL, BRANCH_PRIORITY, LEAF_PRIORITY, ALL_WITH_INDETERMINATE ]\r\n        return includes(acceptableValues, value)\r\n      },\r\n    },\r\n\r\n    /**\r\n     * Format of `value` prop.\r\n     * Note that, when set to `\"object\"`, only `id` & `label` properties are required in each `node` object in `value` prop.\r\n     * Acceptable values:\r\n     *   - \"id\"\r\n     *   - \"object\"\r\n     */\r\n    valueFormat: {\r\n      type: String,\r\n      default: 'id',\r\n    },\r\n\r\n    /**\r\n     * z-index of the menu.\r\n     */\r\n    zIndex: {\r\n      type: [ Number, String ],\r\n      default: 999,\r\n    },\r\n  },\r\n\r\n  data() {\r\n    return {\r\n      trigger: {\r\n        // Is the control focused?\r\n        isFocused: false,\r\n        // User entered search query - value of the input.\r\n        searchQuery: '',\r\n      },\r\n\r\n      menu: {\r\n        // Is the menu opened?\r\n        isOpen: false,\r\n        // Id of current highlighted option.\r\n        current: null,\r\n        // The scroll position before last menu closing.\r\n        lastScrollPosition: 0,\r\n        // Which direction to open the menu.\r\n        placement: 'bottom',\r\n      },\r\n\r\n      forest: {\r\n        // Normalized options.\r\n        normalizedOptions: [],\r\n        // <id, node> map for quick look-up.\r\n        nodeMap: createMap(),\r\n        // <id, checkedState> map, used for multi-select mode.\r\n        checkedStateMap: createMap(),\r\n        // Id list of all selected options.\r\n        selectedNodeIds: this.extractCheckedNodeIdsFromValue(),\r\n        // <id, true> map for fast checking:\r\n        //   if (forest.selectedNodeIds.indexOf(id) !== -1) forest.selectedNodeMap[id] === true\r\n        selectedNodeMap: createMap(),\r\n      },\r\n\r\n      // States of root options.\r\n      rootOptionsStates: createAsyncOptionsStates(),\r\n\r\n      localSearch: {\r\n        // Has user entered any query to search local options?\r\n        active: false,\r\n        // Has any options matched the search query?\r\n        noResults: true,\r\n        // <id, countObject> map for counting matched children/descendants.\r\n        countMap: createMap(),\r\n      },\r\n\r\n      // <searchQuery, remoteSearchEntry> map.\r\n      remoteSearch: createMap(),\r\n    }\r\n  },\r\n\r\n  computed: {\r\n    /* eslint-disable valid-jsdoc */\r\n    /**\r\n     * Normalized nodes that have been selected.\r\n     * @type {node[]}\r\n     */\r\n    selectedNodes() {\r\n      return this.forest.selectedNodeIds.map(this.getNode)\r\n    },\r\n    /**\r\n     * Id list of selected nodes with `sortValueBy` prop applied.\r\n     * @type {nodeId[]}\r\n     */\r\n    internalValue() {\r\n      let internalValue\r\n\r\n      // istanbul ignore else\r\n      if (this.single || this.flat || this.disableBranchNodes || this.valueConsistsOf === ALL) {\r\n        internalValue = this.forest.selectedNodeIds.slice()\r\n      } else if (this.valueConsistsOf === BRANCH_PRIORITY) {\r\n        internalValue = this.forest.selectedNodeIds.filter(id => {\r\n          const node = this.getNode(id)\r\n          if (node.isRootNode) return true\r\n          return !this.isSelected(node.parentNode)\r\n        })\r\n      } else if (this.valueConsistsOf === LEAF_PRIORITY) {\r\n        internalValue = this.forest.selectedNodeIds.filter(id => {\r\n          const node = this.getNode(id)\r\n          if (node.isLeaf) return true\r\n          return node.children.length === 0\r\n        })\r\n      } else if (this.valueConsistsOf === ALL_WITH_INDETERMINATE) {\r\n        const indeterminateNodeIds = []\r\n        internalValue = this.forest.selectedNodeIds.slice()\r\n        this.selectedNodes.forEach(selectedNode => {\r\n          selectedNode.ancestors.forEach(ancestor => {\r\n            if (includes(indeterminateNodeIds, ancestor.id)) return\r\n            if (includes(internalValue, ancestor.id)) return\r\n            indeterminateNodeIds.push(ancestor.id)\r\n          })\r\n        })\r\n        internalValue.push(...indeterminateNodeIds)\r\n      }\r\n\r\n      if (this.sortValueBy === LEVEL) {\r\n        internalValue.sort((a, b) => sortValueByLevel(this.getNode(a), this.getNode(b)))\r\n      } else if (this.sortValueBy === INDEX) {\r\n        internalValue.sort((a, b) => sortValueByIndex(this.getNode(a), this.getNode(b)))\r\n      }\r\n\r\n      return internalValue\r\n    },\r\n    /**\r\n     * Has any option been selected?\r\n     * @type {boolean}\r\n     */\r\n    hasValue() {\r\n      return this.internalValue.length > 0\r\n    },\r\n    /**\r\n     * Single-select mode?\r\n     * @type {boolean}\r\n     */\r\n    single() {\r\n      return !this.multiple\r\n    },\r\n    /**\r\n     * Id list of nodes displayed in the menu. Nodes that are considered NOT visible:\r\n     *   - descendants of a collapsed branch node\r\n     *   - in local search mode, nodes that are not matched, unless\r\n     *       - it's a branch node and has matched descendants\r\n     *       - it's a leaf node and its parent node is explicitly set to show all children\r\n     * @type {id[]}\r\n     */\r\n    visibleOptionIds() {\r\n      const visibleOptionIds = []\r\n\r\n      this.traverseAllNodesByIndex(node => {\r\n        if (!this.localSearch.active || this.shouldOptionBeIncludedInSearchResult(node)) {\r\n          visibleOptionIds.push(node.id)\r\n        }\r\n        // Skip the traversal of descendants of a branch node if it's not expanded.\r\n        if (node.isBranch && !this.shouldExpand(node)) {\r\n          return false\r\n        }\r\n      })\r\n\r\n      return visibleOptionIds\r\n    },\r\n    /**\r\n     * Has any option should be displayed in the menu?\r\n     * @type {boolean}\r\n     */\r\n    hasVisibleOptions() {\r\n      return this.visibleOptionIds.length !== 0\r\n    },\r\n    /**\r\n     * Should show children count when searching?\r\n     * @type {boolean}\r\n     */\r\n    showCountOnSearchComputed() {\r\n      // Vue doesn't allow setting default prop value based on another prop value.\r\n      // So use computed property as a workaround.\r\n      // https://github.com/vuejs/vue/issues/6358\r\n      return typeof this.showCountOnSearch === 'boolean'\r\n        ? this.showCountOnSearch\r\n        : this.showCount\r\n    },\r\n    /**\r\n     * Is there any branch node?\r\n     * @type {boolean}\r\n     */\r\n    hasBranchNodes() {\r\n      return this.forest.normalizedOptions.some(rootNode => rootNode.isBranch)\r\n    },\r\n    shouldFlattenOptions() {\r\n      return this.localSearch.active && this.flattenSearchResults\r\n    },\r\n    /* eslint-enable valid-jsdoc */\r\n  },\r\n\r\n  watch: {\r\n    alwaysOpen(newValue) {\r\n      if (newValue) this.openMenu()\r\n      else this.closeMenu()\r\n    },\r\n\r\n    branchNodesFirst() {\r\n      this.initialize()\r\n    },\r\n\r\n    disabled(newValue) {\r\n      // force close the menu after disabling the control\r\n      if (newValue && this.menu.isOpen) this.closeMenu()\r\n      else if (!newValue && !this.menu.isOpen && this.alwaysOpen) this.openMenu()\r\n    },\r\n\r\n    flat() {\r\n      this.initialize()\r\n    },\r\n\r\n    internalValue(newValue, oldValue) {\r\n      const hasChanged = quickDiff(newValue, oldValue)\r\n      // #122\r\n      // Vue would trigger this watcher when `newValue` and `oldValue` are shallow-equal.\r\n      // We emit the `input` event only when the value actually changes.\r\n      if (hasChanged) this.$emit('input', this.getValue(), this.getInstanceId())\r\n    },\r\n\r\n    matchKeys() {\r\n      this.initialize()\r\n    },\r\n\r\n    multiple(newValue) {\r\n      // We need to rebuild the state when switching from single-select mode\r\n      // to multi-select mode.\r\n      // istanbul ignore else\r\n      if (newValue) this.buildForestState()\r\n    },\r\n\r\n    options: {\r\n      handler() {\r\n        if (this.async) return\r\n        // Re-initialize options when the `options` prop has changed.\r\n        this.initialize()\r\n        this.rootOptionsStates.isLoaded = Array.isArray(this.options)\r\n      },\r\n      deep: true,\r\n      immediate: true,\r\n    },\r\n\r\n    'trigger.searchQuery'() {\r\n      if (this.async) {\r\n        this.handleRemoteSearch()\r\n      } else {\r\n        this.handleLocalSearch()\r\n      }\r\n\r\n      this.$emit('search-change', this.trigger.searchQuery, this.getInstanceId())\r\n    },\r\n\r\n    useOnlyIsDisabled() {\r\n      this.initialize()\r\n    },\r\n\r\n    value() {\r\n      const nodeIdsFromValue = this.extractCheckedNodeIdsFromValue()\r\n      const hasChanged = quickDiff(nodeIdsFromValue, this.internalValue)\r\n      if (hasChanged) {\r\n        this.fixSelectedNodeIds(nodeIdsFromValue)\r\n        this.expandParentNodesOfSelected()\r\n      }\r\n      this.showDefaultNodeIfNoSelection()\r\n    },\r\n  },\r\n\r\n  methods: {\r\n    verifyProps() {\r\n      warning(\r\n        () => this.async ? this.searchable : true,\r\n        () => 'For async search mode, the value of \"searchable\" prop must be true.',\r\n      )\r\n\r\n      if (this.options == null && !this.loadOptions) {\r\n        warning(\r\n          () => false,\r\n          () => 'Are you meant to dynamically load options? You need to use \"loadOptions\" prop.',\r\n        )\r\n      }\r\n\r\n      if (this.flat) {\r\n        warning(\r\n          () => this.multiple,\r\n          () => 'You are using flat mode. But you forgot to add \"multiple=true\"?',\r\n        )\r\n      }\r\n\r\n      if (!this.flat) {\r\n        const propNames = [\r\n          'autoSelectAncestors',\r\n          'autoSelectDescendants',\r\n          'autoDeselectAncestors',\r\n          'autoDeselectDescendants',\r\n        ]\r\n\r\n        propNames.forEach(propName => {\r\n          warning(\r\n            () => !this[propName],\r\n            () => `\"${propName}\" only applies to flat mode.`,\r\n          )\r\n        })\r\n      }\r\n    },\r\n\r\n    resetFlags() {\r\n      this._blurOnSelect = false\r\n    },\r\n\r\n    initialize() {\r\n      const options = this.async\r\n        ? this.getRemoteSearchEntry().options\r\n        : this.options\r\n\r\n      if (Array.isArray(options)) {\r\n        // In case we are re-initializing options, keep the old state tree temporarily.\r\n        const prevNodeMap = this.forest.nodeMap\r\n        this.forest.nodeMap = createMap()\r\n        this.keepDataOfSelectedNodes(prevNodeMap)\r\n        this.forest.normalizedOptions = this.normalize(NO_PARENT_NODE, options, prevNodeMap)\r\n        // Cases that need fixing `selectedNodeIds`:\r\n        //   1) Children options of a checked node have been delayed loaded,\r\n        //      we should also mark these children as checked. (multi-select mode)\r\n        //   2) Root options have been delayed loaded, we need to initialize states\r\n        //      of these nodes. (multi-select mode)\r\n        //   3) Async search mode.\r\n        this.fixSelectedNodeIds(this.internalValue)\r\n      } else {\r\n        this.forest.normalizedOptions = []\r\n      }\r\n      this.expandParentNodesOfSelected()\r\n      this.$nextTick(this.showDefaultNodeIfNoSelection);\r\n    },\r\n\r\n    getInstanceId() {\r\n      return this.instanceId == null ? this.id : this.instanceId\r\n    },\r\n\r\n    getValue() {\r\n      if (this.valueFormat === 'id') {\r\n        return this.multiple\r\n          ? this.internalValue.slice()\r\n          : this.internalValue[0]\r\n      }\r\n\r\n      const rawNodes = this.internalValue.map(id => this.getNode(id).raw)\r\n      return this.multiple ? rawNodes : rawNodes[0]\r\n    },\r\n\r\n    getNode(nodeId) {\r\n      warning(\r\n        () => nodeId != null,\r\n        () => `Invalid node id: ${nodeId}`,\r\n      )\r\n\r\n      if (nodeId == null) return null\r\n\r\n      return nodeId in this.forest.nodeMap\r\n        ? this.forest.nodeMap[nodeId]\r\n        : this.createFallbackNode(nodeId)\r\n    },\r\n\r\n    createFallbackNode(id) {\r\n      // In case there is a default selected node that is not loaded into the tree yet,\r\n      // we create a fallback node to keep the component working.\r\n      // When the real data is loaded, we'll override this fake node.\r\n\r\n      const raw = this.extractNodeFromValue(id)\r\n      const label = this.enhancedNormalizer(raw).label || `${id} (unknown)`\r\n      const fallbackNode = {\r\n        id,\r\n        label,\r\n        ancestors: [],\r\n        parentNode: NO_PARENT_NODE,\r\n        isFallbackNode: true,\r\n        isRootNode: true,\r\n        isLeaf: true,\r\n        isBranch: false,\r\n        isDisabled: false,\r\n        isNew: false,\r\n        index: [ -1 ],\r\n        level: 0,\r\n        raw,\r\n      }\r\n\r\n      return this.$set(this.forest.nodeMap, id, fallbackNode)\r\n    },\r\n\r\n    extractCheckedNodeIdsFromValue() {\r\n      if (this.value == null) return []\r\n\r\n      if (this.valueFormat === 'id') {\r\n        return this.multiple\r\n          ? this.value.slice()\r\n          : [ this.value ]\r\n      }\r\n\r\n      return (this.multiple ? this.value : [ this.value ])\r\n        .map(node => this.enhancedNormalizer(node))\r\n        .map(node => node.id)\r\n    },\r\n\r\n    extractNodeFromValue(id) {\r\n      const defaultNode = { id }\r\n\r\n      if (this.valueFormat === 'id') {\r\n        return defaultNode\r\n      }\r\n\r\n      const valueArray = this.multiple\r\n        ? Array.isArray(this.value) ? this.value : []\r\n        : this.value ? [ this.value ] : []\r\n      const matched = find(\r\n        valueArray,\r\n        node => node && this.enhancedNormalizer(node).id === id,\r\n      )\r\n\r\n      return matched || defaultNode\r\n    },\r\n\r\n    fixSelectedNodeIds(nodeIdListOfPrevValue) {\r\n      let nextSelectedNodeIds = []\r\n\r\n      // istanbul ignore else\r\n      if (this.single || this.flat || this.disableBranchNodes || this.valueConsistsOf === ALL) {\r\n        nextSelectedNodeIds = nodeIdListOfPrevValue\r\n      } else if (this.valueConsistsOf === BRANCH_PRIORITY) {\r\n        nodeIdListOfPrevValue.forEach(nodeId => {\r\n          nextSelectedNodeIds.push(nodeId)\r\n          const node = this.getNode(nodeId)\r\n          if (node.isBranch) this.traverseDescendantsBFS(node, descendant => {\r\n            nextSelectedNodeIds.push(descendant.id)\r\n          })\r\n        })\r\n      } else if (this.valueConsistsOf === LEAF_PRIORITY) {\r\n        const map = createMap()\r\n        const queue = nodeIdListOfPrevValue.slice()\r\n        while (queue.length) {\r\n          const nodeId = queue.shift()\r\n          const node = this.getNode(nodeId)\r\n          nextSelectedNodeIds.push(nodeId)\r\n          if (node.isRootNode) continue\r\n          if (!(node.parentNode.id in map)) map[node.parentNode.id] = node.parentNode.children.length\r\n          if (--map[node.parentNode.id] === 0) queue.push(node.parentNode.id)\r\n        }\r\n      } else if (this.valueConsistsOf === ALL_WITH_INDETERMINATE) {\r\n        const map = createMap()\r\n        const queue = nodeIdListOfPrevValue.filter(nodeId => {\r\n          const node = this.getNode(nodeId)\r\n          return node.isLeaf || node.children.length === 0\r\n        })\r\n        while (queue.length) {\r\n          const nodeId = queue.shift()\r\n          const node = this.getNode(nodeId)\r\n          nextSelectedNodeIds.push(nodeId)\r\n          if (node.isRootNode) continue\r\n          if (!(node.parentNode.id in map)) map[node.parentNode.id] = node.parentNode.children.length\r\n          if (--map[node.parentNode.id] === 0) queue.push(node.parentNode.id)\r\n        }\r\n      }\r\n\r\n      const hasChanged = quickDiff(this.forest.selectedNodeIds, nextSelectedNodeIds)\r\n      // If `nextSelectedNodeIds` doesn't actually differ from old `selectedNodeIds`,\r\n      // we don't make the assignment to avoid triggering its watchers which may cause\r\n      // unnecessary calculations.\r\n      if (hasChanged) this.forest.selectedNodeIds = nextSelectedNodeIds\r\n\r\n      this.buildForestState()\r\n    },\r\n\r\n    keepDataOfSelectedNodes(prevNodeMap) {\r\n      // In case there is any selected node that is not present in the new `options` array.\r\n      // It could be useful for async search mode.\r\n      this.forest.selectedNodeIds.forEach(id => {\r\n        if (!prevNodeMap[id]) return\r\n        const node = {\r\n          ...prevNodeMap[id],\r\n          isFallbackNode: true,\r\n        }\r\n        this.$set(this.forest.nodeMap, id, node)\r\n      })\r\n    },\r\n\r\n    isSelected(node) {\r\n      // whether a node is selected (single-select mode) or fully-checked (multi-select mode)\r\n      return this.forest.selectedNodeMap[node.id] === true\r\n    },\r\n\r\n    traverseDescendantsBFS(parentNode, callback) {\r\n      // istanbul ignore if\r\n      if (!parentNode.isBranch) return\r\n      const queue = parentNode.children.slice()\r\n      while (queue.length) {\r\n        const currNode = queue[0]\r\n        if (currNode.isBranch) queue.push(...currNode.children)\r\n        callback(currNode)\r\n        queue.shift()\r\n      }\r\n    },\r\n\r\n    traverseDescendantsDFS(parentNode, callback) {\r\n      if (!parentNode.isBranch) return\r\n      parentNode.children.forEach(child => {\r\n        // deep-level node first\r\n        this.traverseDescendantsDFS(child, callback)\r\n        callback(child)\r\n      })\r\n    },\r\n\r\n    traverseAllNodesDFS(callback) {\r\n      this.forest.normalizedOptions.forEach(rootNode => {\r\n        // deep-level node first\r\n        this.traverseDescendantsDFS(rootNode, callback)\r\n        callback(rootNode)\r\n      })\r\n    },\r\n\r\n    traverseAllNodesByIndex(callback) {\r\n      const walk = parentNode => {\r\n        parentNode.children.forEach(child => {\r\n          if (callback(child) !== false && child.isBranch) {\r\n            walk(child)\r\n          }\r\n        })\r\n      }\r\n\r\n      // To simplify the code logic of traversal,\r\n      // we create a fake root node that holds all the root options.\r\n      walk({ children: this.forest.normalizedOptions })\r\n    },\r\n\r\n    toggleClickOutsideEvent(enabled) {\r\n      if (enabled) {\r\n        document.addEventListener('mousedown', this.handleClickOutside, false)\r\n      } else {\r\n        document.removeEventListener('mousedown', this.handleClickOutside, false)\r\n      }\r\n    },\r\n\r\n    getValueContainer() {\r\n      return this.$refs.control.$refs['value-container']\r\n    },\r\n\r\n    getInput() {\r\n      return this.getValueContainer().$refs.input\r\n    },\r\n\r\n    focusInput() {\r\n      this.getInput().focus()\r\n    },\r\n\r\n    blurInput() {\r\n      this.getInput().blur()\r\n    },\r\n\r\n    handleMouseDown: onLeftClick(function handleMouseDown(evt) {\r\n      evt.preventDefault()\r\n      evt.stopPropagation()\r\n\r\n      if (this.disabled) return\r\n\r\n      const isClickedOnValueContainer = this.getValueContainer().$el.contains(evt.target)\r\n      if (isClickedOnValueContainer && !this.menu.isOpen && (this.openOnClick || this.trigger.isFocused)) {\r\n        this.openMenu()\r\n      }\r\n\r\n      if (this._blurOnSelect) {\r\n        this.blurInput()\r\n      } else {\r\n        // Focus the input or prevent blurring.\r\n        this.focusInput()\r\n      }\r\n\r\n      this.resetFlags()\r\n    }),\r\n\r\n    handleClickOutside(evt) {\r\n      // istanbul ignore else\r\n      if (this.$refs.wrapper && !this.$refs.wrapper.contains(evt.target)) {\r\n        this.blurInput()\r\n        this.closeMenu()\r\n      }\r\n    },\r\n\r\n    handleLocalSearch() {\r\n      const { searchQuery } = this.trigger\r\n      const done = () => this.resetHighlightedOptionWhenNecessary(true)\r\n\r\n      if (!searchQuery || searchQuery.length < this.searchMinInputLength) {\r\n        // Exit sync search mode.\r\n        this.localSearch.active = false\r\n        return done()\r\n      }\r\n\r\n      // Enter sync search mode.\r\n      this.localSearch.active = true\r\n\r\n      // Reset states.\r\n      this.localSearch.noResults = true\r\n      this.traverseAllNodesDFS(node => {\r\n        if (node.isBranch) {\r\n          node.isExpandedOnSearch = false\r\n          node.showAllChildrenOnSearch = false\r\n          node.isMatched = false\r\n          node.hasMatchedDescendants = false\r\n          this.$set(this.localSearch.countMap, node.id, {\r\n            [ALL_CHILDREN]: 0,\r\n            [ALL_DESCENDANTS]: 0,\r\n            [LEAF_CHILDREN]: 0,\r\n            [LEAF_DESCENDANTS]: 0,\r\n          })\r\n        }\r\n      })\r\n\r\n      const lowerCasedSearchQuery = searchQuery.trim().toLocaleLowerCase()\r\n      const splitSearchQuery = lowerCasedSearchQuery.replace(/\\s+/g, ' ').split(' ')\r\n      let maxExpandMatchesOnSearch = this.maxExpandMatchesOnSearch\r\n      this.traverseAllNodesDFS(node => {\r\n        if (this.searchNested && splitSearchQuery.length > 1) {\r\n          node.isMatched = splitSearchQuery.every(filterValue =>\r\n            match(false, filterValue, node.nestedSearchLabel),\r\n          )\r\n        } else {\r\n          node.isMatched = this.matchKeys.some(matchKey =>\r\n            match(!this.disableFuzzyMatching, lowerCasedSearchQuery, node.lowerCased[matchKey]),\r\n          )\r\n        }\r\n\r\n        if (node.isMatched) {\r\n          this.localSearch.noResults = false\r\n          node.ancestors.forEach(ancestor => this.localSearch.countMap[ancestor.id][ALL_DESCENDANTS]++)\r\n          if (node.isLeaf) node.ancestors.forEach(ancestor => this.localSearch.countMap[ancestor.id][LEAF_DESCENDANTS]++)\r\n          if (node.parentNode !== NO_PARENT_NODE) {\r\n            this.localSearch.countMap[node.parentNode.id][ALL_CHILDREN] += 1\r\n            // istanbul ignore else\r\n            if (node.isLeaf) this.localSearch.countMap[node.parentNode.id][LEAF_CHILDREN] += 1\r\n          }\r\n        }\r\n\r\n        if (\r\n          (node.isMatched || (node.isBranch && node.hasMatchedDescendants)) &&\r\n          node.parentNode !== NO_PARENT_NODE\r\n        ) {\r\n          if (!this.noExpandOnSearch) {\r\n            if (node.isMatched && maxExpandMatchesOnSearch) {\r\n              node.parentNode.isExpandedOnSearch = true\r\n              if (maxExpandMatchesOnSearch !== Infinity) {\r\n                --maxExpandMatchesOnSearch\r\n              }\r\n            } else if (node.isBranch && node.isExpandedOnSearch) {\r\n              node.parentNode.isExpandedOnSearch = true\r\n            }\r\n          }\r\n\r\n          node.parentNode.hasMatchedDescendants = true\r\n        }\r\n      })\r\n\r\n      done()\r\n    },\r\n\r\n    handleRemoteSearch() {\r\n      const { searchQuery } = this.trigger\r\n      const entry = this.getRemoteSearchEntry()\r\n      const done = () => {\r\n        this.initialize()\r\n        this.resetHighlightedOptionWhenNecessary(true)\r\n      }\r\n\r\n      if ((searchQuery === '' || this.cacheOptions) && entry.isLoaded) {\r\n        return done()\r\n      }\r\n\r\n      this.callLoadOptionsProp({\r\n        action: ASYNC_SEARCH,\r\n        args: { searchQuery },\r\n        isPending() {\r\n          return entry.isLoading\r\n        },\r\n        start: () => {\r\n          entry.isLoading = true\r\n          entry.isLoaded = false\r\n          entry.loadingError = ''\r\n        },\r\n        succeed: options => {\r\n          entry.isLoaded = true\r\n          entry.options = options\r\n          // When the request completes, the search query may have changed.\r\n          // We only show these options if they are for the current search query.\r\n          if (this.trigger.searchQuery === searchQuery) done()\r\n        },\r\n        fail: err => {\r\n          entry.loadingError = getErrorMessage(err)\r\n        },\r\n        end: () => {\r\n          entry.isLoading = false\r\n        },\r\n      })\r\n    },\r\n\r\n    getRemoteSearchEntry() {\r\n      const { searchQuery } = this.trigger\r\n      const entry = this.remoteSearch[searchQuery] || {\r\n        ...createAsyncOptionsStates(),\r\n        options: [],\r\n      }\r\n\r\n      // Vue doesn't support directly watching on objects.\r\n      this.$watch(\r\n        () => entry.options,\r\n        () => {\r\n          // TODO: potential redundant re-initialization.\r\n          if (this.trigger.searchQuery === searchQuery) this.initialize()\r\n        },\r\n        { deep: true },\r\n      )\r\n\r\n      if (searchQuery === '') {\r\n        if (Array.isArray(this.defaultOptions)) {\r\n          entry.options = this.defaultOptions\r\n          entry.isLoaded = true\r\n          return entry\r\n        } else if (this.defaultOptions !== true) {\r\n          entry.isLoaded = true\r\n          return entry\r\n        }\r\n      }\r\n\r\n      if (!this.remoteSearch[searchQuery]) {\r\n        this.$set(this.remoteSearch, searchQuery, entry)\r\n      }\r\n\r\n      return entry\r\n    },\r\n\r\n    shouldExpand(node) {\r\n      return this.localSearch.active ? node.isExpandedOnSearch : node.isExpanded\r\n    },\r\n\r\n    shouldOptionBeIncludedInSearchResult(node) {\r\n      // 1) This option is matched.\r\n      if (node.isMatched) return true\r\n      // 2) This option is not matched, but has matched descendant(s).\r\n      if (node.isBranch && node.hasMatchedDescendants && !this.flattenSearchResults) return true\r\n      // 3) This option's parent has no matched descendants,\r\n      //    but after being expanded, all its children should be shown.\r\n      if (!node.isRootNode && node.parentNode.showAllChildrenOnSearch) return true\r\n      // 4) The default case.\r\n      return false\r\n    },\r\n\r\n    shouldShowOptionInMenu(node) {\r\n      if (this.localSearch.active && !this.shouldOptionBeIncludedInSearchResult(node)) {\r\n        return false\r\n      }\r\n      return true\r\n    },\r\n\r\n    getControl() {\r\n      return this.$refs.control.$el\r\n    },\r\n\r\n    getMenu() {\r\n      const ref = this.appendToBody ? this.$refs.portal.portalTarget : this\r\n      const $menu = ref.$refs.menu.$refs.menu\r\n      return $menu && $menu.nodeName !== '#comment' ? $menu : null\r\n    },\r\n\r\n    setCurrentHighlightedOption(node, scroll = true) {\r\n      const prev = this.menu.current\r\n      if (prev != null && prev in this.forest.nodeMap) {\r\n        this.forest.nodeMap[prev].isHighlighted = false\r\n      }\r\n\r\n      this.menu.current = node.id\r\n      node.isHighlighted = true\r\n\r\n      if (this.menu.isOpen && scroll) {\r\n        const scrollToOption = () => {\r\n          const $menu = this.getMenu()\r\n          const $option = $menu.querySelector(`.vue-treeselect__option[data-id=\"${node.id}\"]`)\r\n          if ($option) scrollIntoView($menu, $option)\r\n        }\r\n\r\n        // In case `openMenu()` is just called and the menu is not rendered yet.\r\n        if (this.getMenu()) {\r\n          scrollToOption()\r\n        } else {\r\n          // istanbul ignore next\r\n          this.$nextTick(scrollToOption)\r\n        }\r\n      }\r\n    },\r\n\r\n    resetHighlightedOptionWhenNecessary(forceReset = false) {\r\n      const { current } = this.menu\r\n\r\n      if (\r\n        forceReset || current == null ||\r\n        !(current in this.forest.nodeMap) ||\r\n        !this.shouldShowOptionInMenu(this.getNode(current))\r\n      ) {\r\n        this.highlightFirstOption()\r\n      }\r\n    },\r\n\r\n    highlightFirstOption() {\r\n      if (!this.hasVisibleOptions) return\r\n\r\n      const first = this.visibleOptionIds[0]\r\n      this.setCurrentHighlightedOption(this.getNode(first))\r\n    },\r\n\r\n    highlightPrevOption() {\r\n      if (!this.hasVisibleOptions) return\r\n\r\n      const prev = this.visibleOptionIds.indexOf(this.menu.current) - 1\r\n      if (prev === -1) return this.highlightLastOption()\r\n      this.setCurrentHighlightedOption(this.getNode(this.visibleOptionIds[prev]))\r\n    },\r\n\r\n    highlightNextOption() {\r\n      if (!this.hasVisibleOptions) return\r\n\r\n      const next = this.visibleOptionIds.indexOf(this.menu.current) + 1\r\n      if (next === this.visibleOptionIds.length) return this.highlightFirstOption()\r\n      this.setCurrentHighlightedOption(this.getNode(this.visibleOptionIds[next]))\r\n    },\r\n\r\n    highlightLastOption() {\r\n      if (!this.hasVisibleOptions) return\r\n\r\n      const last = getLast(this.visibleOptionIds)\r\n      this.setCurrentHighlightedOption(this.getNode(last))\r\n    },\r\n\r\n    resetSearchQuery() {\r\n      this.trigger.searchQuery = ''\r\n    },\r\n\r\n    closeMenu() {\r\n      if (!this.menu.isOpen || (!this.disabled && this.alwaysOpen)) return\r\n      this.saveMenuScrollPosition()\r\n      this.menu.isOpen = false\r\n      this.toggleClickOutsideEvent(false)\r\n      this.resetSearchQuery()\r\n      this.$emit('close', this.getValue(), this.getInstanceId())\r\n    },\r\n\r\n    openMenu() {\r\n      if (this.disabled || this.menu.isOpen) return\r\n      this.menu.isOpen = true\r\n      this.$nextTick(this.resetHighlightedOptionWhenNecessary)\r\n      this.$nextTick(this.restoreMenuScrollPosition)\r\n      if (!this.options && !this.async) this.loadRootOptions()\r\n      this.toggleClickOutsideEvent(true)\r\n      if (this.scrollPositionOnCenter) {\r\n        this.$nextTick(this.scrollMenuOnCenter);\r\n      }\r\n      this.$emit('open', this.getInstanceId())\r\n    },\r\n\r\n    toggleMenu() {\r\n      if (this.menu.isOpen) {\r\n        this.closeMenu()\r\n      } else {\r\n        this.openMenu()\r\n      }\r\n    },\r\n\r\n    toggleExpanded(node) {\r\n      let nextState\r\n\r\n      if (this.localSearch.active) {\r\n        nextState = node.isExpandedOnSearch = !node.isExpandedOnSearch\r\n        if (nextState) node.showAllChildrenOnSearch = true\r\n      } else {\r\n        nextState = node.isExpanded = !node.isExpanded\r\n      }\r\n\r\n      if (nextState && !node.childrenStates.isLoaded) {\r\n        this.loadChildrenOptions(node)\r\n      }\r\n    },\r\n\r\n    buildForestState() {\r\n      const selectedNodeMap = createMap()\r\n      this.forest.selectedNodeIds.forEach(selectedNodeId => {\r\n        selectedNodeMap[selectedNodeId] = true\r\n      })\r\n      this.forest.selectedNodeMap = selectedNodeMap\r\n\r\n      const checkedStateMap = createMap()\r\n      if (this.multiple) {\r\n        this.traverseAllNodesByIndex(node => {\r\n          checkedStateMap[node.id] = UNCHECKED\r\n        })\r\n\r\n        this.selectedNodes.forEach(selectedNode => {\r\n          checkedStateMap[selectedNode.id] = CHECKED\r\n\r\n          if (!this.flat && !this.disableBranchNodes) {\r\n            selectedNode.ancestors.forEach(ancestorNode => {\r\n              if (!this.isSelected(ancestorNode)) {\r\n                checkedStateMap[ancestorNode.id] = INDETERMINATE\r\n              }\r\n            })\r\n          }\r\n        })\r\n      }\r\n      this.forest.checkedStateMap = checkedStateMap\r\n    },\r\n\r\n    enhancedNormalizer(raw) {\r\n      return {\r\n        ...raw,\r\n        ...this.normalizer(raw, this.getInstanceId()),\r\n      }\r\n    },\r\n\r\n    normalize(parentNode, nodes, prevNodeMap) {\r\n      let normalizedOptions = nodes\r\n        .map(node => [ this.enhancedNormalizer(node), node ])\r\n        .map(([ node, raw ], index) => {\r\n          this.checkDuplication(node)\r\n          this.verifyNodeShape(node)\r\n\r\n          const { id, label, children, isDefaultExpanded } = node\r\n          const isRootNode = parentNode === NO_PARENT_NODE\r\n          const level = isRootNode ? 0 : parentNode.level + 1\r\n          const isBranch = Array.isArray(children) || children === null\r\n          const isLeaf = !isBranch\r\n          const isDisabled = this.useOnlyIsDisabled ? !!node.isDisabled : !!node.isDisabled || (!this.flat && !isRootNode && parentNode.isDisabled)\r\n          const isNew = !!node.isNew\r\n          const lowerCased = this.matchKeys.reduce((prev, key) => ({\r\n            ...prev,\r\n            [key]: stringifyOptionPropValue(node[key]).toLocaleLowerCase(),\r\n          }), {})\r\n          const nestedSearchLabel = isRootNode\r\n            ? lowerCased.label\r\n            : parentNode.nestedSearchLabel + ' ' + lowerCased.label\r\n\r\n          const normalized = this.$set(this.forest.nodeMap, id, createMap())\r\n          this.$set(normalized, 'id', id)\r\n          this.$set(normalized, 'label', label)\r\n          this.$set(normalized, 'level', level)\r\n          this.$set(normalized, 'ancestors', isRootNode ? [] : [ parentNode ].concat(parentNode.ancestors))\r\n          this.$set(normalized, 'index', (isRootNode ? [] : parentNode.index).concat(index))\r\n          this.$set(normalized, 'parentNode', parentNode)\r\n          this.$set(normalized, 'lowerCased', lowerCased)\r\n          this.$set(normalized, 'nestedSearchLabel', nestedSearchLabel)\r\n          this.$set(normalized, 'isDisabled', isDisabled)\r\n          this.$set(normalized, 'isNew', isNew)\r\n          this.$set(normalized, 'isMatched', false)\r\n          this.$set(normalized, 'isHighlighted', false)\r\n          this.$set(normalized, 'isBranch', isBranch)\r\n          this.$set(normalized, 'isLeaf', isLeaf)\r\n          this.$set(normalized, 'isRootNode', isRootNode)\r\n          this.$set(normalized, 'raw', raw)\r\n\r\n          if (isBranch) {\r\n            const isLoaded = Array.isArray(children)\r\n\r\n            this.$set(normalized, 'childrenStates', {\r\n              ...createAsyncOptionsStates(),\r\n              isLoaded,\r\n            })\r\n            this.$set(normalized, 'isExpanded', typeof isDefaultExpanded === 'boolean'\r\n              ? isDefaultExpanded\r\n              : level < this.defaultExpandLevel)\r\n            this.$set(normalized, 'hasMatchedDescendants', false)\r\n            this.$set(normalized, 'hasDisabledDescendants', false)\r\n            this.$set(normalized, 'isExpandedOnSearch', false)\r\n            this.$set(normalized, 'showAllChildrenOnSearch', false)\r\n            this.$set(normalized, 'count', {\r\n              [ALL_CHILDREN]: 0,\r\n              [ALL_DESCENDANTS]: 0,\r\n              [LEAF_CHILDREN]: 0,\r\n              [LEAF_DESCENDANTS]: 0,\r\n            })\r\n            this.$set(normalized, 'children', isLoaded\r\n              ? this.normalize(normalized, children, prevNodeMap)\r\n              : [])\r\n\r\n            if (isDefaultExpanded === true) normalized.ancestors.forEach(ancestor => {\r\n              ancestor.isExpanded = true\r\n            })\r\n\r\n            if (!isLoaded && typeof this.loadOptions !== 'function') {\r\n              warning(\r\n                () => false,\r\n                () => 'Unloaded branch node detected. \"loadOptions\" prop is required to load its children.',\r\n              )\r\n            } else if (!isLoaded && normalized.isExpanded) {\r\n              this.loadChildrenOptions(normalized)\r\n            }\r\n          }\r\n\r\n          normalized.ancestors.forEach(ancestor => ancestor.count[ALL_DESCENDANTS]++)\r\n          if (isLeaf) normalized.ancestors.forEach(ancestor => ancestor.count[LEAF_DESCENDANTS]++)\r\n          if (!isRootNode) {\r\n            parentNode.count[ALL_CHILDREN] += 1\r\n            if (isLeaf) parentNode.count[LEAF_CHILDREN] += 1\r\n            if (isDisabled) parentNode.hasDisabledDescendants = true\r\n          }\r\n\r\n          // Preserve previous states.\r\n          if (prevNodeMap && prevNodeMap[id]) {\r\n            const prev = prevNodeMap[id]\r\n\r\n            normalized.isMatched = prev.isMatched\r\n            normalized.showAllChildrenOnSearch = prev.showAllChildrenOnSearch\r\n            normalized.isHighlighted = prev.isHighlighted\r\n\r\n            if (prev.isBranch && normalized.isBranch) {\r\n              normalized.isExpanded = prev.isExpanded\r\n              normalized.isExpandedOnSearch = prev.isExpandedOnSearch\r\n              // #97\r\n              // If `isLoaded` was true, but IS NOT now, we consider this branch node\r\n              // to be reset to unloaded state by the user of this component.\r\n              if (prev.childrenStates.isLoaded && !normalized.childrenStates.isLoaded) {\r\n                // Make sure the node is collapsed, then the user can load its\r\n                // children again (by expanding).\r\n                normalized.isExpanded = false\r\n                // We have reset `childrenStates` and don't want to preserve states here.\r\n              } else {\r\n                normalized.childrenStates = { ...prev.childrenStates }\r\n              }\r\n            }\r\n          }\r\n\r\n          return normalized\r\n        })\r\n\r\n      if (this.branchNodesFirst) {\r\n        const branchNodes = normalizedOptions.filter(option => option.isBranch)\r\n        const leafNodes = normalizedOptions.filter(option => option.isLeaf)\r\n        normalizedOptions = branchNodes.concat(leafNodes)\r\n      }\r\n\r\n      return normalizedOptions\r\n    },\r\n\r\n    loadRootOptions() {\r\n      this.callLoadOptionsProp({\r\n        action: LOAD_ROOT_OPTIONS,\r\n        isPending: () => {\r\n          return this.rootOptionsStates.isLoading\r\n        },\r\n        start: () => {\r\n          this.rootOptionsStates.isLoading = true\r\n          this.rootOptionsStates.loadingError = ''\r\n        },\r\n        succeed: () => {\r\n          this.rootOptionsStates.isLoaded = true\r\n          // Wait for `options` being re-initialized.\r\n          this.$nextTick(() => {\r\n            this.resetHighlightedOptionWhenNecessary(true)\r\n          })\r\n        },\r\n        fail: err => {\r\n          this.rootOptionsStates.loadingError = getErrorMessage(err)\r\n        },\r\n        end: () => {\r\n          this.rootOptionsStates.isLoading = false\r\n        },\r\n      })\r\n    },\r\n\r\n    loadChildrenOptions(parentNode) {\r\n      // The options may be re-initialized anytime during the loading process.\r\n      // So `parentNode` can be stale and we use `getNode()` to avoid that.\r\n\r\n      const { id, raw } = parentNode\r\n\r\n      this.callLoadOptionsProp({\r\n        action: LOAD_CHILDREN_OPTIONS,\r\n        args: {\r\n          // We always pass the raw node instead of the normalized node to any\r\n          // callback provided by the user of this component.\r\n          // Because the shape of the raw node is more likely to be closing to\r\n          // what the back-end API service of the application needs.\r\n          parentNode: raw,\r\n        },\r\n        isPending: () => {\r\n          return this.getNode(id).childrenStates.isLoading\r\n        },\r\n        start: () => {\r\n          this.getNode(id).childrenStates.isLoading = true\r\n          this.getNode(id).childrenStates.loadingError = ''\r\n        },\r\n        succeed: () => {\r\n          this.getNode(id).childrenStates.isLoaded = true\r\n        },\r\n        fail: err => {\r\n          this.getNode(id).childrenStates.loadingError = getErrorMessage(err)\r\n        },\r\n        end: () => {\r\n          this.getNode(id).childrenStates.isLoading = false\r\n        },\r\n      })\r\n    },\r\n\r\n    callLoadOptionsProp({ action, args, isPending, start, succeed, fail, end }) {\r\n      if (!this.loadOptions || isPending()) {\r\n        return\r\n      }\r\n\r\n      start()\r\n\r\n      const callback = once((err, result) => {\r\n        if (err) {\r\n          fail(err)\r\n        } else {\r\n          succeed(result)\r\n        }\r\n\r\n        end()\r\n      })\r\n      const result = this.loadOptions({\r\n        id: this.getInstanceId(),\r\n        instanceId: this.getInstanceId(),\r\n        action,\r\n        ...args,\r\n        callback,\r\n      })\r\n\r\n      if (isPromise(result)) {\r\n        result.then(() => {\r\n          callback()\r\n        }, err => {\r\n          callback(err)\r\n        }).catch(err => {\r\n          // istanbul ignore next\r\n          console.error(err)\r\n        })\r\n      }\r\n    },\r\n\r\n    checkDuplication(node) {\r\n      warning(\r\n        () => !((node.id in this.forest.nodeMap) && !this.forest.nodeMap[node.id].isFallbackNode),\r\n        () => `Detected duplicate presence of node id ${JSON.stringify(node.id)}. ` +\r\n          `Their labels are \"${this.forest.nodeMap[node.id].label}\" and \"${node.label}\" respectively.`,\r\n      )\r\n    },\r\n\r\n    verifyNodeShape(node) {\r\n      warning(\r\n        () => !(node.children === undefined && node.isBranch === true),\r\n        () => 'Are you meant to declare an unloaded branch node? ' +\r\n          '`isBranch: true` is no longer supported, please use `children: null` instead.',\r\n      )\r\n    },\r\n\r\n    select(node) {\r\n      if (this.disabled || node.isDisabled) {\r\n        return\r\n      }\r\n\r\n      if (this.single) {\r\n        this.clear()\r\n      }\r\n\r\n      const nextState = this.multiple && !this.flat\r\n        ? this.forest.checkedStateMap[node.id] === UNCHECKED\r\n        : !this.isSelected(node)\r\n\r\n      if (nextState) {\r\n        this._selectNode(node)\r\n      } else {\r\n        this._deselectNode(node)\r\n      }\r\n\r\n      this.buildForestState()\r\n\r\n      if (nextState) {\r\n        this.expandParentNodesOfSelected()\r\n        this.$emit('select', node.raw, this.getInstanceId())\r\n      } else {\r\n        this.$emit('deselect', node.raw, this.getInstanceId())\r\n      }\r\n\r\n      if (this.localSearch.active && nextState && (this.single || this.clearOnSelect)) {\r\n        if (this.scrollPositionOnCenter) {\r\n          this.$nextTick(this.scrollMenuOnCenter);\r\n        }\r\n        this.resetSearchQuery()\r\n      }\r\n\r\n      if (this.single && this.closeOnSelect) {\r\n        this.closeMenu()\r\n\r\n        // istanbul ignore else\r\n        if (this.searchable) {\r\n          this._blurOnSelect = true\r\n        }\r\n      }\r\n    },\r\n\r\n    clear() {\r\n      if (this.hasValue) {\r\n        if (this.single || this.allowClearingDisabled) {\r\n          this.forest.selectedNodeIds = []\r\n        } else /* if (this.multiple && !this.allowClearingDisabled) */ {\r\n          this.forest.selectedNodeIds = this.forest.selectedNodeIds.filter(nodeId =>\r\n            this.getNode(nodeId).isDisabled,\r\n          )\r\n        }\r\n\r\n        this.buildForestState()\r\n      }\r\n    },\r\n\r\n    // This is meant to be called only by `select()`.\r\n    _selectNode(node) {\r\n      if (this.single || this.disableBranchNodes) {\r\n        return this.addValue(node)\r\n      }\r\n\r\n      if (this.flat) {\r\n        this.addValue(node)\r\n\r\n        if (this.autoSelectAncestors) {\r\n          node.ancestors.forEach(ancestor => {\r\n            if (!this.isSelected(ancestor) && !ancestor.isDisabled) this.addValue(ancestor)\r\n          })\r\n        } else if (this.autoSelectDescendants) {\r\n          this.traverseDescendantsBFS(node, descendant => {\r\n            if (!this.isSelected(descendant) && !descendant.isDisabled) this.addValue(descendant)\r\n          })\r\n        }\r\n\r\n        return\r\n      }\r\n\r\n      const isFullyChecked = (\r\n        node.isLeaf ||\r\n        (/* node.isBranch && */!node.hasDisabledDescendants) ||\r\n        (/* node.isBranch && */this.allowSelectingDisabledDescendants)\r\n      )\r\n      if (isFullyChecked) {\r\n        this.addValue(node)\r\n      }\r\n\r\n      if (node.isBranch) {\r\n        this.traverseDescendantsBFS(node, descendant => {\r\n          if (!descendant.isDisabled || this.allowSelectingDisabledDescendants) {\r\n            this.addValue(descendant)\r\n          }\r\n        })\r\n      }\r\n\r\n      if (isFullyChecked) {\r\n        let curr = node\r\n        while ((curr = curr.parentNode) !== NO_PARENT_NODE) {\r\n          if (curr.children.every(this.isSelected)) this.addValue(curr)\r\n          else break\r\n        }\r\n      }\r\n    },\r\n\r\n    // This is meant to be called only by `select()`.\r\n    _deselectNode(node) {\r\n      if (this.disableBranchNodes) {\r\n        return this.removeValue(node)\r\n      }\r\n\r\n      if (this.flat) {\r\n        this.removeValue(node)\r\n\r\n        if (this.autoDeselectAncestors) {\r\n          node.ancestors.forEach(ancestor => {\r\n            if (this.isSelected(ancestor) && !ancestor.isDisabled) this.removeValue(ancestor)\r\n          })\r\n        } else if (this.autoDeselectDescendants) {\r\n          this.traverseDescendantsBFS(node, descendant => {\r\n            if (this.isSelected(descendant) && !descendant.isDisabled) this.removeValue(descendant)\r\n          })\r\n        }\r\n\r\n        return\r\n      }\r\n\r\n      let hasUncheckedSomeDescendants = false\r\n      if (node.isBranch) {\r\n        this.traverseDescendantsDFS(node, descendant => {\r\n          if (!descendant.isDisabled || this.allowSelectingDisabledDescendants) {\r\n            this.removeValue(descendant, true)\r\n            hasUncheckedSomeDescendants = true\r\n          }\r\n        })\r\n        this.forest.selectedNodeIds = Object.keys(this.forest.selectedNodeMap);\r\n      }\r\n\r\n      if (\r\n        node.isLeaf ||\r\n        /* node.isBranch && */hasUncheckedSomeDescendants ||\r\n        /* node.isBranch && */node.children.length === 0\r\n      ) {\r\n        this.removeValue(node)\r\n\r\n        let curr = node\r\n        while ((curr = curr.parentNode) !== NO_PARENT_NODE) {\r\n          if (this.isSelected(curr)) this.removeValue(curr)\r\n          else break\r\n        }\r\n      }\r\n    },\r\n\r\n    addValue(node) {\r\n      this.forest.selectedNodeIds.push(node.id)\r\n      this.forest.selectedNodeMap[node.id] = true\r\n    },\r\n\r\n    removeValue(node, bulk) {\r\n      if (!bulk) removeFromArray(this.forest.selectedNodeIds, node.id)\r\n      delete this.forest.selectedNodeMap[node.id]\r\n    },\r\n\r\n    removeLastValue() {\r\n      if (!this.hasValue) return\r\n      if (this.single) return this.clear()\r\n      const lastValue = getLast(this.internalValue)\r\n      const lastSelectedNode = this.getNode(lastValue)\r\n      this.select(lastSelectedNode) // deselect\r\n    },\r\n\r\n    saveMenuScrollPosition() {\r\n      if (this.scrollPositionOnCenter) { \r\n        return \r\n      }\r\n      const $menu = this.getMenu()\r\n      // istanbul ignore else\r\n      if ($menu) this.menu.lastScrollPosition = $menu.scrollTop\r\n    },\r\n\r\n    restoreMenuScrollPosition() {\r\n      if (this.scrollPositionOnCenter) {\r\n        return\r\n      }\r\n      const $menu = this.getMenu()\r\n      // istanbul ignore else\r\n      if ($menu) $menu.scrollTop = this.menu.lastScrollPosition\r\n    },\r\n\r\n    expandParentNodesOfSelected() {\r\n      if (!this.expandParentsInMenuForSelected) {\r\n        return\r\n      }\r\n      this.expandParentNodes(this.forest.selectedNodeIds)\r\n    },\r\n\r\n    /**\r\n     * @param nodeIds - an array containing the node(s)'s id(s) whom parent(s) should be expanded\r\n     */\r\n    expandParentNodes(nodeIds) {\r\n      for (const id of nodeIds) {\r\n        if(this.forest.nodeMap[id]) {\r\n          for (const ancestor of this.forest.nodeMap[id].ancestors) {\r\n            ancestor.isExpanded = true;\r\n          }\r\n        }\r\n      }\r\n    },\r\n\r\n    scrollMenuToOption($option) {\r\n      const $menu = this.getMenu();\r\n      if ($option && $menu) {\r\n        const position = Math.max($option.offsetTop - (($menu.offsetHeight - $option.offsetHeight) / 2), 0);\r\n        $menu.scrollTop = position;\r\n      }\r\n    },\r\n\r\n    scrollMenuOnCenter() {\r\n      const $option = document.querySelector(\".vue-treeselect__option--selected\");\r\n      this.scrollMenuToOption($option)\r\n    },\r\n\r\n    showDefaultNodeIfNoSelection() {\r\n      if(this.forest.selectedNodeIds.length > 0\r\n        || !this.showNodeWhenNoSelection\r\n        || !this.forest.nodeMap[this.showNodeWhenNoSelection]) {\r\n        return\r\n      }\r\n\r\n      this.expandParentNodes([this.showNodeWhenNoSelection])\r\n      \r\n      this.$nextTick( () => {\r\n        const $option = document.querySelector(`.vue-treeselect__option[data-id=\"${this.showNodeWhenNoSelection}\"]`) \r\n        this.scrollMenuToOption($option)\r\n      })\r\n      \r\n    }\r\n  },\r\n\r\n  created() {\r\n    this.verifyProps()\r\n    this.resetFlags()\r\n  },\r\n\r\n  mounted() {\r\n    if (this.autoFocus) this.focusInput()\r\n    if (!this.options && !this.async && this.autoLoadRootOptions) this.loadRootOptions()\r\n    if (this.alwaysOpen) this.openMenu()\r\n    if (this.async && this.defaultOptions) this.handleRemoteSearch()\r\n  },\r\n\r\n  destroyed() {\r\n    // istanbul ignore next\r\n    this.toggleClickOutsideEvent(false)\r\n  },\r\n}\r\n","<script>\r\n  import { isNaN } from '../utils'\r\n\r\n  function stringifyValue(value) {\r\n    if (typeof value === 'string') return value\r\n    // istanbul ignore else\r\n    if (value != null && !isNaN(value)) return JSON.stringify(value)\r\n    // istanbul ignore next\r\n    return ''\r\n  }\r\n\r\n  export default {\r\n    name: 'vue-treeselect--hidden-fields',\r\n    inject: [ 'instance' ],\r\n    functional: true,\r\n\r\n    render(_, context) {\r\n      const { instance } = context.injections\r\n\r\n      if (!instance.name || instance.disabled || !instance.hasValue) return null\r\n\r\n      let stringifiedValues = instance.internalValue.map(stringifyValue)\r\n\r\n      if (instance.multiple && instance.joinValues) stringifiedValues = [\r\n        stringifiedValues.join(instance.delimiter),\r\n      ]\r\n\r\n      return stringifiedValues.map((stringifiedValue, i) => (\r\n        <input type=\"hidden\"\r\n          name={instance.name}\r\n          value={stringifiedValue}\r\n          key={'hidden-field-' + i}\r\n        />\r\n      ))\r\n    },\r\n  }\r\n</script>\r\n","/* globals __VUE_SSR_CONTEXT__ */\n\n// IMPORTANT: Do NOT use ES2015 features in this file (except for modules).\n// This module is a runtime utility for cleaner component module output and will\n// be included in the final webpack user bundle.\n\nexport default function normalizeComponent(\n  scriptExports,\n  render,\n  staticRenderFns,\n  functionalTemplate,\n  injectStyles,\n  scopeId,\n  moduleIdentifier /* server only */,\n  shadowMode /* vue-cli only */\n) {\n  // Vue.extend constructor export interop\n  var options =\n    typeof scriptExports === 'function' ? scriptExports.options : scriptExports\n\n  // render functions\n  if (render) {\n    options.render = render\n    options.staticRenderFns = staticRenderFns\n    options._compiled = true\n  }\n\n  // functional template\n  if (functionalTemplate) {\n    options.functional = true\n  }\n\n  // scopedId\n  if (scopeId) {\n    options._scopeId = 'data-v-' + scopeId\n  }\n\n  var hook\n  if (moduleIdentifier) {\n    // server build\n    hook = function (context) {\n      // 2.3 injection\n      context =\n        context || // cached call\n        (this.$vnode && this.$vnode.ssrContext) || // stateful\n        (this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext) // functional\n      // 2.2 with runInNewContext: true\n      if (!context && typeof __VUE_SSR_CONTEXT__ !== 'undefined') {\n        context = __VUE_SSR_CONTEXT__\n      }\n      // inject component styles\n      if (injectStyles) {\n        injectStyles.call(this, context)\n      }\n      // register component module identifier for async chunk inferrence\n      if (context && context._registeredComponents) {\n        context._registeredComponents.add(moduleIdentifier)\n      }\n    }\n    // used by ssr in case component is cached and beforeCreate\n    // never gets called\n    options._ssrRegister = hook\n  } else if (injectStyles) {\n    hook = shadowMode\n      ? function () {\n          injectStyles.call(\n            this,\n            (options.functional ? this.parent : this).$root.$options.shadowRoot\n          )\n        }\n      : injectStyles\n  }\n\n  if (hook) {\n    if (options.functional) {\n      // for template-only hot-reload because in that case the render fn doesn't\n      // go through the normalizer\n      options._injectStyles = hook\n      // register for functional component in vue file\n      var originalRender = options.render\n      options.render = function renderWithStyleInjection(h, context) {\n        hook.call(context)\n        return originalRender(h, context)\n      }\n    } else {\n      // inject component registration as beforeCreate hook\n      var existing = options.beforeCreate\n      options.beforeCreate = existing ? [].concat(existing, hook) : [hook]\n    }\n  }\n\n  return {\n    exports: scriptExports,\n    options: options\n  }\n}\n","var render, staticRenderFns\nimport script from \"./HiddenFields.vue?vue&type=script&lang=js\"\nexport * from \"./HiddenFields.vue?vue&type=script&lang=js\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","<script>\r\n  import { debounce, deepExtend, includes } from '../utils'\r\n  import { MIN_INPUT_WIDTH, KEY_CODES, INPUT_DEBOUNCE_DELAY } from '../constants'\r\n\r\n  const keysThatRequireMenuBeingOpen = [\r\n    KEY_CODES.ENTER,\r\n    KEY_CODES.END,\r\n    KEY_CODES.HOME,\r\n    KEY_CODES.ARROW_LEFT,\r\n    KEY_CODES.ARROW_UP,\r\n    KEY_CODES.ARROW_RIGHT,\r\n    KEY_CODES.ARROW_DOWN,\r\n  ]\r\n\r\n  export default {\r\n    name: 'vue-treeselect--input',\r\n    inject: [ 'instance' ],\r\n\r\n    data: () => ({\r\n      inputWidth: MIN_INPUT_WIDTH,\r\n      value: '',\r\n    }),\r\n\r\n    computed: {\r\n      needAutoSize() {\r\n        const { instance } = this\r\n\r\n        return (\r\n          instance.searchable &&\r\n          !instance.disabled &&\r\n          instance.multiple\r\n        )\r\n      },\r\n\r\n      inputStyle() {\r\n        return {\r\n          width: this.needAutoSize ? `${this.inputWidth}px` : null,\r\n        }\r\n      },\r\n    },\r\n\r\n    watch: {\r\n      'instance.trigger.searchQuery'(newValue) {\r\n        this.value = newValue\r\n      },\r\n\r\n      value() {\r\n        // istanbul ignore else\r\n        if (this.needAutoSize) this.$nextTick(this.updateInputWidth)\r\n      },\r\n    },\r\n\r\n    created() {\r\n      this.debouncedCallback = debounce(\r\n        this.updateSearchQuery,\r\n        INPUT_DEBOUNCE_DELAY,\r\n        { leading: true, trailing: true },\r\n      )\r\n    },\r\n\r\n    methods: {\r\n      clear() {\r\n        this.onInput({\r\n          target: { value: '' },\r\n        })\r\n      },\r\n\r\n      focus() {\r\n        const { instance } = this\r\n\r\n        if (!instance.disabled) {\r\n          this.$refs.input && this.$refs.input.focus()\r\n        }\r\n      },\r\n\r\n      blur() {\r\n        this.$refs.input && this.$refs.input.blur()\r\n      },\r\n\r\n      onFocus() {\r\n        const { instance } = this\r\n\r\n        instance.trigger.isFocused = true\r\n        // istanbul ignore else\r\n        if (instance.openOnFocus) instance.openMenu()\r\n      },\r\n\r\n      onBlur() {\r\n        const { instance } = this\r\n        const menu = instance.getMenu()\r\n\r\n        // #15\r\n        // istanbul ignore next\r\n        if (menu && document.activeElement === menu) {\r\n          return this.focus()\r\n        }\r\n\r\n        instance.trigger.isFocused = false\r\n        instance.closeMenu()\r\n      },\r\n\r\n      onInput(evt) {\r\n        const { value } = evt.target\r\n\r\n        this.value = value\r\n\r\n        if (value) {\r\n          this.debouncedCallback()\r\n        } else {\r\n          this.debouncedCallback.cancel()\r\n          this.updateSearchQuery()\r\n        }\r\n      },\r\n\r\n      // 用 keyUp 事件存在一个问题，删除输入框最后一个字符也会导致取消选中最后一项\r\n      onKeyDown(evt) {\r\n        const { instance } = this\r\n        // https://css-tricks.com/snippets/javascript/javascript-keycodes/\r\n        // https://stackoverflow.com/questions/4471582/javascript-keycode-vs-which\r\n        const key = 'which' in evt ? evt.which : /* istanbul ignore next */ evt.keyCode\r\n\r\n        if (evt.ctrlKey || evt.shiftKey || evt.altKey || evt.metaKey)\r\n          return\r\n\r\n        if (!instance.menu.isOpen && includes(keysThatRequireMenuBeingOpen, key)) {\r\n          evt.preventDefault()\r\n          return instance.openMenu()\r\n        }\r\n\r\n        switch (key) {\r\n        case KEY_CODES.BACKSPACE: {\r\n          if (instance.backspaceRemoves && !this.value.length) {\r\n            instance.removeLastValue()\r\n          }\r\n          break\r\n        }\r\n        case KEY_CODES.ENTER: {\r\n          evt.preventDefault()\r\n          if (instance.menu.current === null) return\r\n          const current = instance.getNode(instance.menu.current)\r\n          if (current.isBranch && instance.disableBranchNodes) return\r\n          instance.select(current)\r\n          break\r\n        }\r\n        case KEY_CODES.ESCAPE: {\r\n          if (this.value.length) {\r\n            this.clear()\r\n          } else if (instance.menu.isOpen) {\r\n            instance.closeMenu()\r\n          }\r\n          break\r\n        }\r\n        case KEY_CODES.END: {\r\n          evt.preventDefault()\r\n          instance.highlightLastOption()\r\n          break\r\n        }\r\n        case KEY_CODES.HOME: {\r\n          evt.preventDefault()\r\n          instance.highlightFirstOption()\r\n          break\r\n        }\r\n        case KEY_CODES.ARROW_LEFT: {\r\n          const current = instance.getNode(instance.menu.current)\r\n          if (current.isBranch && instance.shouldExpand(current)) {\r\n            evt.preventDefault()\r\n            instance.toggleExpanded(current)\r\n          } else if (!current.isRootNode && (current.isLeaf || (current.isBranch && !(instance.shouldExpand(current))))) {\r\n            evt.preventDefault()\r\n            instance.setCurrentHighlightedOption(current.parentNode)\r\n          }\r\n          break\r\n        }\r\n        case KEY_CODES.ARROW_UP: {\r\n          evt.preventDefault()\r\n          instance.highlightPrevOption()\r\n          break\r\n        }\r\n        case KEY_CODES.ARROW_RIGHT: {\r\n          const current = instance.getNode(instance.menu.current)\r\n          if (current.isBranch && !instance.shouldExpand(current)) {\r\n            evt.preventDefault()\r\n            instance.toggleExpanded(current)\r\n          }\r\n          break\r\n        }\r\n        case KEY_CODES.ARROW_DOWN: {\r\n          evt.preventDefault()\r\n          instance.highlightNextOption()\r\n          break\r\n        }\r\n        case KEY_CODES.DELETE: {\r\n          if (instance.deleteRemoves && !this.value.length) {\r\n            instance.removeLastValue()\r\n          }\r\n          break\r\n        }\r\n        default: {\r\n          // istanbul ignore else\r\n          instance.openMenu()\r\n        }\r\n        }\r\n      },\r\n\r\n      onMouseDown(evt) {\r\n        // istanbul ignore next\r\n        if (this.value.length) {\r\n          // Prevent it from bubbling to the top level and triggering `preventDefault()`\r\n          // to make the textbox unselectable\r\n          evt.stopPropagation()\r\n        }\r\n      },\r\n\r\n      renderInputContainer() {\r\n        const { instance } = this\r\n        const props = {}\r\n        const children = []\r\n\r\n        if (instance.searchable && !instance.disabled) {\r\n          children.push(this.renderInput())\r\n          if (this.needAutoSize) children.push(this.renderSizer())\r\n        }\r\n\r\n        if (!instance.searchable) {\r\n          deepExtend(props, {\r\n            on: {\r\n              focus: this.onFocus,\r\n              blur: this.onBlur,\r\n              keydown: this.onKeyDown,\r\n            },\r\n            ref: 'input',\r\n          })\r\n        }\r\n\r\n        if (!instance.searchable && !instance.disabled) {\r\n          deepExtend(props, {\r\n            attrs: {\r\n              tabIndex: instance.tabIndex,\r\n            },\r\n          })\r\n        }\r\n\r\n        return (\r\n          <div class=\"vue-treeselect__input-container\" {...props}>\r\n            {children}\r\n          </div>\r\n        )\r\n      },\r\n\r\n      renderInput() {\r\n        const { instance } = this\r\n\r\n        return (\r\n          <input ref=\"input\"\r\n            class=\"vue-treeselect__input\"\r\n            type=\"text\"\r\n            autocomplete=\"off\"\r\n            tabIndex={instance.tabIndex}\r\n            required={instance.required && !instance.hasValue}\r\n            value={this.value}\r\n            style={this.inputStyle}\r\n            onFocus={this.onFocus}\r\n            onInput={this.onInput}\r\n            onBlur={this.onBlur}\r\n            onKeydown={this.onKeyDown}\r\n            onMousedown={this.onMouseDown}\r\n          />\r\n        )\r\n      },\r\n\r\n      renderSizer() {\r\n        return (\r\n          <div ref=\"sizer\" class=\"vue-treeselect__sizer\">{this.value}</div>\r\n        )\r\n      },\r\n\r\n      updateInputWidth() {\r\n        this.inputWidth = Math.max(\r\n          MIN_INPUT_WIDTH,\r\n          this.$refs.sizer.scrollWidth + 15,\r\n        )\r\n      },\r\n\r\n      updateSearchQuery() {\r\n        const { instance } = this\r\n\r\n        instance.trigger.searchQuery = this.value\r\n      },\r\n    },\r\n\r\n    render() {\r\n      return this.renderInputContainer()\r\n    },\r\n  }\r\n</script>\r\n","var render, staticRenderFns\nimport script from \"./Input.vue?vue&type=script&lang=js\"\nexport * from \"./Input.vue?vue&type=script&lang=js\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var render, staticRenderFns\nimport script from \"./Placeholder.vue?vue&type=script&lang=js\"\nexport * from \"./Placeholder.vue?vue&type=script&lang=js\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","<script>\r\n  export default {\r\n    name: 'vue-treeselect--placeholder',\r\n    inject: [ 'instance' ],\r\n\r\n    render() {\r\n      const { instance } = this\r\n      const placeholderClass = {\r\n        'vue-treeselect__placeholder': true,\r\n        'vue-treeselect-helper-zoom-effect-off': true,\r\n        'vue-treeselect-helper-hide': instance.hasValue || instance.trigger.searchQuery,\r\n      }\r\n\r\n      return (\r\n        <div class={placeholderClass}>\r\n          { instance.placeholder }\r\n        </div>\r\n      )\r\n    },\r\n  }\r\n</script>\r\n","var render, staticRenderFns\nimport script from \"./SingleValue.vue?vue&type=script&lang=js\"\nexport * from \"./SingleValue.vue?vue&type=script&lang=js\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","<script>\r\n  import Input from './Input'\r\n  import Placeholder from './Placeholder'\r\n\r\n  export default {\r\n    name: 'vue-treeselect--single-value',\r\n    inject: [ 'instance' ],\r\n    methods: {\r\n      renderSingleValueLabel() {\r\n        const { instance } = this\r\n        const node = instance.selectedNodes[0]\r\n\r\n        const customValueLabelRenderer = instance.$scopedSlots['value-label']\r\n        return customValueLabelRenderer\r\n          ? customValueLabelRenderer({ node })\r\n          : node.label\r\n      },\r\n    },\r\n    render() {\r\n      const { instance, $parent: { renderValueContainer } } = this\r\n      const shouldShowValue = instance.hasValue && !instance.trigger.searchQuery\r\n\r\n      return renderValueContainer([\r\n        shouldShowValue && (\r\n          <div class=\"vue-treeselect__single-value\">\r\n            { this.renderSingleValueLabel() }\r\n          </div>\r\n        ),\r\n        <Placeholder />,\r\n        <Input ref=\"input\" />,\r\n      ])\r\n    },\r\n  }\r\n</script>\r\n","var render = function render() {\n  var _vm = this,\n    _c = _vm._self._c\n  return _c(\n    \"svg\",\n    {\n      attrs: {\n        xmlns: \"http://www.w3.org/2000/svg\",\n        viewBox: \"0 0 348.333 348.333\",\n      },\n    },\n    [\n      _c(\"path\", {\n        attrs: {\n          d: \"M336.559 68.611L231.016 174.165l105.543 105.549c15.699 15.705 15.699 41.145 0 56.85-7.844 7.844-18.128 11.769-28.407 11.769-10.296 0-20.581-3.919-28.419-11.769L174.167 231.003 68.609 336.563c-7.843 7.844-18.128 11.769-28.416 11.769-10.285 0-20.563-3.919-28.413-11.769-15.699-15.698-15.699-41.139 0-56.85l105.54-105.549L11.774 68.611c-15.699-15.699-15.699-41.145 0-56.844 15.696-15.687 41.127-15.687 56.829 0l105.563 105.554L279.721 11.767c15.705-15.687 41.139-15.687 56.832 0 15.705 15.699 15.705 41.145.006 56.844z\",\n        },\n      }),\n    ]\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }","<template>\r\n  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 348.333 348.333\">\r\n    <path d=\"M336.559 68.611L231.016 174.165l105.543 105.549c15.699 15.705 15.699 41.145 0 56.85-7.844 7.844-18.128 11.769-28.407 11.769-10.296 0-20.581-3.919-28.419-11.769L174.167 231.003 68.609 336.563c-7.843 7.844-18.128 11.769-28.416 11.769-10.285 0-20.563-3.919-28.413-11.769-15.699-15.698-15.699-41.139 0-56.85l105.54-105.549L11.774 68.611c-15.699-15.699-15.699-41.145 0-56.844 15.696-15.687 41.127-15.687 56.829 0l105.563 105.554L279.721 11.767c15.705-15.687 41.139-15.687 56.832 0 15.705 15.699 15.705 41.145.006 56.844z\" />\r\n  </svg>\r\n</template>\r\n\r\n<script>\r\n  export default {\r\n    name: 'vue-treeselect--x',\r\n  }\r\n</script>\r\n","import { render, staticRenderFns } from \"./Delete.vue?vue&type=template&id=12b4a02e\"\nimport script from \"./Delete.vue?vue&type=script&lang=js\"\nexport * from \"./Delete.vue?vue&type=script&lang=js\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var render, staticRenderFns\nimport script from \"./MultiValueItem.vue?vue&type=script&lang=js\"\nexport * from \"./MultiValueItem.vue?vue&type=script&lang=js\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","<script>\r\n  import { onLeftClick } from '../utils'\r\n  import DeleteIcon from './icons/Delete'\r\n\r\n  export default {\r\n    name: 'vue-treeselect--multi-value-item',\r\n    inject: [ 'instance' ],\r\n\r\n    props: {\r\n      node: {\r\n        type: Object,\r\n        required: true,\r\n      },\r\n    },\r\n\r\n    methods: {\r\n      handleMouseDown: onLeftClick(function handleMouseDown() {\r\n        const { instance, node } = this\r\n\r\n        // Deselect this node.\r\n        instance.select(node)\r\n      }),\r\n    },\r\n\r\n    render() {\r\n      const { instance, node } = this\r\n      const itemClass = {\r\n        'vue-treeselect__multi-value-item': true,\r\n        'vue-treeselect__multi-value-item-disabled': node.isDisabled,\r\n        'vue-treeselect__multi-value-item-new': node.isNew,\r\n      }\r\n      const customValueLabelRenderer = instance.$scopedSlots['value-label']\r\n      const labelRenderer = customValueLabelRenderer ? customValueLabelRenderer({ node }) : node.label\r\n\r\n      return (\r\n        <div class=\"vue-treeselect__multi-value-item-container\">\r\n          <div class={itemClass} onMousedown={this.handleMouseDown}>\r\n            <span class=\"vue-treeselect__multi-value-label\">{ labelRenderer }</span>\r\n            <span class=\"vue-treeselect__icon vue-treeselect__value-remove\"><DeleteIcon /></span>\r\n          </div>\r\n        </div>\r\n      )\r\n    },\r\n  }\r\n</script>\r\n","var render, staticRenderFns\nimport script from \"./MultiValue.vue?vue&type=script&lang=js\"\nexport * from \"./MultiValue.vue?vue&type=script&lang=js\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","<script>\r\n  import MultiValueItem from './MultiValueItem'\r\n  import Input from './Input'\r\n  import Placeholder from './Placeholder'\r\n\r\n  export default {\r\n    name: 'vue-treeselect--multi-value',\r\n    inject: [ 'instance' ],\r\n\r\n    methods: {\r\n      renderMultiValueItems() {\r\n        const { instance } = this\r\n\r\n        return instance.internalValue\r\n          .slice(0, instance.limit)\r\n          .map(instance.getNode)\r\n          .map(node => (\r\n            <MultiValueItem key={`multi-value-item-${node.id}`} node={node} />\r\n          ))\r\n      },\r\n\r\n      renderExceedLimitTip() {\r\n        const { instance } = this\r\n        const count = instance.internalValue.length - instance.limit\r\n\r\n        if (count <= 0) return null\r\n\r\n        return (\r\n          <div class=\"vue-treeselect__limit-tip vue-treeselect-helper-zoom-effect-off\" key=\"exceed-limit-tip\">\r\n            <span class=\"vue-treeselect__limit-tip-text\">{ instance.limitText(count) }</span>\r\n          </div>\r\n        )\r\n      },\r\n    },\r\n\r\n    render() {\r\n      const { renderValueContainer } = this.$parent\r\n      const transitionGroupProps = {\r\n        props: {\r\n          tag: 'div',\r\n          name: 'vue-treeselect__multi-value-item--transition',\r\n          appear: true,\r\n        },\r\n      }\r\n\r\n      return renderValueContainer(\r\n        <transition-group class=\"vue-treeselect__multi-value\" {...transitionGroupProps}>\r\n          {this.renderMultiValueItems()}\r\n          {this.renderExceedLimitTip()}\r\n          <Placeholder key=\"placeholder\" />\r\n          <Input ref=\"input\" key=\"input\" />\r\n        </transition-group>,\r\n      )\r\n    },\r\n  }\r\n</script>\r\n","var render = function render() {\n  var _vm = this,\n    _c = _vm._self._c\n  return _c(\n    \"svg\",\n    {\n      attrs: {\n        xmlns: \"http://www.w3.org/2000/svg\",\n        viewBox: \"0 0 292.362 292.362\",\n      },\n    },\n    [\n      _c(\"path\", {\n        attrs: {\n          d: \"M286.935 69.377c-3.614-3.617-7.898-5.424-12.848-5.424H18.274c-4.952 0-9.233 1.807-12.85 5.424C1.807 72.998 0 77.279 0 82.228c0 4.948 1.807 9.229 5.424 12.847l127.907 127.907c3.621 3.617 7.902 5.428 12.85 5.428s9.233-1.811 12.847-5.428L286.935 95.074c3.613-3.617 5.427-7.898 5.427-12.847 0-4.948-1.814-9.229-5.427-12.85z\",\n        },\n      }),\n    ]\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }","<template>\r\n  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 292.362 292.362\">\r\n    <path d=\"M286.935 69.377c-3.614-3.617-7.898-5.424-12.848-5.424H18.274c-4.952 0-9.233 1.807-12.85 5.424C1.807 72.998 0 77.279 0 82.228c0 4.948 1.807 9.229 5.424 12.847l127.907 127.907c3.621 3.617 7.902 5.428 12.85 5.428s9.233-1.811 12.847-5.428L286.935 95.074c3.613-3.617 5.427-7.898 5.427-12.847 0-4.948-1.814-9.229-5.427-12.85z\" />\r\n  </svg>\r\n</template>\r\n\r\n<script>\r\n  export default {\r\n    name: 'vue-treeselect--arrow',\r\n  }\r\n</script>\r\n","<script>\r\n  import { UNCHECKED, INDETERMINATE, CHECKED } from '../constants'\r\n  import { onLeftClick } from '../utils'\r\n  import Tip from './Tip'\r\n  import ArrowIcon from './icons/Arrow'\r\n\r\n  let arrowPlaceholder, checkMark, minusMark\r\n\r\n  const Option = {\r\n    name: 'vue-treeselect--option',\r\n    inject: [ 'instance' ],\r\n\r\n    props: {\r\n      node: {\r\n        type: Object,\r\n        required: true,\r\n      },\r\n    },\r\n\r\n    computed: {\r\n      shouldExpand() {\r\n        const { instance, node } = this\r\n\r\n        return node.isBranch && instance.shouldExpand(node)\r\n      },\r\n\r\n      shouldShow() {\r\n        const { instance, node } = this\r\n\r\n        return instance.shouldShowOptionInMenu(node)\r\n      },\r\n    },\r\n\r\n    methods: {\r\n      renderOption() {\r\n        const { instance, node } = this\r\n        const optionClass = {\r\n          'vue-treeselect__option': true,\r\n          'vue-treeselect__option--disabled': node.isDisabled,\r\n          'vue-treeselect__option--selected': instance.isSelected(node),\r\n          'vue-treeselect__option--highlight': node.isHighlighted,\r\n          'vue-treeselect__option--matched': instance.localSearch.active && node.isMatched,\r\n          'vue-treeselect__option--hide': !this.shouldShow,\r\n        }\r\n\r\n        return (\r\n          <div class={optionClass} onMouseenter={this.handleMouseEnterOption} data-id={node.id}>\r\n            {this.renderArrow()}\r\n            {this.renderLabelContainer([\r\n              this.renderCheckboxContainer([\r\n                this.renderCheckbox(),\r\n              ]),\r\n              this.renderLabel(),\r\n            ])}\r\n          </div>\r\n        )\r\n      },\r\n\r\n      renderSubOptionsList() {\r\n        if (!this.shouldExpand) return null\r\n\r\n        return (\r\n          <div class=\"vue-treeselect__list\">\r\n            {this.renderSubOptions()}\r\n            {this.renderNoChildrenTip()}\r\n            {this.renderLoadingChildrenTip()}\r\n            {this.renderLoadingChildrenErrorTip()}\r\n          </div>\r\n        )\r\n      },\r\n\r\n      renderArrow() {\r\n        const { instance, node } = this\r\n\r\n        if (instance.shouldFlattenOptions && this.shouldShow) return null\r\n\r\n        if (node.isBranch) {\r\n          const transitionProps = {\r\n            props: {\r\n              name: 'vue-treeselect__option-arrow--prepare',\r\n              appear: true,\r\n            },\r\n          }\r\n          const arrowClass = {\r\n            'vue-treeselect__option-arrow': true,\r\n            'vue-treeselect__option-arrow--rotated': this.shouldExpand,\r\n          }\r\n\r\n          return (\r\n            <div class=\"vue-treeselect__option-arrow-container\" onMousedown={this.handleMouseDownOnArrow}>\r\n              <transition {...transitionProps}>\r\n                <ArrowIcon class={arrowClass} />\r\n              </transition>\r\n            </div>\r\n          )\r\n        }\r\n\r\n        // For leaf nodes, we render a placeholder to keep its label aligned to\r\n        // branch nodes. Unless there is no branch nodes at all (a normal\r\n        // non-tree select).\r\n        if (/*node.isLeaf && */instance.hasBranchNodes) {\r\n          if (!arrowPlaceholder) arrowPlaceholder = (\r\n            <div class=\"vue-treeselect__option-arrow-placeholder\">&nbsp;</div>\r\n          )\r\n\r\n          return arrowPlaceholder\r\n        }\r\n\r\n        return null\r\n      },\r\n\r\n      renderLabelContainer(children) {\r\n        return (\r\n          <div class=\"vue-treeselect__label-container\" onMousedown={this.handleMouseDownOnLabelContainer}>\r\n            {children}\r\n          </div>\r\n        )\r\n      },\r\n\r\n      renderCheckboxContainer(children) {\r\n        const { instance, node } = this\r\n\r\n        if (instance.single) return null\r\n        if (instance.disableBranchNodes && node.isBranch) return null\r\n\r\n        return (\r\n          <div class=\"vue-treeselect__checkbox-container\">\r\n            {children}\r\n          </div>\r\n        )\r\n      },\r\n\r\n      renderCheckbox() {\r\n        const { instance, node } = this\r\n        const checkedState = instance.forest.checkedStateMap[node.id]\r\n        const checkboxClass = {\r\n          'vue-treeselect__checkbox': true,\r\n          'vue-treeselect__checkbox--checked': checkedState === CHECKED,\r\n          'vue-treeselect__checkbox--indeterminate': checkedState === INDETERMINATE,\r\n          'vue-treeselect__checkbox--unchecked': checkedState === UNCHECKED,\r\n          'vue-treeselect__checkbox--disabled': node.isDisabled,\r\n        }\r\n\r\n        if (!checkMark) checkMark = (\r\n          <span class=\"vue-treeselect__check-mark\" />\r\n        )\r\n        if (!minusMark) minusMark = (\r\n          <span class=\"vue-treeselect__minus-mark\" />\r\n        )\r\n\r\n        return (\r\n          <span class={checkboxClass}>\r\n            {checkMark}\r\n            {minusMark}\r\n          </span>\r\n        )\r\n      },\r\n\r\n      renderLabel() {\r\n        const { instance, node } = this\r\n        const shouldShowCount = (\r\n          node.isBranch && (instance.localSearch.active\r\n            ? instance.showCountOnSearchComputed\r\n            : instance.showCount\r\n          )\r\n        )\r\n        const count = shouldShowCount\r\n          ? instance.localSearch.active\r\n            ? instance.localSearch.countMap[node.id][instance.showCountOf]\r\n            : node.count[instance.showCountOf]\r\n          : NaN\r\n        const labelClassName = 'vue-treeselect__label'\r\n        const countClassName = 'vue-treeselect__count'\r\n        const customLabelRenderer = instance.$scopedSlots['option-label']\r\n\r\n        if (customLabelRenderer) return customLabelRenderer({\r\n          node,\r\n          shouldShowCount,\r\n          count,\r\n          labelClassName,\r\n          countClassName,\r\n        })\r\n\r\n        return (\r\n          <label class={labelClassName}>\r\n            {node.label}\r\n            {shouldShowCount && (\r\n              <span class={countClassName}>({count})</span>\r\n            )}\r\n          </label>\r\n        )\r\n      },\r\n\r\n      renderSubOptions() {\r\n        const { node } = this\r\n\r\n        if (!node.childrenStates.isLoaded) return null\r\n\r\n        return node.children.map(childNode => (\r\n          <Option node={childNode} key={childNode.id} />\r\n        ))\r\n      },\r\n\r\n      renderNoChildrenTip() {\r\n        const { instance, node } = this\r\n\r\n        if (!node.childrenStates.isLoaded || node.children.length) return null\r\n\r\n        return (\r\n          <Tip type=\"no-children\" icon=\"warning\">{ instance.noChildrenText }</Tip>\r\n        )\r\n      },\r\n\r\n      renderLoadingChildrenTip() {\r\n        const { instance, node } = this\r\n\r\n        if (!node.childrenStates.isLoading) return null\r\n\r\n        return (\r\n          <Tip type=\"loading\" icon=\"loader\">{ instance.loadingText }</Tip>\r\n        )\r\n      },\r\n\r\n      renderLoadingChildrenErrorTip() {\r\n        const { instance, node } = this\r\n\r\n        if (!node.childrenStates.loadingError) return null\r\n\r\n        return (\r\n          <Tip type=\"error\" icon=\"error\">\r\n            { node.childrenStates.loadingError }\r\n            <a class=\"vue-treeselect__retry\" title={instance.retryTitle} onMousedown={this.handleMouseDownOnRetry}>\r\n              { instance.retryText }\r\n            </a>\r\n          </Tip>\r\n        )\r\n      },\r\n\r\n      handleMouseEnterOption(evt) {\r\n        const { instance, node } = this\r\n\r\n        // Equivalent to `self` modifier.\r\n        // istanbul ignore next\r\n        if (evt.target !== evt.currentTarget) return\r\n\r\n        instance.setCurrentHighlightedOption(node, false)\r\n      },\r\n\r\n      handleMouseDownOnArrow: onLeftClick(function handleMouseDownOnOptionArrow() {\r\n        const { instance, node } = this\r\n\r\n        instance.toggleExpanded(node)\r\n      }),\r\n\r\n      handleMouseDownOnLabelContainer: onLeftClick(function handleMouseDownOnLabelContainer() {\r\n        const { instance, node } = this\r\n\r\n        if (node.isBranch && instance.disableBranchNodes) {\r\n          instance.toggleExpanded(node)\r\n        } else {\r\n          instance.select(node)\r\n        }\r\n      }),\r\n\r\n      handleMouseDownOnRetry: onLeftClick(function handleMouseDownOnRetry() {\r\n        const { instance, node } = this\r\n\r\n        instance.loadChildrenOptions(node)\r\n      }),\r\n    },\r\n\r\n    render() {\r\n      const { node } = this\r\n      const indentLevel = this.instance.shouldFlattenOptions ? 0 : node.level\r\n      const listItemClass = {\r\n        'vue-treeselect__list-item': true,\r\n        [`vue-treeselect__indent-level-${indentLevel}`]: true,\r\n      }\r\n      const transitionProps = {\r\n        props: {\r\n          name: 'vue-treeselect__list--transition',\r\n        },\r\n      }\r\n\r\n      return (\r\n        <div class={listItemClass}>\r\n          {this.renderOption()}\r\n          {node.isBranch && (\r\n            <transition {...transitionProps}>\r\n              {this.renderSubOptionsList()}\r\n            </transition>\r\n          )}\r\n        </div>\r\n      )\r\n    },\r\n  }\r\n\r\n  // eslint-disable-next-line vue/require-direct-export\r\n  export default Option\r\n</script>\r\n","import { render, staticRenderFns } from \"./Arrow.vue?vue&type=template&id=5d5151cb\"\nimport script from \"./Arrow.vue?vue&type=script&lang=js\"\nexport * from \"./Arrow.vue?vue&type=script&lang=js\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var render, staticRenderFns\nimport script from \"./Control.vue?vue&type=script&lang=js\"\nexport * from \"./Control.vue?vue&type=script&lang=js\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","<script>\r\n  import { onLeftClick, isPromise } from '../utils'\r\n  import SingleValue from './SingleValue'\r\n  import MultiValue from './MultiValue'\r\n  import DeleteIcon from './icons/Delete'\r\n  import ArrowIcon from './icons/Arrow'\r\n\r\n  export default {\r\n    name: 'vue-treeselect--control',\r\n    inject: [ 'instance' ],\r\n\r\n    computed: {\r\n      /* eslint-disable valid-jsdoc */\r\n      /**\r\n       * Should show the \"×\" button that resets value?\r\n       * @return {boolean}\r\n       */\r\n      shouldShowX() {\r\n        const { instance } = this\r\n\r\n        return (\r\n          instance.clearable &&\r\n          !instance.disabled &&\r\n          instance.hasValue &&\r\n          (this.hasUndisabledValue || instance.allowClearingDisabled)\r\n        )\r\n      },\r\n\r\n      /**\r\n       * Should show the arrow button that toggles menu?\r\n       * @return {boolean}\r\n       */\r\n      shouldShowArrow() {\r\n        const { instance } = this\r\n\r\n        if (!instance.alwaysOpen) return true\r\n        // Even with `alwaysOpen: true`, sometimes the menu is still closed,\r\n        // e.g. when the control is disabled.\r\n        return !instance.menu.isOpen\r\n      },\r\n\r\n      /**\r\n       * Has any undisabled option been selected?\r\n       * @type {boolean}\r\n       */\r\n      hasUndisabledValue() {\r\n        const { instance } = this\r\n\r\n        return (\r\n          instance.hasValue &&\r\n          instance.internalValue.some(id => !instance.getNode(id).isDisabled)\r\n        )\r\n      },\r\n      /* eslint-enable valid-jsdoc */\r\n    },\r\n\r\n    methods: {\r\n      renderX() {\r\n        const { instance } = this\r\n        const title = instance.multiple ? instance.clearAllText : instance.clearValueText\r\n\r\n        if (!this.shouldShowX) return null\r\n\r\n        return (\r\n          <div class=\"vue-treeselect__x-container\" title={title} onMousedown={this.handleMouseDownOnX}>\r\n            <DeleteIcon class=\"vue-treeselect__x\" />\r\n          </div>\r\n        )\r\n      },\r\n\r\n      renderArrow() {\r\n        const { instance } = this\r\n        const arrowClass = {\r\n          'vue-treeselect__control-arrow': true,\r\n          'vue-treeselect__control-arrow--rotated': instance.menu.isOpen,\r\n        }\r\n\r\n        if (!this.shouldShowArrow) return null\r\n\r\n        return (\r\n          <div class=\"vue-treeselect__control-arrow-container\" onMousedown={this.handleMouseDownOnArrow}>\r\n            <ArrowIcon class={arrowClass} />\r\n          </div>\r\n        )\r\n      },\r\n\r\n      handleMouseDownOnX: onLeftClick(function handleMouseDownOnX(evt) {\r\n        /**\r\n         * We don't use async/await here because we don't want\r\n         * to rely on Babel polyfill or regenerator runtime.\r\n         * See: https://babeljs.io/docs/plugins/transform-regenerator/\r\n         * We also don't want to assume there is a global `Promise`\r\n         * class, since we are targeting to support IE9 without the\r\n         * need of any polyfill.\r\n         */\r\n\r\n        evt.stopPropagation()\r\n        evt.preventDefault()\r\n\r\n        const { instance } = this\r\n        const result = instance.beforeClearAll()\r\n        const handler = shouldClear => {\r\n          if (shouldClear) instance.clear()\r\n        }\r\n\r\n        if (isPromise(result)) {\r\n          // The handler will be called async.\r\n          result.then(handler)\r\n        } else {\r\n          // Keep the same behavior here.\r\n          setTimeout(() => handler(result), 0)\r\n          // Also, note that IE9 requires:\r\n          //   setTimeout(() => fn(...args), delay)\r\n          // Instead of:\r\n          //   setTimeout(fn, delay, ...args)\r\n        }\r\n      }),\r\n\r\n      handleMouseDownOnArrow: onLeftClick(function handleMouseDownOnArrow(evt) {\r\n        evt.preventDefault()\r\n        evt.stopPropagation()\r\n\r\n        const { instance } = this\r\n\r\n        const previouslyFocused = instance.trigger.isFocused\r\n        // Focus the input or prevent blurring.\r\n        instance.focusInput()\r\n\r\n        // If on openOnFocus is set to true and we gained focus now than do not call toggleMenu as it would close the menu\r\n        if (previouslyFocused || !instance.openOnFocus) instance.toggleMenu()\r\n      }),\r\n\r\n      // This is meant to be called by child `<Value />` component.\r\n      renderValueContainer(children) {\r\n        return (\r\n          <div class=\"vue-treeselect__value-container\">\r\n            {children}\r\n          </div>\r\n        )\r\n      },\r\n    },\r\n\r\n    render() {\r\n      const { instance } = this\r\n      const ValueContainer = instance.single ? SingleValue : MultiValue\r\n\r\n      return (\r\n        <div class=\"vue-treeselect__control\" onMousedown={instance.handleMouseDown}>\r\n          <ValueContainer ref=\"value-container\" />\r\n          {this.renderX()}\r\n          {this.renderArrow()}\r\n        </div>\r\n      )\r\n    },\r\n  }\r\n</script>\r\n","var render, staticRenderFns\nimport script from \"./Tip.vue?vue&type=script&lang=js\"\nexport * from \"./Tip.vue?vue&type=script&lang=js\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","<script>\r\n  export default {\r\n    name: 'vue-treeselect--tip',\r\n    functional: true,\r\n\r\n    props: {\r\n      type: {\r\n        type: String,\r\n        required: true,\r\n      },\r\n      icon: {\r\n        type: String,\r\n        required: true,\r\n      },\r\n    },\r\n\r\n    render(_, context) {\r\n      const { props, children } = context\r\n\r\n      return (\r\n        <div class={`vue-treeselect__tip vue-treeselect__${props.type}-tip`}>\r\n          <div class=\"vue-treeselect__icon-container\">\r\n            <span class={`vue-treeselect__icon-${props.icon}`} />\r\n          </div>\r\n          <span class={`vue-treeselect__tip-text vue-treeselect__${props.type}-tip-text`}>\r\n            {children}\r\n          </span>\r\n        </div>\r\n      )\r\n    },\r\n  }\r\n</script>\r\n","var render, staticRenderFns\nimport script from \"./Option.vue?vue&type=script&lang=js\"\nexport * from \"./Option.vue?vue&type=script&lang=js\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","<script>\r\n  import { MENU_BUFFER } from '../constants'\r\n  import { watchSize, setupResizeAndScrollEventListeners } from '../utils'\r\n  import Option from './Option'\r\n  import Tip from './Tip'\r\n\r\n  const directionMap = {\r\n    top: 'top',\r\n    bottom: 'bottom',\r\n    above: 'top',\r\n    below: 'bottom',\r\n  }\r\n\r\n  export default {\r\n    name: 'vue-treeselect--menu',\r\n    inject: [ 'instance' ],\r\n\r\n    computed: {\r\n      menuStyle() {\r\n        const { instance } = this\r\n\r\n        return {\r\n          maxHeight: instance.maxHeight + 'px',\r\n        }\r\n      },\r\n\r\n      menuContainerStyle() {\r\n        const { instance } = this\r\n\r\n        return {\r\n          zIndex: instance.appendToBody ? null : instance.zIndex,\r\n        }\r\n      },\r\n    },\r\n\r\n    watch: {\r\n      'instance.menu.isOpen'(newValue) {\r\n        if (newValue) {\r\n          // In case `openMenu()` is just called and the menu is not rendered yet.\r\n          this.$nextTick(this.onMenuOpen)\r\n        } else {\r\n          this.onMenuClose()\r\n        }\r\n      },\r\n    },\r\n\r\n    created() {\r\n      this.menuSizeWatcher = null\r\n      this.menuResizeAndScrollEventListeners = null\r\n    },\r\n\r\n    mounted() {\r\n      const { instance } = this\r\n\r\n      if (instance.menu.isOpen) this.$nextTick(this.onMenuOpen)\r\n    },\r\n\r\n    destroyed() {\r\n      this.onMenuClose()\r\n    },\r\n\r\n    methods: {\r\n      renderMenu() {\r\n        const { instance } = this\r\n\r\n        if (!instance.menu.isOpen) return null\r\n\r\n        return (\r\n          <div ref=\"menu\" class=\"vue-treeselect__menu\" onMousedown={instance.handleMouseDown} style={this.menuStyle}>\r\n            {this.renderBeforeList()}\r\n            {instance.async\r\n              ? this.renderAsyncSearchMenuInner()\r\n              : instance.localSearch.active\r\n                ? this.renderLocalSearchMenuInner()\r\n                : this.renderNormalMenuInner()}\r\n            {this.renderAfterList()}\r\n          </div>\r\n        )\r\n      },\r\n\r\n      renderBeforeList() {\r\n        const { instance } = this\r\n        const beforeListRenderer = instance.$scopedSlots['before-list']\r\n\r\n        return beforeListRenderer\r\n          ? beforeListRenderer()\r\n          : null\r\n      },\r\n\r\n      renderAfterList() {\r\n        const { instance } = this\r\n        const afterListRenderer = instance.$scopedSlots['after-list']\r\n\r\n        return afterListRenderer\r\n          ? afterListRenderer()\r\n          : null\r\n      },\r\n\r\n      renderNormalMenuInner() {\r\n        const { instance } = this\r\n\r\n        if (instance.rootOptionsStates.isLoading) {\r\n          return this.renderLoadingOptionsTip()\r\n        } else if (instance.rootOptionsStates.loadingError) {\r\n          return this.renderLoadingRootOptionsErrorTip()\r\n        } else if (instance.rootOptionsStates.isLoaded && instance.forest.normalizedOptions.length === 0) {\r\n          return this.renderNoAvailableOptionsTip()\r\n        } else {\r\n          return this.renderOptionList()\r\n        }\r\n      },\r\n\r\n      renderLocalSearchMenuInner() {\r\n        const { instance } = this\r\n\r\n        if (instance.rootOptionsStates.isLoading) {\r\n          return this.renderLoadingOptionsTip()\r\n        } else if (instance.rootOptionsStates.loadingError) {\r\n          return this.renderLoadingRootOptionsErrorTip()\r\n        } else if (instance.rootOptionsStates.isLoaded && instance.forest.normalizedOptions.length === 0) {\r\n          return this.renderNoAvailableOptionsTip()\r\n        } else if (instance.localSearch.noResults) {\r\n          return this.renderNoResultsTip()\r\n        } else {\r\n          return this.renderOptionList()\r\n        }\r\n      },\r\n\r\n      renderAsyncSearchMenuInner() {\r\n        const { instance } = this\r\n        const entry = instance.getRemoteSearchEntry()\r\n        const shouldShowSearchPromptTip = instance.trigger.searchQuery === '' && !instance.defaultOptions\r\n        const shouldShowNoResultsTip = shouldShowSearchPromptTip\r\n          ? false\r\n          : entry.isLoaded && entry.options.length === 0\r\n\r\n        if (shouldShowSearchPromptTip) {\r\n          return this.renderSearchPromptTip()\r\n        } else if (entry.isLoading) {\r\n          return this.renderLoadingOptionsTip()\r\n        } else if (entry.loadingError) {\r\n          return this.renderAsyncSearchLoadingErrorTip()\r\n        } else if (shouldShowNoResultsTip) {\r\n          return this.renderNoResultsTip()\r\n        } else {\r\n          return this.renderOptionList()\r\n        }\r\n      },\r\n\r\n      renderOptionList() {\r\n        const { instance } = this\r\n\r\n        return (\r\n          <div class=\"vue-treeselect__list\">\r\n            {instance.forest.normalizedOptions.map(rootNode => (\r\n              <Option node={rootNode} key={rootNode.id} />\r\n            ))}\r\n          </div>\r\n        )\r\n      },\r\n\r\n      renderSearchPromptTip() {\r\n        const { instance } = this\r\n\r\n        return (\r\n          <Tip type=\"search-prompt\" icon=\"warning\">{ instance.searchPromptText }</Tip>\r\n        )\r\n      },\r\n\r\n      renderLoadingOptionsTip() {\r\n        const { instance } = this\r\n\r\n        return (\r\n          <Tip type=\"loading\" icon=\"loader\">{ instance.loadingText }</Tip>\r\n        )\r\n      },\r\n\r\n      renderLoadingRootOptionsErrorTip() {\r\n        const { instance } = this\r\n\r\n        return (\r\n          <Tip type=\"error\" icon=\"error\">\r\n            { instance.rootOptionsStates.loadingError }\r\n            <a class=\"vue-treeselect__retry\" onClick={instance.loadRootOptions} title={instance.retryTitle}>\r\n              { instance.retryText }\r\n            </a>\r\n          </Tip>\r\n        )\r\n      },\r\n\r\n      renderAsyncSearchLoadingErrorTip() {\r\n        const { instance } = this\r\n        const entry = instance.getRemoteSearchEntry()\r\n\r\n        // TODO: retryTitle?\r\n\r\n        return (\r\n          <Tip type=\"error\" icon=\"error\">\r\n            { entry.loadingError }\r\n            <a class=\"vue-treeselect__retry\" onClick={instance.handleRemoteSearch} title={instance.retryTitle}>\r\n              { instance.retryText }\r\n            </a>\r\n          </Tip>\r\n        )\r\n      },\r\n\r\n      renderNoAvailableOptionsTip() {\r\n        const { instance } = this\r\n\r\n        return (\r\n          <Tip type=\"no-options\" icon=\"warning\">{ instance.noOptionsText }</Tip>\r\n        )\r\n      },\r\n\r\n      renderNoResultsTip() {\r\n        const { instance } = this\r\n\r\n        return (\r\n          <Tip type=\"no-results\" icon=\"warning\">{ instance.noResultsText }</Tip>\r\n        )\r\n      },\r\n\r\n      onMenuOpen() {\r\n        this.adjustMenuOpenDirection()\r\n        this.setupMenuSizeWatcher()\r\n        this.setupMenuResizeAndScrollEventListeners()\r\n      },\r\n\r\n      onMenuClose() {\r\n        this.removeMenuSizeWatcher()\r\n        this.removeMenuResizeAndScrollEventListeners()\r\n      },\r\n\r\n      adjustMenuOpenDirection() {\r\n        const { instance } = this\r\n        if (!instance.menu.isOpen) return\r\n\r\n        const $menu = instance.getMenu()\r\n        const $control = instance.getControl()\r\n        const menuRect = $menu.getBoundingClientRect()\r\n        const controlRect = $control.getBoundingClientRect()\r\n        const menuHeight = menuRect.height\r\n        const viewportHeight = window.innerHeight\r\n        const spaceAbove = controlRect.top\r\n        const spaceBelow = window.innerHeight - controlRect.bottom\r\n        const isControlInViewport = (\r\n          (controlRect.top >= 0 && controlRect.top <= viewportHeight) ||\r\n          (controlRect.top < 0 && controlRect.bottom > 0)\r\n        )\r\n        const hasEnoughSpaceBelow = spaceBelow > menuHeight + MENU_BUFFER\r\n        const hasEnoughSpaceAbove = spaceAbove > menuHeight + MENU_BUFFER\r\n\r\n        if (!isControlInViewport) {\r\n          instance.closeMenu()\r\n        } else if (instance.openDirection !== 'auto') {\r\n          instance.menu.placement = directionMap[instance.openDirection]\r\n        } else if (hasEnoughSpaceBelow || !hasEnoughSpaceAbove) {\r\n          instance.menu.placement = 'bottom'\r\n        } else {\r\n          instance.menu.placement = 'top'\r\n        }\r\n      },\r\n\r\n      setupMenuSizeWatcher() {\r\n        const { instance } = this\r\n        const $menu = instance.getMenu()\r\n\r\n        // istanbul ignore next\r\n        if (this.menuSizeWatcher) return\r\n\r\n        this.menuSizeWatcher = {\r\n          remove: watchSize($menu, this.adjustMenuOpenDirection),\r\n        }\r\n      },\r\n\r\n      setupMenuResizeAndScrollEventListeners() {\r\n        const { instance } = this\r\n        const $control = instance.getControl()\r\n\r\n        // istanbul ignore next\r\n        if (this.menuResizeAndScrollEventListeners) return\r\n\r\n        this.menuResizeAndScrollEventListeners = {\r\n          remove: setupResizeAndScrollEventListeners($control, this.adjustMenuOpenDirection),\r\n        }\r\n      },\r\n\r\n      removeMenuSizeWatcher() {\r\n        if (!this.menuSizeWatcher) return\r\n\r\n        this.menuSizeWatcher.remove()\r\n        this.menuSizeWatcher = null\r\n      },\r\n\r\n      removeMenuResizeAndScrollEventListeners() {\r\n        if (!this.menuResizeAndScrollEventListeners) return\r\n\r\n        this.menuResizeAndScrollEventListeners.remove()\r\n        this.menuResizeAndScrollEventListeners = null\r\n      },\r\n    },\r\n\r\n    render() {\r\n      return (\r\n        <div ref=\"menu-container\" class=\"vue-treeselect__menu-container\" style={this.menuContainerStyle}>\r\n          <transition name=\"vue-treeselect__menu--transition\">\r\n            {this.renderMenu()}\r\n          </transition>\r\n        </div>\r\n      )\r\n    },\r\n  }\r\n</script>\r\n","var render, staticRenderFns\nimport script from \"./Menu.vue?vue&type=script&lang=js\"\nexport * from \"./Menu.vue?vue&type=script&lang=js\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","<script>\r\n  import Vue from 'vue'\r\n  import { watchSize, setupResizeAndScrollEventListeners, find } from '../utils'\r\n  import Menu from './Menu'\r\n\r\n  const PortalTarget = {\r\n    name: 'vue-treeselect--portal-target',\r\n    inject: [ 'instance' ],\r\n\r\n    watch: {\r\n      'instance.menu.isOpen'(newValue) {\r\n        if (newValue) {\r\n          this.setupHandlers()\r\n        } else {\r\n          this.removeHandlers()\r\n        }\r\n      },\r\n\r\n      'instance.menu.placement'() {\r\n        this.updateMenuContainerOffset()\r\n      },\r\n    },\r\n\r\n    created() {\r\n      this.controlResizeAndScrollEventListeners = null\r\n      this.controlSizeWatcher = null\r\n    },\r\n\r\n    mounted() {\r\n      const { instance } = this\r\n\r\n      if (instance.menu.isOpen) this.setupHandlers()\r\n    },\r\n\r\n    methods: {\r\n      setupHandlers() {\r\n        this.updateWidth()\r\n        this.updateMenuContainerOffset()\r\n        this.setupControlResizeAndScrollEventListeners()\r\n        this.setupControlSizeWatcher()\r\n      },\r\n\r\n      removeHandlers() {\r\n        this.removeControlResizeAndScrollEventListeners()\r\n        this.removeControlSizeWatcher()\r\n      },\r\n\r\n      setupControlResizeAndScrollEventListeners() {\r\n        const { instance } = this\r\n        const $control = instance.getControl()\r\n\r\n        // istanbul ignore next\r\n        if (this.controlResizeAndScrollEventListeners) return\r\n\r\n        this.controlResizeAndScrollEventListeners = {\r\n          remove: setupResizeAndScrollEventListeners($control, this.updateMenuContainerOffset),\r\n        }\r\n      },\r\n\r\n      setupControlSizeWatcher() {\r\n        const { instance } = this\r\n        const $control = instance.getControl()\r\n\r\n        // istanbul ignore next\r\n        if (this.controlSizeWatcher) return\r\n\r\n        this.controlSizeWatcher = {\r\n          remove: watchSize($control, () => {\r\n            this.updateWidth()\r\n            this.updateMenuContainerOffset()\r\n          }),\r\n        }\r\n      },\r\n\r\n      removeControlResizeAndScrollEventListeners() {\r\n        if (!this.controlResizeAndScrollEventListeners) return\r\n\r\n        this.controlResizeAndScrollEventListeners.remove()\r\n        this.controlResizeAndScrollEventListeners = null\r\n      },\r\n\r\n      removeControlSizeWatcher() {\r\n        if (!this.controlSizeWatcher) return\r\n\r\n        this.controlSizeWatcher.remove()\r\n        this.controlSizeWatcher = null\r\n      },\r\n\r\n      updateWidth() {\r\n        const { instance } = this\r\n        const $portalTarget = this.$el\r\n        const $control = instance.getControl()\r\n        const controlRect = $control.getBoundingClientRect()\r\n\r\n        $portalTarget.style.width = controlRect.width + 'px'\r\n      },\r\n\r\n      updateMenuContainerOffset() {\r\n        const { instance } = this\r\n        const $control = instance.getControl()\r\n        const $portalTarget = this.$el\r\n        const controlRect = $control.getBoundingClientRect()\r\n        const portalTargetRect = $portalTarget.getBoundingClientRect()\r\n        const offsetY = instance.menu.placement === 'bottom' ? controlRect.height : 0\r\n        const left = Math.round(controlRect.left - portalTargetRect.left) + 'px'\r\n        const top = Math.round(controlRect.top - portalTargetRect.top + offsetY) + 'px'\r\n        const menuContainerStyle = this.$refs.menu.$refs['menu-container'].style\r\n        const transformVariations = [ 'transform', 'webkitTransform', 'MozTransform', 'msTransform' ]\r\n        const transform = find(transformVariations, t => t in document.body.style)\r\n\r\n        // IE9 doesn't support `translate3d()`.\r\n        menuContainerStyle[transform] = `translate(${left}, ${top})`\r\n      },\r\n    },\r\n\r\n    render() {\r\n      const { instance } = this\r\n      const portalTargetClass = [ 'vue-treeselect__portal-target', instance.wrapperClass ]\r\n      const portalTargetStyle = { zIndex: instance.zIndex }\r\n\r\n      return (\r\n        <div class={portalTargetClass} style={portalTargetStyle} data-instance-id={instance.getInstanceId()}>\r\n          <Menu ref=\"menu\" />\r\n        </div>\r\n      )\r\n    },\r\n\r\n    destroyed() {\r\n      this.removeHandlers()\r\n    },\r\n  }\r\n\r\n  let placeholder\r\n\r\n  export default {\r\n    name: 'vue-treeselect--menu-portal',\r\n\r\n    created() {\r\n      this.portalTarget = null\r\n    },\r\n\r\n    mounted() {\r\n      this.setup()\r\n    },\r\n\r\n    destroyed() {\r\n      this.teardown()\r\n    },\r\n\r\n    methods: {\r\n      setup() {\r\n        const el = document.createElement('div')\r\n        document.body.appendChild(el)\r\n\r\n        this.portalTarget = new Vue({\r\n          el,\r\n          parent: this,\r\n          ...PortalTarget,\r\n        })\r\n      },\r\n\r\n      teardown() {\r\n        document.body.removeChild(this.portalTarget.$el)\r\n        this.portalTarget.$el.innerHTML = ''\r\n\r\n        this.portalTarget.$destroy()\r\n        this.portalTarget = null\r\n        this.placeholder = null\r\n      },\r\n    },\r\n\r\n    render() {\r\n      if (!placeholder) placeholder = (\r\n        <div class=\"vue-treeselect__menu-placeholder\" />\r\n      )\r\n\r\n      return placeholder\r\n    },\r\n  }\r\n</script>\r\n","var render, staticRenderFns\nimport script from \"./MenuPortal.vue?vue&type=script&lang=js\"\nexport * from \"./MenuPortal.vue?vue&type=script&lang=js\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var render, staticRenderFns\nimport script from \"./Treeselect.vue?vue&type=script&lang=js\"\nexport * from \"./Treeselect.vue?vue&type=script&lang=js\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","<script>\r\n  import treeselectMixin from '../mixins/treeselectMixin'\r\n  import HiddenFields from './HiddenFields'\r\n  import Control from './Control'\r\n  import Menu from './Menu'\r\n  import MenuPortal from './MenuPortal'\r\n\r\n  export default {\r\n    name: 'vue-treeselect',\r\n    mixins: [ treeselectMixin ],\r\n\r\n    computed: {\r\n      wrapperClass() {\r\n        return {\r\n          'vue-treeselect': true,\r\n          'vue-treeselect--single': this.single,\r\n          'vue-treeselect--multi': this.multiple,\r\n          'vue-treeselect--searchable': this.searchable,\r\n          'vue-treeselect--disabled': this.disabled,\r\n          'vue-treeselect--focused': this.trigger.isFocused,\r\n          'vue-treeselect--has-value': this.hasValue,\r\n          'vue-treeselect--open': this.menu.isOpen,\r\n          'vue-treeselect--open-above': this.menu.placement === 'top',\r\n          'vue-treeselect--open-below': this.menu.placement === 'bottom',\r\n          'vue-treeselect--branch-nodes-disabled': this.disableBranchNodes,\r\n          'vue-treeselect--append-to-body': this.appendToBody,\r\n        }\r\n      },\r\n    },\r\n\r\n    render() {\r\n      return (\r\n        <div ref=\"wrapper\" class={this.wrapperClass}>\r\n          <HiddenFields />\r\n          <Control ref=\"control\" />\r\n          {this.appendToBody ? <MenuPortal ref=\"portal\" /> : <Menu ref=\"menu\" />}\r\n        </div>\r\n      )\r\n    },\r\n  }\r\n</script>\r\n","import Treeselect from './components/Treeselect'\r\nimport treeselectMixin from './mixins/treeselectMixin'\r\nimport './style.less'\r\n\r\nexport default Treeselect\r\nexport { Treeselect, treeselectMixin }\r\nexport {\r\n  // Delayed loading.\r\n  LOAD_ROOT_OPTIONS,\r\n  LOAD_CHILDREN_OPTIONS,\r\n  ASYNC_SEARCH,\r\n} from './constants'\r\n\r\nexport const VERSION = PKG_VERSION\r\n"],"sourceRoot":""}